{"version":3,"file":"static/js/3177.ba96c6ac.chunk.js","mappings":"0MAeA,MAAMA,EAAgBC,IACpB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAqB,IA6BzDC,EAAc,SAACC,GAAyC,IAA1BC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACrD,GAAc,IAAVF,EAAa,MAAO,UACxB,MACMK,EAAKJ,EAAW,EAAI,EAAIA,EAGxBK,EAAIC,KAAKC,MAAMD,KAAKE,IAAIT,GAASO,KAAKE,IAJlC,OAKV,OAAOC,YAAYV,EAAQO,KAAKI,IALtB,KAK6BL,IAAIM,QAAQP,IAAO,IAH5C,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGIC,EACxE,EAYA,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,IACHtB,EACJuB,OAASC,GAhDcC,KAC3B,IAAIC,EAAWD,EAEXzB,EAAM2B,eACPF,GAAS,IAAIG,KAAKC,GACjBC,OAAOC,OAAOF,EAAM,CAClBG,QACiC,UAA/BH,EAAW,KAAEI,MAAM,KAAK,GACpBC,IAAIC,gBAAgBN,GACpB,KACNO,cAAehC,EAAYyB,EAAKQ,WAGpCX,EAAW,IAAIzB,IACNqC,QAAQb,GACjBvB,EAAiBwB,IAGf1B,EAAMuC,cAAcvC,EAAMuC,aAAab,EAAS,EA8BrBc,CAAoBhB,GAAeJ,SAE7DqB,IAAA,IAAC,aAAEC,EAAY,cAAEC,GAAeF,EAAA,OAC/BpB,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,WAAUxB,UACvBF,EAAAA,EAAAA,MAAA,OAAK0B,UAAU,2BAA4BF,IAActB,SAAA,EACvDC,EAAAA,EAAAA,KAAA,YAAWsB,OACXtB,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,0CACbvB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yCACJF,EAAAA,EAAAA,MAAA,QAAM0B,UAAU,qBAAoBxB,SAAA,CAAC,oDACe,KAClDC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,QAAY,8BAGpB,IAITpB,EAAM2B,cACLN,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,yBAAyBC,GAAG,wBAAuBzB,UAC9DnB,GAAiB,IAAI2B,KAAI,CAACkB,EAAGnC,KAE3BU,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAACH,UAAU,+BAA8BxB,UAC5CC,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,MAAKxB,UAClBF,EAAAA,EAAAA,MAAC8B,EAAAA,EAAG,CAACJ,UAAU,qBAAoBxB,SAAA,CAChC0B,EAAEd,UACDX,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAACL,UAAU,WAAUxB,UACvBC,EAAAA,EAAAA,KAAA,OACE,oBAAkB,GAClBuB,UAAU,6BACVM,IAAKJ,EAAEK,KACPC,IAAKN,EAAEd,aAIXc,EAAEd,UACFX,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAACL,UAAU,WAAUxB,UACvBC,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,YAAWxB,UACxBC,EAAAA,EAAAA,KAAA,QAAMuB,UAAU,kCAAiCxB,SAC9C0B,EAAEO,KAAKpB,MAAM,KAAK,UAK3Bf,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACL,UAAU,OAAMxB,SAAA,EACnBC,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAACC,GAAG,IAAIX,UAAU,qBAAoBxB,SACxC0B,EAAEK,QAEL9B,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,OAAMxB,UACjBC,EAAAA,EAAAA,KAAA,UAAAD,SAAS0B,EAAEV,sBAGff,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAACL,UAAU,WAAUxB,UACvBC,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CACHC,GAAG,IACHX,UAAU,6CAA4CxB,UAEtDC,EAAAA,EAAAA,KAAA,KACEuB,UAAU,kBACVY,QAASA,IArEbC,KAClB,MAAMC,EAAW,IAAIzD,GACrByD,EAASC,OAAOF,EAAW,GAC3BvD,EAAiBwD,GACb1D,EAAMuC,cAAcvC,EAAMuC,aAAamB,EAAS,EAiEfE,CAAWjD,eArCcA,EAAI,eAgD/D,EAIPZ,EAAa8D,aAAe,CAC1BlC,aAAa,GAGf,S,uGCjIA,MA6BA,EA7BmB3B,IAEfqB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAA5B,UACFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAAA7B,UACFF,EAAAA,EAAAA,MAAA,OAAK0B,UAAU,iBAAgBxB,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,mBAAkBxB,UAC/BF,EAAAA,EAAAA,MAAC4C,EAAAA,EAAU,CAAClB,UAAU,MAAKxB,SAAA,EACzBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAAA,KAAe,CAACC,KAAK,IAAG3C,SAAC,eAExBpB,EAAuB,iBAAK,IAAI4B,KAAI,CAACoC,EAAMC,IACpCD,EAAKE,QACV7C,EAAAA,EAAAA,KAACyC,EAAAA,EAAAA,KAAe,CAACI,QAAM,EAAA9C,SACpB4C,EAAKG,OADqBF,IAI7B5C,EAAAA,EAAAA,KAACyC,EAAAA,EAAAA,KAAe,CAAaC,KAAMC,EAAKI,KAAKhD,SAC1C4C,EAAKG,OADcF,WAO9B5C,EAAAA,EAAAA,KAAA,MAAIuB,UAAU,aAAYxB,SAAEpB,EAAa,c,2IChCnD,MAmCA,EAnCmBqE,KAEfnD,EAAAA,EAAAA,MAACoD,EAAAA,SAAc,CAAAlD,SAAA,EACbC,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEL,MAAO,QAASC,KAAM,iBACxB,CAAED,MAAO,cAAeC,KAAM,gBAAiBF,QAAQ,IAEzDO,MAAO,iBAGTpD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAA5B,UACFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAAA7B,UACFC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAA3B,UACHF,EAAAA,EAAAA,MAAC6B,EAAAA,EAAAA,KAAS,CAAA3B,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAIuB,UAAU,oBAAmBxB,SAAC,0BAElCC,EAAAA,EAAAA,KAAA,KAAGuB,UAAU,4BAA2BxB,SAAC,gHAKzCC,EAAAA,EAAAA,KAACtB,EAAAA,EAAY,CACXwC,aAAed,IACbiD,QAAQ5D,IAAI,oBAAqBW,EAAM,e,+BCtBzD,IAAIkD,EAAuBC,EAAQ,OAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKlF,EAAOmF,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIrC,KAAO,sBACLqC,CAPN,CAQF,CAEA,SAASE,IACP,OAAOR,CACT,CAHAA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTa,QAASrB,EACTsB,YAAatB,EACbuB,WAAYf,EACZgB,KAAMxB,EACNyB,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAeqB,UAAYrB,EAEpBA,CACT,C,kBC/CEZ,EAAOC,QAAUL,EAAQ,MAARA,E,yBCNnBI,EAAOC,QAFoB,8C,gDCR3B,MAAMiC,E,SAAuB5C,cAAoB,MACjD4C,EAAQC,YAAc,oBACtB,S,wECHIC,EAAU,Q,qCCMd,MAAMC,EAAaC,IAAOA,SAAI,GAAGC,eDLApB,ECKyBmB,EDJjDnB,EAAOqB,QAAQJ,GAAS,SAAUK,EAAGC,GAC1C,OAAOA,EAAIH,aACb,KCE6DI,MAAM,GDLtD,IAAkBxB,CCKsC,EAGxD,SAASyB,EAAmBC,GAInC,IAJ2C,YACjDV,EAAcE,EAAWQ,GAAO,UAChCC,EAAS,aACTjE,GACDtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAMwH,EAA2BzD,EAAAA,YAAiB,CAAA7B,EAK/CuF,KAAQ,IALwC,UACjDpF,EAAS,SACTqF,EACAC,GAAIC,EAAML,GAAa,SACpB9H,GACJyC,EACC,MAAM2F,GAAiBC,EAAAA,EAAAA,IAAmBJ,EAAUJ,GACpD,OAAoBxG,EAAAA,EAAAA,KAAK8G,EAAK,CAC5BH,IAAKA,EACLpF,UAAW0F,IAAW1F,EAAWwF,MAC9BpI,GACH,IAIJ,OAFA+H,EAAYlE,aAAeA,EAC3BkE,EAAYZ,YAAcA,EACnBY,CACT,C","sources":["components/FileUploader.tsx","components/PageTitle.tsx","pages/forms/FileUpload.tsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\n\ninterface FileType extends File {\n  preview?: string;\n  formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n  onFileUpload?: (files: FileType[]) => void;\n  showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n  const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n  /**\n   * Handled the accepted files and shows the preview\n   */\n  const handleAcceptedFiles = (files: FileType[]) => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map((file) =>\n        Object.assign(file, {\n          preview:\n            file[\"type\"].split(\"/\")[0] === \"image\"\n              ? URL.createObjectURL(file)\n              : null,\n          formattedSize: formatBytes(file.size),\n        })\n      );\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n\n  /**\n   * Formats the size\n   */\n  const formatBytes = (bytes: number, decimals: number = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  /*\n   * Removes the selected file\n   */\n  const removeFile = (fileIndex: number) => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return (\n    <>\n      <Dropzone\n        {...props}\n        onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div className=\"dropzone\">\n            <div className=\"dz-message needsclick\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i className=\"h3 text-muted dripicons-cloud-upload\"></i>\n              <h4>Drop files here or click to upload.</h4>\n              <span className=\"text-muted font-13\">\n                (This is just a demo dropzone. Selected files are{\" \"}\n                <strong>not</strong> actually uploaded.)\n              </span>\n            </div>\n          </div>\n        )}\n      </Dropzone>\n\n      {props.showPreview && (\n        <div className=\"dropzone-previews mt-3\" id=\"uploadPreviewTemplate\">\n          {(selectedFiles || []).map((f, i) => {\n            return (\n              <Card className=\"mt-1 mb-0 shadow-none border\" key={i + \"-file\"}>\n                <div className=\"p-2\">\n                  <Row className=\"align-items-center\">\n                    {f.preview && (\n                      <Col className=\"col-auto\">\n                        <img\n                          data-dz-thumbnail=\"\"\n                          className=\"avatar-sm rounded bg-light\"\n                          alt={f.name}\n                          src={f.preview}\n                        />\n                      </Col>\n                    )}\n                    {!f.preview && (\n                      <Col className=\"col-auto\">\n                        <div className=\"avatar-sm\">\n                          <span className=\"avatar-title bg-primary rounded\">\n                            {f.type.split(\"/\")[0]}\n                          </span>\n                        </div>\n                      </Col>\n                    )}\n                    <Col className=\"ps-0\">\n                      <Link to=\"#\" className=\"text-muted fw-bold\">\n                        {f.name}\n                      </Link>\n                      <p className=\"mb-0\">\n                        <strong>{f.formattedSize}</strong>\n                      </p>\n                    </Col>\n                    <Col className=\"text-end\">\n                      <Link\n                        to=\"#\"\n                        className=\"btn btn-link btn-lg text-muted shadow-none\"\n                      >\n                        <i\n                          className=\"dripicons-cross\"\n                          onClick={() => removeFile(i)}\n                        ></i>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nFileUploader.defaultProps = {\n  showPreview: true,\n};\n\nexport default FileUploader;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport FileUploader from \"../../components/FileUploader\";\n\nconst FileUpload = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/upload\" },\n          { label: \"Form Upload\", path: \"/forms/upload\", active: true },\n        ]}\n        title={\"Form Upload\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title mb-3\">Dropzone File Upload</h4>\n\n              <p className=\"text-muted font-13 m-b-30\">\n                DropzoneJS is an open source library that provides drag’n’drop\n                file uploads with image previews.\n              </p>\n\n              <FileUploader\n                onFileUpload={(files) => {\n                  console.log(\"Uploaded files - \", files);\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FileUpload;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["FileUploader","props","selectedFiles","setSelectedFiles","useState","formatBytes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","_jsxs","_Fragment","children","_jsx","Dropzone","onDrop","acceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","size","push","onFileUpload","handleAcceptedFiles","_ref","getRootProps","getInputProps","className","id","f","Card","Row","Col","alt","name","src","type","Link","to","onClick","fileIndex","newFiles","splice","removeFile","defaultProps","Breadcrumb","href","item","index","active","label","path","FileUpload","React","PageTitle","breadCrumbItems","title","console","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","context","displayName","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","prefix","Component","BsComponent","ref","bsPrefix","as","Tag","resolvedPrefix","useBootstrapPrefix","classNames"],"sourceRoot":""}