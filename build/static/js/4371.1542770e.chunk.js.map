{"version":3,"file":"static/js/4371.1542770e.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/apps/CRM/Properties/Detail/PropertyStatistics.tsx","pages/apps/CRM/Properties/Detail/PropertyManagers.tsx","pages/apps/CRM/Properties/Detail/UserAvatar.tsx","pages/apps/CRM/Properties/Detail/TenantCommunications.tsx","pages/apps/CRM/Properties/Detail/PropertyDocuments.tsx","pages/apps/CRM/Properties/Detail/PropertyDetails.tsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsProps {\n  totalUnits: number;\n  occupiedUnits: number;\n  monthlyRevenue: number;\n  maintenanceRequests: number;\n  tenantSatisfaction: number;\n}\n\nconst PropertyStatistics: React.FC<StatisticsProps> = ({\n  totalUnits,\n  occupiedUnits,\n  monthlyRevenue,\n  maintenanceRequests,\n  tenantSatisfaction\n}) => {\n  const occupancyRate = (occupiedUnits / totalUnits) * 100;\n\n  const statistics = [\n    {\n      icon: \"fe-home\",\n      variant: \"primary\",\n      title: \"Total Units\",\n      stats: totalUnits,\n      description: `${occupiedUnits} occupied`,\n    },\n    {\n      icon: \"fe-pie-chart\",\n      variant: \"success\",\n      title: \"Occupancy Rate\",\n      stats: occupancyRate.toFixed(1),\n      description: \"% of units occupied\",\n    },\n    {\n      icon: \"fe-dollar-sign\",\n      variant: \"info\",\n      title: \"Monthly Revenue\",\n      stats: monthlyRevenue,\n      description: \"KES\",\n    },\n    {\n      icon: \"fe-clipboard\",\n      variant: \"warning\",\n      title: \"Maintenance Requests\",\n      stats: maintenanceRequests,\n      description: \"open requests\",\n    },\n    {\n      icon: \"fe-smile\",\n      variant: \"danger\",\n      title: \"Tenant Satisfaction\",\n      stats: tenantSatisfaction,\n      description: \"out of 5\",\n    }\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Property Statistics</h4>\n        <Row>\n          {statistics.map((stat, index) => (\n            <Col key={index} sm={6} xl={index < 3 ? 4 : 6}>\n              <Card className=\"widget-flat\">\n                <Card.Body>\n                  <div className=\"float-end\">\n                    <i className={`${stat.icon} widget-icon bg-light-${stat.variant} rounded-circle text-${stat.variant}`}></i>\n                  </div>\n                  <h5 className={`text-muted font-weight-normal mt-0`} title={stat.title}>\n                    {stat.title}\n                  </h5>\n                  <h3 className=\"mt-3 mb-3\">\n                    <CountUp \n                      end={Number(stat.stats)} \n                      separator=\",\" \n                      duration={2} \n                      decimals={stat.title === \"Occupancy Rate\" || stat.title === \"Tenant Satisfaction\" ? 1 : 0}\n                    />\n                    {stat.title === \"Occupancy Rate\" && \"%\"}\n                    {stat.title === \"Monthly Revenue\" && \" KES\"}\n                  </h3>\n                  <p className=\"mb-0 text-muted\">\n                    <span className=\"text-nowrap\">{stat.description}</span>\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PropertyStatistics;","import React from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\ninterface PropertyManager {\n  id?: number;\n  name: string;\n  image: string;\n  role?: string;\n  email?: string;\n  phone?: string;\n  properties?: number;\n}\n\ninterface PropertyManagersProps {\n  managers: PropertyManager[];\n}\n\nconst PropertyManagers: React.FC<PropertyManagersProps> = ({ managers }) => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Property Managers</h4>\n        {managers.map((manager, index) => (\n          <Row key={index} className=\"align-items-center mb-4\">\n            <Col sm={2}>\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip id={`tooltip-${index}`}>{manager.name}</Tooltip>}\n              >\n                <img\n                  src={manager.image}\n                  alt={manager.name}\n                  className=\"rounded-circle img-thumbnail avatar-lg\"\n                />\n              </OverlayTrigger>\n            </Col>\n            <Col sm={5}>\n              <h5 className=\"mb-1\">{manager.name}</h5>\n              {manager.role && <p className=\"mb-0\">{manager.role}</p>}\n              {manager.properties && <small className=\"text-muted\">Managing {manager.properties} properties</small>}\n            </Col>\n            <Col sm={5} className=\"text-sm-end mt-3 mt-sm-0\">\n              {manager.email && (\n                <Button variant=\"outline-primary\" size=\"sm\" className=\"me-2\">\n                  <i className=\"mdi mdi-email-outline me-1\"></i>Email\n                </Button>\n              )}\n              {manager.phone && (\n                <Button variant=\"outline-info\" size=\"sm\">\n                  <i className=\"mdi mdi-phone me-1\"></i>Call\n                </Button>\n              )}\n            </Col>\n          </Row>\n        ))}\n        <Button variant=\"primary\" className=\"w-100 mt-2\">\n          Assign Task to Manager\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PropertyManagers;","import React from 'react';\n\ninterface UserAvatarProps {\n  src: string;\n  alt: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst UserAvatar: React.FC<UserAvatarProps> = ({ src, alt, size = 'md', className = '' }) => {\n  const sizeClass = {\n    sm: 'avatar-sm',\n    md: 'avatar-md',\n    lg: 'avatar-lg'\n  }[size];\n\n  return (\n    <img \n      src={src} \n      alt={alt} \n      className={`rounded-circle ${sizeClass} ${className}`}\n    />\n  );\n};\n\nexport default UserAvatar;","import React, { useState } from \"react\";\nimport { Card, Dropdown, Form, Button, Badge } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport UserAvatar from \"./UserAvatar\";\n\ninterface Communication {\n  id: number;\n  type: 'announcement' | 'maintenance' | 'inquiry';\n  sender: {\n    name: string;\n    avatar: string;\n    role: 'tenant' | 'manager';\n  };\n  message: string;\n  timestamp: string;\n  status?: 'open' | 'in-progress' | 'resolved';\n}\n\ninterface TenantCommunicationsProps {\n  propertyId: number;\n}\n\nconst TenantCommunications: React.FC<TenantCommunicationsProps> = ({ propertyId }) => {\n  const [communications, setCommunications] = useState<Communication[]>([\n    {\n      id: 1,\n      type: 'announcement',\n      sender: {\n        name: \"Property Manager\",\n        avatar: \"/path/to/manager-avatar.jpg\",\n        role: 'manager'\n      },\n      message: \"Reminder: Annual property inspection scheduled for next week.\",\n      timestamp: \"2024-09-15 10:00 AM\"\n    },\n    {\n      id: 2,\n      type: 'maintenance',\n      sender: {\n        name: \"John Doe\",\n        avatar: \"/path/to/tenant-avatar.jpg\",\n        role: 'tenant'\n      },\n      message: \"The kitchen sink is leaking. Please send a plumber.\",\n      timestamp: \"2024-09-14 2:30 PM\",\n      status: 'in-progress'\n    },\n    {\n      id: 3,\n      type: 'inquiry',\n      sender: {\n        name: \"Jane Smith\",\n        avatar: \"/path/to/tenant-avatar2.jpg\",\n        role: 'tenant'\n      },\n      message: \"Is it possible to renew my lease for another year?\",\n      timestamp: \"2024-09-13 11:15 AM\",\n      status: 'open'\n    }\n  ]);\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [communicationType, setCommunicationType] = useState<'announcement' | 'maintenance' | 'inquiry'>('inquiry');\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const newCommunication: Communication = {\n        id: communications.length + 1,\n        type: communicationType,\n        sender: {\n          name: \"Property Manager\",\n          avatar: \"/path/to/manager-avatar.jpg\",\n          role: 'manager'\n        },\n        message: newMessage,\n        timestamp: new Date().toLocaleString(),\n        status: communicationType === 'maintenance' ? 'open' : undefined\n      };\n      setCommunications([newCommunication, ...communications]);\n      setNewMessage(\"\");\n    }\n  };\n\n  const getStatusBadge = (status?: string) => {\n    switch (status) {\n      case 'open':\n        return <Badge bg=\"warning\">Open</Badge>;\n      case 'in-progress':\n        return <Badge bg=\"info\">In Progress</Badge>;\n      case 'resolved':\n        return <Badge bg=\"success\">Resolved</Badge>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer p-0 shadow-none\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Filter by Type</Dropdown.Item>\n            <Dropdown.Item>Sort by Date</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h4 className=\"mt-0 mb-3\">Tenant Communications</h4>\n        \n        <Form className=\"mb-3\">\n          <Form.Group className=\"mb-2\">\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type your message here...\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Select\n              value={communicationType}\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => \n                setCommunicationType(e.target.value as 'announcement' | 'maintenance' | 'inquiry')}\n            >\n              <option value=\"announcement\">Announcement</option>\n              <option value=\"maintenance\">Maintenance Request</option>\n              <option value=\"inquiry\">General Inquiry</option>\n            </Form.Select>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={handleSendMessage}>\n            Send Message\n          </Button>\n        </Form>\n\n        <div className=\"mt-2\">\n          {communications.map((comm) => (\n            <div key={comm.id} className=\"d-flex align-items-start mt-3\">\n              <UserAvatar \n                src={comm.sender.avatar} \n                alt={comm.sender.name} \n                size=\"sm\"\n                className=\"me-2\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"mt-0 mb-1\">\n                  {comm.sender.name}\n                  <small className=\"text-muted float-end\">{comm.timestamp}</small>\n                </h5>\n                <Badge bg={comm.type === 'announcement' ? 'info' : comm.type === 'maintenance' ? 'warning' : 'secondary'} className=\"me-1\">\n                  {comm.type.charAt(0).toUpperCase() + comm.type.slice(1)}\n                </Badge>\n                {getStatusBadge(comm.status)}\n                <p className=\"mt-1 mb-0\">{comm.message}</p>\n                {comm.sender.role === 'tenant' && (\n                  <Link to=\"#\" className=\"text-muted font-13 d-inline-block mt-2\">\n                    <i className=\"mdi mdi-reply\"></i> Reply\n                  </Link>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-2\">\n          <Link to=\"#\" className=\"text-danger\">\n            <i className=\"mdi mdi-spin mdi-loading me-1 font-16\"></i>\n            Load more \n          </Link>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TenantCommunications;","import React, { useState } from \"react\";\nimport { Card, Dropdown, Form, Button, Badge } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n\nimport UserAvatar from \"./UserAvatar\";\n\ninterface Communication {\n  id: number;\n  type: 'announcement' | 'maintenance' | 'inquiry';\n  sender: {\n    name: string;\n    avatar: string;\n    role: 'tenant' | 'manager';\n  };\n  message: string;\n  timestamp: string;\n  status?: 'open' | 'in-progress' | 'resolved';\n}\n\ninterface TenantCommunicationsProps {\n  propertyId: number;\n}\n\nconst TenantCommunications: React.FC<TenantCommunicationsProps> = ({ propertyId }) => {\n  const [communications, setCommunications] = useState<Communication[]>([\n    {\n      id: 1,\n      type: 'announcement',\n      sender: {\n        name: \"Property Manager\",\n        avatar: \"/path/to/manager-avatar.jpg\",\n        role: 'manager'\n      },\n      message: \"Reminder: Annual property inspection scheduled for next week.\",\n      timestamp: \"2024-09-15 10:00 AM\"\n    },\n    {\n      id: 2,\n      type: 'maintenance',\n      sender: {\n        name: \"John Doe\",\n        avatar: \"/path/to/tenant-avatar.jpg\",\n        role: 'tenant'\n      },\n      message: \"The kitchen sink is leaking. Please send a plumber.\",\n      timestamp: \"2024-09-14 2:30 PM\",\n      status: 'in-progress'\n    },\n    {\n      id: 3,\n      type: 'inquiry',\n      sender: {\n        name: \"Jane Smith\",\n        avatar: \"/path/to/tenant-avatar2.jpg\",\n        role: 'tenant'\n      },\n      message: \"Is it possible to renew my lease for another year?\",\n      timestamp: \"2024-09-13 11:15 AM\",\n      status: 'open'\n    }\n  ]);\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [communicationType, setCommunicationType] = useState<'announcement' | 'maintenance' | 'inquiry'>('inquiry');\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const newCommunication: Communication = {\n        id: communications.length + 1,\n        type: communicationType,\n        sender: {\n          name: \"Property Manager\", // Assuming the current user is a property manager\n          avatar: \"/path/to/manager-avatar.jpg\",\n          role: 'manager'\n        },\n        message: newMessage,\n        timestamp: new Date().toLocaleString(),\n        status: communicationType === 'maintenance' ? 'open' : undefined\n      };\n      setCommunications([newCommunication, ...communications]);\n      setNewMessage(\"\");\n    }\n  };\n\n  const getStatusBadge = (status?: string) => {\n    switch (status) {\n      case 'open':\n        return <Badge bg=\"warning\">Open</Badge>;\n      case 'in-progress':\n        return <Badge bg=\"info\">In Progress</Badge>;\n      case 'resolved':\n        return <Badge bg=\"success\">Resolved</Badge>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer p-0 shadow-none\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Filter by Type</Dropdown.Item>\n            <Dropdown.Item>Sort by Date</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h4 className=\"mt-0 mb-3\">Tenant Communications</h4>\n        \n        <Form className=\"mb-3\">\n          <Form.Group className=\"mb-2\">\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type your message here...\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Select\n              value={communicationType}\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => \n                setCommunicationType(e.target.value as 'announcement' | 'maintenance' | 'inquiry')}\n            >\n              <option value=\"announcement\">Announcement</option>\n              <option value=\"maintenance\">Maintenance Request</option>\n              <option value=\"inquiry\">General Inquiry</option>\n            </Form.Select>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={handleSendMessage}>\n            Send Message\n          </Button>\n        </Form>\n\n        <div className=\"mt-2\">\n          {communications.map((comm) => (\n            <div key={comm.id} className=\"d-flex align-items-start mt-3\">\n              <UserAvatar src={comm.sender.avatar} alt={comm.sender.name} className=\"me-2\" />\n              <div className=\"w-100\">\n                <h5 className=\"mt-0 mb-1\">\n                  {comm.sender.name}\n                  <small className=\"text-muted float-end\">{comm.timestamp}</small>\n                </h5>\n                <Badge bg={comm.type === 'announcement' ? 'info' : comm.type === 'maintenance' ? 'warning' : 'secondary'} className=\"me-1\">\n                  {comm.type.charAt(0).toUpperCase() + comm.type.slice(1)}\n                </Badge>\n                {getStatusBadge(comm.status)}\n                <p className=\"mt-1 mb-0\">{comm.message}</p>\n                {comm.sender.role === 'tenant' && (\n                  <Link to=\"#\" className=\"text-muted font-13 d-inline-block mt-2\">\n                    <i className=\"mdi mdi-reply\"></i> Reply\n                  </Link>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-2\">\n          <Link to=\"#\" className=\"text-danger\">\n            <i className=\"mdi mdi-spin mdi-loading me-1 font-16\"></i>\n            Load more \n          </Link>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TenantCommunications;","import React, { useState } from \"react\";\nimport { Row, Col, Card, Dropdown, Button } from \"react-bootstrap\";\n\n// Import sub-components\nimport PageTitle from \"../../../../../components/PageTitle\";\nimport PropertyStatistics from \"./PropertyStatistics\";\nimport PropertyManagers from \"./PropertyManagers\";\nimport TenantCommunications from \"./TenantCommunications\";\nimport PropertyDocuments from \"./PropertyDocuments\";\n\n// Placeholder components (to be implemented later)\nconst OccupancyChart: React.FC<{ propertyId: number }> = () => <div>Occupancy Chart Placeholder</div>;\nconst RentCollection: React.FC<{ propertyId: number }> = () => <div>Rent Collection Placeholder</div>;\nconst MaintenanceRequests: React.FC<{ propertyId: number }> = () => <div>Maintenance Requests Placeholder</div>;\nconst LeaseManagement: React.FC<{ propertyId: number }> = () => <div>Lease Management Placeholder</div>;\n\n// Define the Property interface\ninterface Property {\n  id: number;\n  name: string;\n  address: string;\n  type: string;\n  status: 'Fully Occupied' | 'Partially Occupied' | 'Vacant';\n  totalUnits: number;\n  occupiedUnits: number;\n  monthlyRevenue: number;\n  yearBuilt: number;\n  lastRenovation?: string;\n  propertyManagers: {\n    image: string;\n    name: string;\n  }[];\n  description: string;\n  amenities: string[];\n  nearbyFacilities: string[];\n  maintenanceRequests: number;\n  tenantSatisfaction: number;\n}\n\nconst PropertyDetails: React.FC = () => {\n  const [property] = useState<Property>({\n    id: 1,\n    name: \"Sunset Apartments\",\n    address: \"123 Moi Avenue, Nairobi, Kenya\",\n    type: \"Residential Apartment Complex\",\n    status: \"Partially Occupied\",\n    totalUnits: 50,\n    occupiedUnits: 45,\n    monthlyRevenue: 2500000, // In Kenyan Shillings\n    yearBuilt: 2015,\n    lastRenovation: \"2022\",\n    propertyManagers: [\n      { name: \"John Doe\", image: \"/path/to/john-doe.jpg\" },\n      { name: \"Jane Smith\", image: \"/path/to/jane-smith.jpg\" },\n    ],\n    description: \"Sunset Apartments is a modern residential complex offering comfortable living in the heart of Nairobi. With a range of amenities and excellent location, it's perfect for young professionals and families alike.\",\n    amenities: [\"24/7 Security\", \"Swimming Pool\", \"Gym\", \"Covered Parking\", \"Children's Play Area\"],\n    nearbyFacilities: [\"Shopping Mall\", \"Hospital\", \"School\", \"Public Transport\"],\n    maintenanceRequests: 5,\n    tenantSatisfaction: 4.2,\n  });\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Properties\", path: \"/apps/properties\" },\n          { label: property.name, path: \"/apps/properties/details\", active: true },\n        ]}\n        title={property.name}\n      />\n      <Row>\n        <Col xl={8}>\n          <Card>\n            <Card.Body>\n              <Dropdown className=\"float-end\" align=\"end\">\n                <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                  <i className=\"mdi mdi-dots-vertical\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>Edit Property</Dropdown.Item>\n                  <Dropdown.Item>Generate Report</Dropdown.Item>\n                  <Dropdown.Item>Add Maintenance Schedule</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <h4 className=\"mb-3\">Property Overview</h4>\n              <Row>\n                <Col md={6}>\n                  <p><strong>Address:</strong> {property.address}</p>\n                  <p><strong>Type:</strong> {property.type}</p>\n                  <p><strong>Status:</strong> {property.status}</p>\n                  <p><strong>Year Built:</strong> {property.yearBuilt}</p>\n                  {property.lastRenovation && (\n                    <p><strong>Last Renovation:</strong> {property.lastRenovation}</p>\n                  )}\n                </Col>\n                <Col md={6}>\n                  <p><strong>Total Units:</strong> {property.totalUnits}</p>\n                  <p><strong>Occupied Units:</strong> {property.occupiedUnits}</p>\n                  <p><strong>Occupancy Rate:</strong> {((property.occupiedUnits / property.totalUnits) * 100).toFixed(2)}%</p>\n                  <p><strong>Monthly Revenue:</strong> KES {property.monthlyRevenue.toLocaleString()}</p>\n                </Col>\n              </Row>\n              <h5 className=\"mt-3\">Description</h5>\n              <p>{property.description}</p>\n              <h5 className=\"mt-3\">Amenities</h5>\n              <ul>\n                {property.amenities.map((amenity, index) => (\n                  <li key={index}>{amenity}</li>\n                ))}\n              </ul>\n              <h5 className=\"mt-3\">Nearby Facilities</h5>\n              <ul>\n                {property.nearbyFacilities.map((facility, index) => (\n                  <li key={index}>{facility}</li>\n                ))}\n              </ul>\n              <PropertyManagers managers={property.propertyManagers} />\n              <div className=\"mt-4\">\n                <Button variant=\"primary\" className=\"me-2\">View All Units</Button>\n                <Button variant=\"outline-secondary\">Schedule Inspection</Button>\n              </div>\n            </Card.Body>\n          </Card>\n          <Row>\n            <Col md={6}>\n              <PropertyStatistics\n                totalUnits={property.totalUnits}\n                occupiedUnits={property.occupiedUnits}\n                monthlyRevenue={property.monthlyRevenue}\n                maintenanceRequests={property.maintenanceRequests}\n                tenantSatisfaction={property.tenantSatisfaction}\n              />\n            </Col>\n            <Col md={6}>\n              <OccupancyChart propertyId={property.id} />\n            </Col>\n          </Row>\n          <RentCollection propertyId={property.id} />\n          <MaintenanceRequests propertyId={property.id} />\n        </Col>\n        <Col xl={4}>\n          <LeaseManagement propertyId={property.id} />\n          <PropertyDocuments propertyId={property.id} />\n          <TenantCommunications propertyId={property.id} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default PropertyDetails;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","_ref","totalUnits","occupiedUnits","monthlyRevenue","maintenanceRequests","tenantSatisfaction","statistics","icon","variant","title","stats","description","toFixed","Card","stat","sm","xl","CountUp","end","Number","separator","duration","decimals","managers","manager","OverlayTrigger","placement","overlay","Tooltip","id","name","src","image","alt","role","properties","email","Button","size","phone","sizeClass","md","lg","propertyId","communications","setCommunications","useState","type","sender","avatar","message","timestamp","status","newMessage","setNewMessage","communicationType","setCommunicationType","getStatusBadge","Badge","bg","Dropdown","align","as","Form","rows","value","onChange","e","target","placeholder","onClick","handleSendMessage","trim","newCommunication","length","Date","toLocaleString","undefined","comm","UserAvatar","charAt","toUpperCase","slice","Link","to","OccupancyChart","RentCollection","MaintenanceRequests","LeaseManagement","PropertyDetails","property","address","yearBuilt","lastRenovation","propertyManagers","amenities","nearbyFacilities","React","PageTitle","breadCrumbItems","amenity","facility","PropertyManagers","PropertyStatistics","PropertyDocuments","TenantCommunications","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ref","bsPrefix","pill","text","Component","prefix","useBootstrapPrefix","classNames","displayName","defaultProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","context","FloatingLabel","controlId","FormGroup","htmlFor","propTypes","tooltip","Feedback","FormCheckLabel","useContext","FormContext","FormCheck","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","innerFormContext","hasLabel","input","FormCheckInput","_Fragment","Input","Label","FormControl","htmlSize","plaintext","readOnly","classes","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","validated","Group","Control","Floating","FormFloating","Check","Range","Select","p"],"sourceRoot":""}