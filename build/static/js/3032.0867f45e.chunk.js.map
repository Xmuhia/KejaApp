{"version":3,"file":"static/js/3032.0867f45e.chunk.js","mappings":"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","sources":["layouts/TwoColumn/IconMenu.tsx","layouts/TwoColumn/MainMenu.tsx","layouts/TwoColumn/LeftSidebar.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SimpleBar from \"simplebar-react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\nimport logo from \"../../assets/images/logo-sm.png\";\n\n/**\n * Renders the application menu\n */\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\ninterface AppMenuProps {\n  menuItems: Item[];\n  toggleMenu: (item: Item, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst IconMenu = ({ menuItems, toggleMenu, activeMenuItems }: AppMenuProps) => {\n  const onMenuItemClick = (e: any, menuItem: Item) => {\n    const hasChildren = menuItem.children! && menuItem.children.length;\n    if (hasChildren) {\n      e.preventDefault();\n    }\n    toggleMenu(menuItem, true);\n  };\n\n  return (\n    <>\n      <div className=\"sidebar-icon-menu\">\n        <div className=\"logo-box\">\n          <Link to=\"/\">\n            <img src={logo} alt=\"small logo\" height=\"28\" />\n          </Link>\n        </div>\n        <SimpleBar className=\"h-100\">\n          <ul className=\"menu\" id=\"two-col-sidenav-main\">\n            {(menuItems || []).map((item, index) => {\n              const activeParent =\n                activeMenuItems &&\n                activeMenuItems.length &&\n                activeMenuItems[activeMenuItems.length - 1] === item[\"key\"];\n              return (\n                <li key={index} className=\"menu-item nav-link-ref\">\n                  <Link\n                    className={classNames(\"menu-link nav-link-ref\", {\n                      active: activeParent,\n                    })}\n                    to={item.children! ? \"/#\" : item.url!}\n                    data-bs-title={item.label}\n                    data-bs-toggle=\"tooltip\"\n                    data-bs-placement=\"right\"\n                    data-bs-trigger=\"hover\"\n                    data-menu-key={item.key}\n                    onClick={(e: any) => {\n                      onMenuItemClick(e, item);\n                    }}\n                  >\n                    <span className=\"menu-icon\">\n                      <FeatherIcon icon={item.icon} />\n                    </span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </SimpleBar>\n      </div>\n    </>\n  );\n};\n\nexport default IconMenu;\n","import React, { useEffect, useState } from \"react\";\nimport SimpleBar from \"simplebar-react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// constants\nimport { MenuItemTypes } from \"../../constants/menu\";\nimport { LayoutTypes } from \"../../constants/layout\";\n\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\n// images\nimport logoSm from \"../../assets/images/logo-sm.png\";\nimport logoDark from \"../../assets/images/logo-dark.png\";\nimport logoDark2 from \"../../assets/images/logo-dark-2.png\";\nimport logoLight from \"../../assets/images/logo-light.png\";\nimport logoLight2 from \"../../assets/images/logo-light-2.png\";\n\ninterface SubMenus {\n  item: MenuItemTypes;\n  linkClassName?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: Array<string>;\n  toggleMenu?: (item: any, status: boolean) => void;\n  className?: string;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: SubMenus) => {\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n  //\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n    \n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <>\n      <li\n        className={classNames(\"menu-item\", \"nav-link-ref\", {\n          \"menuitem-active\": open,\n        })}\n      >\n        <Link\n          to=\"#\"\n          onClick={toggleMenuItem}\n          data-menu-key={item.key}\n          aria-expanded={open}\n          className={classNames(\"menu-link justify-content-between\", linkClassName, {\n            \"menuitem-active\": activeMenuItems!.includes(item.key)\n              ? \"active\"\n              : \"\",\n          })}\n        >\n          <span className=\"menu-text\"> {item.label} </span>\n          {!item.badge ? (\n            <span className=\"menu-arrow\"></span>\n          ) : (\n            <span\n              className={`badge bg-${item.badge.variant} rounded-pill float-end`}\n            >\n              {item.badge.text}\n            </span>\n          )}\n        </Link>\n        <Collapse in={open}>\n          <div>\n            <ul className={classNames(subMenuClassNames)}>\n              {(item.children || []).map((child, i) => {\n                return (\n                  <React.Fragment key={i}>\n                    {child.children ? (\n                      <>\n                        {/* parent */}\n                        <MenuItemWithChildren\n                          item={child}\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                          activeMenuItems={activeMenuItems}\n                          subMenuClassNames=\"sub-menu\"\n                          toggleMenu={toggleMenu}\n                        />\n                      </>\n                    ) : (\n                      <>\n                        {/* child */}\n                        <MenuItem\n                          item={child}\n                          className={\n                            activeMenuItems!.includes(child.key)\n                              ? \"menuitem-active\"\n                              : \"\"\n                          }\n                          linkClassName={\n                            activeMenuItems!.includes(child.key) ? \"active\" : \"\"\n                          }\n                        />\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </Collapse>\n      </li>\n    </>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n  return (\n    <>\n      <li className={classNames(\"menu-item\", className)}>\n        <MenuItemLink item={item} className={linkClassName} />\n      </li>\n    </>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n  return (\n    <Link\n      to={item.url!}\n      target={item.target}\n      className={classNames(\"menu-link nav-link-ref justify-content-between\", className)}\n      data-menu-key={item.key}\n    >\n      <span className=\"menu-text\"> {item.label} </span>\n      {item.badge && (\n        <span className={`badge bg-${item.badge.variant} float-end`}>\n          {item.badge.text}\n        </span>\n      )}\n    </Link>\n  );\n};\n\ninterface MainMenuProps {\n  menuItems: MenuItemTypes[];\n  toggleMenu: (item: MenuItemTypes, show: boolean) => void;\n  activeMenuItems: string[];\n}\n\nconst MainMenu = ({\n  menuItems,\n  toggleMenu,\n  activeMenuItems,\n}: MainMenuProps) => {\n  //\n\n  const { layoutType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  return (\n    <>\n      {activeMenuItems && (\n        <div className=\"app-menu\">\n          <div className=\"logo-box\">\n            <Link to=\"/\" className=\"logo logo-dark text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoDark2\n                      : logoDark\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n            <Link to=\"/\" className=\"logo logo-light text-center\">\n              <span className=\"logo-sm\">\n                <img src={logoSm} alt=\"\" height=\"22\" />\n              </span>\n              <span className=\"logo-lg\">\n                <img\n                  src={\n                    layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                      ? logoLight2\n                      : logoLight\n                  }\n                  alt=\"\"\n                  height=\"20\"\n                />\n              </span>\n            </Link>\n          </div>\n\n          <div id=\"two-col-menu\" className=\"h-100 menuitem-active\">\n            <SimpleBar style={{ maxHeight: \"100%\" }}>\n              {(menuItems || []).map((menuItem, key) => {\n                const activeParent =\n                  activeMenuItems &&\n                  activeMenuItems.length &&\n                  activeMenuItems[activeMenuItems.length - 1] ===\n                  menuItem[\"key\"];\n                return (\n                  <div\n                    key={key}\n                    className={classNames(\"twocolumn-menu-item\", {\n                      \"d-block\": activeParent,\n                    })}\n                    id={menuItem.key}\n                  >\n                    {/* <div className=\"title-box\"> */}\n                    <ul className=\"menu\">\n                      {menuItem.isTitle && (\n                        <li className=\"menu-title\">{menuItem.label}</li>\n                      )}\n                      {(menuItem.children || []).map((item, idx) => {\n                        return (\n                          <React.Fragment key={idx}>\n                            {item.children ? (\n                              <MenuItemWithChildren\n                                item={item}\n                                toggleMenu={toggleMenu}\n                                subMenuClassNames=\"sub-menu\"\n                                activeMenuItems={activeMenuItems}\n                                linkClassName=\"\"\n                              />\n                            ) : (\n                              <MenuItem\n                                item={item}\n                                linkClassName=\"\"\n                                className={\n                                  activeMenuItems!.includes(item.key)\n                                    ? \"menuitem-active\"\n                                    : \"\"\n                                }\n                              />\n                            )}\n                          </React.Fragment>\n                        );\n                      })}\n                    </ul>\n                    {/* </div> */}\n                  </div>\n                );\n              })}\n            </SimpleBar>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MainMenu;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// actions\nimport { changeSidebarType } from \"../../redux/actions\";\n\n//constants\nimport { SideBarTypes } from \"../../constants/layout\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\nimport {\n  findAllParent,\n  findMenuItem,\n  getTwoColumnMenuItems,\n} from \"../../helpers/menu\";\n\n// components\nimport IconMenu from \"./IconMenu\";\nimport MainMenu from \"./MainMenu\";\n\ninterface Item {\n  key: string;\n  label: string;\n  isTitle?: boolean;\n  icon?: string;\n  url?: string;\n  badge?: {\n    variant: string;\n    text: string;\n  };\n  parentKey?: string;\n  target?: string;\n  children?: Item[];\n}\n\nconst LeftSidebar = () => {\n  const location = useLocation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const menuItems = getTwoColumnMenuItems();\n\n  const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n  const {\n    leftSideBarType,\n  } = useSelector((state: RootState) => ({\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: Item, show: boolean) => {\n    if (menuItem.children) {\n      if (leftSideBarType === \"condensed\")\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    }\n\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"sidebar-content\");\n    let matchingMenuItem = null;\n    if (div) {\n      let items: any = div.getElementsByClassName(\"nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        // console.log(trimmedURL);\n        // console.log(\"pathname\", items[i]?.pathname?.replaceAll(\"/ubold_r/default\",\"\"));\n        // debugger\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n\n  useEffect(() => {\n    if (\n      activeMenuItems &&\n      activeMenuItems.length &&\n      activeMenuItems.length === 1\n    ) {\n      const parentLevel0 = findMenuItem(menuItems, activeMenuItems[0]);\n      const hasChildren =\n        parentLevel0 &&\n        parentLevel0[\"children\"] &&\n        parentLevel0[\"children\"].length;\n\n      if (\n        !hasChildren &&\n        (leftSideBarType === \"default\" || leftSideBarType === \"compact\")\n      ) {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n      } else {\n        dispatch(changeSidebarType(leftSideBarType));\n      }\n    }\n  }, [activeMenuItems, leftSideBarType, dispatch, menuItems]);\n\n  return (\n    <>\n      <div className=\"left-side-menu show\" id=\"sidebar-content\">\n        <IconMenu\n          menuItems={getTwoColumnMenuItems()}\n          toggleMenu={toggleMenu}\n          activeMenuItems={activeMenuItems}\n        />\n\n        <MainMenu\n          menuItems={menuItems}\n          activeMenuItems={activeMenuItems}\n          toggleMenu={toggleMenu}\n        />\n        <div className=\"clearfix\" />\n      </div>\n    </>\n  );\n};\n\nexport default LeftSidebar;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"names":["_ref","menuItems","toggleMenu","activeMenuItems","_jsx","_Fragment","children","_jsxs","className","Link","to","src","logo","alt","height","SimpleBar","id","map","item","index","activeParent","length","classNames","active","url","label","key","onClick","e","onMenuItemClick","menuItem","preventDefault","FeatherIcon","icon","MenuItemWithChildren","linkClassName","subMenuClassNames","open","setOpen","useState","includes","useEffect","status","badge","variant","text","Collapse","in","child","i","React","MenuItem","_ref2","MenuItemLink","_ref3","target","_ref4","layoutType","useSelector","state","Layout","leftSideBarType","logoSm","LayoutTypes","logoDark2","logoDark","logoLight2","logoLight","style","maxHeight","isTitle","idx","LeftSidebar","location","useLocation","dispatch","useDispatch","getTwoColumnMenuItems","setActiveMenuItems","show","changeSidebarType","SideBarTypes","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","parentLevel0","hasChildren","IconMenu","MainMenu","_len","arguments","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","ref","onEnter","onEntering","onEntered","onExit","onExiting","props","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","innerProps"],"sourceRoot":""}