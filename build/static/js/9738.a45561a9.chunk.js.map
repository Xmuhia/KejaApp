{"version":3,"file":"static/js/9738.a45561a9.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/apps/Ecommerce/ExpensesAndReports.tsx","utils/pdfGenerator.ts","../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/warning/warning.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Row, Col, Card, Button, Form, Table, Tabs, Tab, Modal } from 'react-bootstrap';\nimport { format } from 'date-fns';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport { generatePDF } from '../../../utils/pdfGenerator';\n\n// types\ninterface Expense {\n  id: number;\n  category: string;\n  amount: number;\n  date: string;\n  description: string;\n  propertyName: string;\n}\n\ninterface Report {\n  id: number;\n  name: string;\n  type: 'Profit and Loss' | 'Cash Flow' | 'Occupancy' | 'Maintenance' | 'Utility';\n  dateRange: { start: string; end: string };\n  generatedOn: string;\n}\n\n// Mock data - replace with API calls in production\nconst mockExpenses: Expense[] = [\n  {\n    id: 1,\n    category: 'Maintenance',\n    amount: 500,\n    date: '2024-08-15',\n    description: 'Plumbing repair',\n    propertyName: 'Sunset Apartments',\n  },\n  {\n    id: 2,\n    category: 'Utilities',\n    amount: 1200,\n    date: '2024-08-01',\n    description: 'Electricity bill',\n    propertyName: 'Lakeside Villas',\n  },\n  // Add more mock data as needed\n];\n\nconst mockReports: Report[] = [\n  {\n    id: 1,\n    name: 'Q3 2024 Profit and Loss',\n    type: 'Profit and Loss',\n    dateRange: { start: '2024-07-01', end: '2024-09-30' },\n    generatedOn: '2024-10-01',\n  },\n  {\n    id: 2,\n    name: 'August 2024 Cash Flow',\n    type: 'Cash Flow',\n    dateRange: { start: '2024-08-01', end: '2024-08-31' },\n    generatedOn: '2024-09-01',\n  },\n  // Add more mock data as needed\n];\n\nconst ExpensesAndReports: React.FC = () => {\n  const [expenses, setExpenses] = useState<Expense[]>(mockExpenses);\n  const [reports, setReports] = useState<Report[]>(mockReports);\n  const [filteredExpenses, setFilteredExpenses] = useState<Expense[]>(mockExpenses);\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\n  const [categoryFilter, setCategoryFilter] = useState('All');\n  const [showReportModal, setShowReportModal] = useState(false);\n  const [newReport, setNewReport] = useState<Partial<Report> & { dateRange: { start: string; end: string } }>({\n    name: '',\n    type: 'Profit and Loss',\n    dateRange: { start: '', end: '' },\n  });\n\n  const filterExpenses = useCallback(() => {\n    let filtered = expenses;\n\n    if (dateRange.start && dateRange.end) {\n      filtered = filtered.filter(\n        (expense) => expense.date >= dateRange.start && expense.date <= dateRange.end\n      );\n    }\n\n    if (categoryFilter !== 'All') {\n      filtered = filtered.filter((expense) => expense.category === categoryFilter);\n    }\n\n    setFilteredExpenses(filtered);\n  }, [expenses, dateRange, categoryFilter]);\n\n  useEffect(() => {\n    // In a real application, fetch data from an API here\n    setExpenses(mockExpenses);\n    setReports(mockReports);\n    setFilteredExpenses(mockExpenses);\n  }, []);\n\n  useEffect(() => {\n    filterExpenses();\n  }, [dateRange, categoryFilter, expenses, filterExpenses]);\n\n  const handleDateRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDateRange({ ...dateRange, [e.target.name]: e.target.value });\n  };\n\n  const handleCategoryFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setCategoryFilter(e.target.value);\n  };\n\n  const generateExpenseReport = () => {\n    generatePDF(filteredExpenses, 'Expense Report');\n  };\n\n  const handleNewReportChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name === 'start' || name === 'end') {\n      setNewReport((prev) => ({\n        ...prev,\n        dateRange: { \n          ...prev.dateRange,\n          [name]: value \n        },\n      }));\n    } else {\n      setNewReport((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleReportTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setNewReport((prev) => ({ ...prev, type: e.target.value as Report['type'] }));\n  };\n\n  const handleGenerateReport = () => {\n    // In a real application, you would send this data to your backend\n    const generatedReport: Report = {\n      id: reports.length + 1,\n      name: newReport.name || '',\n      type: newReport.type as Report['type'],\n      dateRange: {\n        start: newReport.dateRange.start,\n        end: newReport.dateRange.end,\n      },\n      generatedOn: new Date().toISOString(),\n    };\n    setReports([...reports, generatedReport]);\n    setShowReportModal(false);\n    setNewReport({\n      name: '',\n      type: 'Profit and Loss',\n      dateRange: { start: '', end: '' },\n    });\n  };\n\n  // Calculate summary statistics\n  const totalExpenses = filteredExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n  const expensesByCategory = filteredExpenses.reduce((acc, expense) => {\n    acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n    return acc;\n  }, {} as Record<string, number>);\n\n  // Prepare chart data\n  const chartOptions: ApexOptions = {\n    chart: {\n      type: 'pie',\n    },\n    labels: Object.keys(expensesByCategory),\n    legend: {\n      position: 'bottom',\n    },\n  };\n\n  const chartSeries = Object.values(expensesByCategory);\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: 'Home', path: '/' },\n          { label: 'Expenses & Reports', path: '/expenses-reports', active: true },\n        ]}\n        title={'Expenses & Reports'}\n      />\n\n      <Tabs defaultActiveKey=\"expenses\" id=\"expenses-reports-tabs\" className=\"mb-3\">\n        <Tab eventKey=\"expenses\" title=\"Expenses\">\n          <Row>\n            <Col>\n              <Card>\n                <Card.Body>\n                  <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h4 className=\"header-title\">Expense Summary</h4>\n                    <Button variant=\"primary\" onClick={generateExpenseReport}>\n                      Generate Expense Report\n                    </Button>\n                  </div>\n                  <Row>\n                    <Col md={6}>\n                      <h5>Total Expenses: ${totalExpenses.toLocaleString()}</h5>\n                      <Chart\n                        options={chartOptions}\n                        series={chartSeries}\n                        type=\"pie\"\n                        height={300}\n                      />\n                    </Col>\n                    <Col md={6}>\n                      <h5>Expenses by Category</h5>\n                      <Table striped bordered hover>\n                        <thead>\n                          <tr>\n                            <th>Category</th>\n                            <th>Amount</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(expensesByCategory).map(([category, amount]) => (\n                            <tr key={category}>\n                              <td>{category}</td>\n                              <td>${amount.toLocaleString()}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Card>\n                <Card.Body>\n                  <h4 className=\"header-title mb-3\">Expense History</h4>\n                  <Form className=\"mb-3\">\n                    <Row>\n                      <Col md={3}>\n                        <Form.Group>\n                          <Form.Label>Start Date</Form.Label>\n                          <Form.Control\n                            type=\"date\"\n                            name=\"start\"\n                            value={dateRange.start}\n                            onChange={handleDateRangeChange}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col md={3}>\n                        <Form.Group>\n                          <Form.Label>End Date</Form.Label>\n                          <Form.Control\n                            type=\"date\"\n                            name=\"end\"\n                            value={dateRange.end}\n                            onChange={handleDateRangeChange}\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col md={3}>\n                        <Form.Group>\n                          <Form.Label>Category</Form.Label>\n                          <Form.Select\n                            value={categoryFilter}\n                            onChange={handleCategoryFilterChange}\n                          >\n                            <option value=\"All\">All</option>\n                            <option value=\"Maintenance\">Maintenance</option>\n                            <option value=\"Utilities\">Utilities</option>\n                            {/* Add more categories as needed */}\n                          </Form.Select>\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                  </Form>\n\n                  <Table responsive className=\"table-centered mb-0\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Category</th>\n                        <th>Amount</th>\n                        <th>Date</th>\n                        <th>Description</th>\n                        <th>Property</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredExpenses.map((expense) => (\n                        <tr key={expense.id}>\n                          <td>{expense.id}</td>\n                          <td>{expense.category}</td>\n                          <td>${expense.amount.toLocaleString()}</td>\n                          <td>{format(new Date(expense.date), 'MMM dd, yyyy')}</td>\n                          <td>{expense.description}</td>\n                          <td>{expense.propertyName}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n\n        <Tab eventKey=\"reports\" title=\"Reports\">\n          <Row>\n            <Col>\n              <Card>\n                <Card.Body>\n                  <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h4 className=\"header-title\">Generated Reports</h4>\n                    <Button variant=\"primary\" onClick={() => setShowReportModal(true)}>\n                      Generate New Report\n                    </Button>\n                  </div>\n                  <Table responsive className=\"table-centered mb-0\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Date Range</th>\n                        <th>Generated On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {reports.map((report) => (\n                        <tr key={report.id}>\n                          <td>{report.id}</td>\n                          <td>{report.name}</td>\n                          <td>{report.type}</td>\n                          <td>\n                            {format(new Date(report.dateRange.start), 'MMM dd, yyyy')} -{' '}\n                            {format(new Date(report.dateRange.end), 'MMM dd, yyyy')}\n                          </td>\n                          <td>{format(new Date(report.generatedOn), 'MMM dd, yyyy')}</td>\n                          <td>\n                            <Button variant=\"link\" className=\"p-0\">\n                              <i className=\"mdi mdi-download\"></i> Download\n                            </Button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs>\n\n      <Modal show={showReportModal} onHide={() => setShowReportModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Generate New Report</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Report Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={newReport.name}\n                onChange={handleNewReportChange}\n                placeholder=\"Enter report name\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Report Type</Form.Label>\n              <Form.Select\n                name=\"type\"\n                value={newReport.type}\n                onChange={handleReportTypeChange}\n              >\n                <option value=\"Profit and Loss\">Profit and Loss</option>\n                <option value=\"Cash Flow\">Cash Flow</option>\n                <option value=\"Occupancy\">Occupancy</option>\n                <option value=\"Maintenance\">Maintenance</option>\n                <option value=\"Utility\">Utility</option>\n              </Form.Select>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"start\"\n                value={newReport.dateRange.start}\n                onChange={handleNewReportChange}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"end\"\n                value={newReport.dateRange.end}\n                onChange={handleNewReportChange}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowReportModal(false)}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleGenerateReport}>\n            Generate Report\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ExpensesAndReports;","export const generatePDF = (data: any[], title: string) => {\n    // Create a new window\n    const win = window.open('', '_blank');\n    if (!win) {\n      alert('Please allow popups for this website');\n      return;\n    }\n  \n    // Write the HTML content\n    win.document.write(`\n      <html>\n        <head>\n          <title>${title}</title>\n          <style>\n            table { border-collapse: collapse; width: 100%; }\n            th, td { border: 1px solid black; padding: 8px; text-align: left; }\n            th { background-color: #f2f2f2; }\n          </style>\n        </head>\n        <body>\n          <h1>${title}</h1>\n          <table>\n            <thead>\n              <tr>${Object.keys(data[0]).map(key => `<th>${key}</th>`).join('')}</tr>\n            </thead>\n            <tbody>\n              ${data.map(row => `\n                <tr>${Object.values(row).map(value => `<td>${value}</td>`).join('')}</tr>\n              `).join('')}\n            </tbody>\n          </table>\n        </body>\n      </html>\n    `);\n  \n    // Wait for content to be written\n    win.document.close();\n  \n    // Trigger print when loaded\n    win.onload = function() {\n      win.print();\n      win.onafterprint = function() {\n        win.close();\n      }\n    }\n  };","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","mockExpenses","id","category","amount","date","description","propertyName","mockReports","name","type","dateRange","start","end","generatedOn","ExpensesAndReports","expenses","setExpenses","useState","reports","setReports","filteredExpenses","setFilteredExpenses","setDateRange","categoryFilter","setCategoryFilter","showReportModal","setShowReportModal","newReport","setNewReport","filterExpenses","useCallback","filtered","filter","expense","useEffect","handleDateRangeChange","e","target","value","handleNewReportChange","prev","totalExpenses","reduce","sum","expensesByCategory","acc","chartOptions","chart","labels","Object","keys","legend","position","chartSeries","values","_Fragment","PageTitle","breadCrumbItems","title","Tabs","defaultActiveKey","Tab","eventKey","Card","Button","variant","onClick","generateExpenseReport","generatePDF","md","toLocaleString","Chart","options","series","height","Table","striped","bordered","hover","entries","_ref","Form","onChange","responsive","format","Date","report","Modal","show","onHide","closeButton","placeholder","handleGenerateReport","generatedReport","length","toISOString","data","win","window","open","document","write","key","join","row","close","onload","print","onafterprint","alert","$f01a183cc7bdff77849e49ad26eb904$var$defaultContext","prefix","String","Math","round","random","current","$f01a183cc7bdff77849e49ad26eb904$var$SSRContext","_react","$f01a183cc7bdff77849e49ad26eb904$var$canUseDOM","Boolean","createElement","useSSRSafeId","defaultId","ctx","useContext","console","warn","useMemo","ref","useRef","useEventCallback","fn","useCommittedRef","apply","arguments","contains","context","node","compareDocumentPosition","React","as","bsPrefix","size","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","classNames","disabled","displayName","defaultProps","warning","module","exports"],"sourceRoot":""}