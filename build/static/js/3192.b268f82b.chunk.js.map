{"version":3,"file":"static/js/3192.b268f82b.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/PageTitle.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/Tasks/Board/Task.tsx","pages/apps/Tasks/Board/data.tsx","pages/apps/Tasks/Board/index.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface PasswordInputProps {\n  name: string;\n  placeholder?: string;\n  refCallback?: any;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n  className?: string;\n}\n\n/* Password Input */\nconst PasswordInput = ({\n  name,\n  placeholder,\n  refCallback,\n  errors,\n  control,\n  register,\n  className,\n}: PasswordInputProps) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  return (\n    <>\n      <InputGroup className=\"mb-0\">\n        <Form.Control\n          type={showPassword ? \"text\" : \"password\"}\n          placeholder={placeholder}\n          name={name}\n          id={name}\n          as=\"input\"\n          ref={(r: HTMLInputElement) => {\n            if (refCallback) refCallback(r);\n          }}\n          className={className}\n          isInvalid={errors && errors[name] ? true : false}\n          {...(register ? register(name) : {})}\n          autoComplete={name}\n        />\n        <div\n          className={classNames(\"input-group-text\", \"input-group-password\", {\n            \"show-password\": showPassword,\n          })}\n          data-password={showPassword ? \"true\" : \"false\"}\n        >\n          <span\n            className=\"password-eye\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}\n          ></span>\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  type?: string;\n  name: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  refCallback?: any;\n  children?: any;\n  rows?: string;\n}\n\nconst FormInput = ({\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  refCallback,\n  children,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"password\" ? (\n            <>\n              <Form.Group className={containerClass}>\n                {label ? (\n                  <>\n                    {\" \"}\n                    <Form.Label className={labelClassName}>\n                      {label}\n                    </Form.Label>{\" \"}\n                    {children}{\" \"}\n                  </>\n                ) : null}\n                <PasswordInput\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors!}\n                  register={register}\n                  className={className}\n                />\n\n                {errors && errors[name] ? (\n                  <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name][\"message\"]}\n                  </Form.Control.Feedback>\n                ) : null}\n              </Form.Group>\n            </>\n          ) : (\n            <>\n              {type === \"checkbox\" || type === \"radio\" ? (\n                <>\n                  <Form.Group className={containerClass}>\n                    <Form.Check\n                      type={type}\n                      label={label}\n                      name={name}\n                      id={name}\n                      ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                      }}\n                      className={className}\n                      isInvalid={errors && errors[name] ? true : false}\n                      {...(register ? register(name) : {})}\n                      {...otherProps}\n                    />\n\n                    {errors && errors[name] ? (\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors[name][\"message\"]}\n                      </Form.Control.Feedback>\n                    ) : null}\n                  </Form.Group>\n                </>\n              ) : (\n                <Form.Group className={containerClass}>\n                  {label ? (\n                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                  ) : null}\n\n                  <Form.Control\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as={comp}\n                    ref={(r: HTMLInputElement) => {\n                      if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    rows={rows}\n                    {...otherProps}\n                    autoComplete={name}\n                  >\n                    {children ? children : null}\n                  </Form.Control>\n\n                  {errors && errors[name] ? (\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors[name][\"message\"]}\n                    </Form.Control.Feedback>\n                  ) : null}\n                </Form.Group>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { TaskTypes } from \"./data\";\n\ninterface TaskItemProps {\n  task: TaskTypes;\n}\n\n// task item\nconst TaskItem = (props: TaskItemProps) => {\n  const task = props.task || {};\n\n  return (\n    <>\n      <span\n        className={classNames(\"badge\", \"float-end\", {\n          \"bg-soft-danger text-danger\": task.priority === \"High\",\n          \"bg-soft-secondary text-secondary\": task.priority === \"Medium\",\n          \"bg-soft-success text-success\": task.priority === \"Low\",\n        })}\n      >\n        {task.priority}\n      </span>\n\n      <h5 className=\"mt-0\">\n        <Link to=\"#\" className=\"text-dark\">\n          {task.title}\n        </Link>\n      </h5>\n\n      <div className=\"form-check float-end ps-0\">\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n      </div>\n\n      <p>{task.description}</p>\n\n      <div className=\"clearfix\"></div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <p className=\"font-13 mt-2 mb-0\">\n            <i className=\"mdi mdi-calendar\"></i> {task.dueDate}\n          </p>\n        </div>\n        <div className=\"col-auto\">\n          <div className=\"text-end\">\n            {(task.userAvatar || []).map((avatar, index) => {\n              return (\n                <Link key={index} to=\"#\" className=\"text-muted\">\n                  <img\n                    src={avatar}\n                    alt=\"\"\n                    className=\"avatar-sm img-thumbnail rounded-circle\"\n                  />\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TaskItem;\n","import avatar1 from \"../../../../assets/images/users/user-1.jpg\";\nimport avatar2 from \"../../../../assets/images/users/user-2.jpg\";\nimport avatar3 from \"../../../../assets/images/users/user-3.jpg\";\nimport avatar5 from \"../../../../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../../../../assets/images/users/user-6.jpg\";\nimport avatar7 from \"../../../../assets/images/users/user-7.jpg\";\nimport avatar8 from \"../../../../assets/images/users/user-8.jpg\";\nimport avatar9 from \"../../../../assets/images/users/user-9.jpg\";\nimport avatar10 from \"../../../../assets/images/users/user-10.jpg\";\n\nexport interface TaskTypes {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n  priority: string;\n  userAvatar: string[];\n  dueDate: string;\n}\n\nconst tasks: TaskTypes[] = [\n  {\n    id: 1,\n    title: \"Ubold v3.0 - Redesign\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"High\",\n    userAvatar: [avatar1, avatar3],\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 2,\n    title: \"Minton v3.0 - Redesign\",\n    description: \"Many desktop publishing packages and web page.\",\n    status: \"Inprogress\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Jul 20, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Ubold v2.1 - Angular and Django\",\n    description: \"If you are going to use a passage of Lorem Ipsum.\",\n    status: \"Completed\",\n    priority: \"Low\",\n    userAvatar: [avatar5],\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Ubold v2.1 - React, Webpack\",\n    description:\n      \"It has roots in a piece of classical Latin literature from 45 BC.\",\n    status: \"Completed\",\n    priority: \"High\",\n    userAvatar: [avatar6, avatar7],\n    dueDate: \"Jul 22, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Ubold 2.2 - Vue.Js and Laravel\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"Low\",\n    userAvatar: [avatar8],\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Ubold 2.3 - Rails, NodeJs, Mean\",\n    description:\n      \"All the Lorem Ipsum generators on the Internet tend to repeat predefined.\",\n    status: \"Upcoming\",\n    priority: \"Medium\",\n    userAvatar: [avatar9, avatar10],\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Ubold - Landing page and UI Kit\",\n    description: \"Your awesome text goes here. Your awesome text goes here.\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    userAvatar: [avatar1, avatar3],\n    dueDate: \"Jul 10, 2019\",\n  },\n  {\n    id: 8,\n    title: \"Ubold 3.0 - Scoping\",\n    description:\n      \"A handful of model sentence structures, to generate Lorem Ipsum which looks reasonable.\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: [avatar2],\n    dueDate: \"Jul 24, 2019\",\n  },\n  {\n    id: 9,\n    title: \"Shreyu 1.0 - Angular\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Aug 18, 2019\",\n  },\n  {\n    id: 10,\n    title: \"Shreyu 1.0 - React\",\n    description:\n      \"All the Lorem Ipsum generators on the Internet tend to repeat predefined.\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: [avatar8],\n    dueDate: \"Aug 18, 2019\",\n  },\n  {\n    id: 11,\n    title: \"Minton 1.0 - Angular\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Completed\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Aug 18, 2019\",\n  },\n];\n\nexport { tasks };\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Dropdown, Modal, Button } from \"react-bootstrap\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\nimport HyperDatepicker from \"../../../../components/Datepicker\";\nimport { FormInput } from \"../../../../components/\";\n\nimport TaskItem from \"./Task\";\n\n// dummy data\nimport { tasks, TaskTypes } from \"./data\";\n\nimport defaultAvatar from \"../../../../assets/images/users/user-1.jpg\";\n\ninterface StateType {\n  upcomingTasks: TaskTypes[];\n  inprogressTasks: TaskTypes[];\n  completedTasks: TaskTypes[];\n}\n\n// kanban\nconst Kanban = () => {\n  const [state, setState] = useState<StateType>({\n    upcomingTasks: tasks.filter((t) => t.status === \"Upcoming\"),\n    inprogressTasks: tasks.filter((t) => t.status === \"Inprogress\"),\n    completedTasks: tasks.filter((t) => t.status === \"Completed\"),\n  });\n  const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n  const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n  /*\n   * Form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      title: yup.string().required(),\n      priority: yup.string().required(),\n      description: yup.string().required(),\n    })\n  );\n\n  /*\n   * Form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState: { errors },\n  } = methods;\n\n  /**\n   * Toggles the new task modal\n   */\n  const toggleNewTaskModal = () => {\n    setNewTaskModal((prevstate) => !prevstate);\n  };\n\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n  const newTask = (status: string, queue: string) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: [defaultAvatar],\n      status: status,\n      queue: queue,\n    });\n    setNewTaskModal(true);\n  };\n\n  /**\n   * When date changes\n   * @param {} date\n   */\n  const handleDateChange = (date: Date) => {\n    if (newTaskDetails) {\n      // setState({\n      //     ...state,\n      //     newTask: { ...state.newTask, dueDate: date },\n      // });\n      setNewTaskDetails({ ...newTaskDetails, dueDate: date });\n    }\n  };\n\n  // a little function to help us with reordering the result\n  const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  /**\n   * Moves an item from one list to another list.\n   */\n  const move = (\n    source: Iterable<unknown> | ArrayLike<unknown>,\n    destination: Iterable<unknown> | ArrayLike<unknown>,\n    droppableSource: { index: number; droppableId: string | number },\n    droppableDestination: { index: number; droppableId: string | number }\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n  };\n\n  /**\n   * Gets the list\n   */\n  const getList = (id: string) => {\n    const modifiedState: any = { ...state };\n    const stateTasks: any = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n\n  /**\n   * On drag end\n   */\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      let localState: any = { ...state };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n      const localState = { ...state, ...result };\n      setState(localState);\n    }\n  };\n\n  /**\n   * Handles the new task form submission\n   */\n\n  const handleNewTask = (values: any) => {\n    const formData = {\n      title: values[\"title\"],\n      priority: values[\"priority\"],\n      description: values[\"description\"],\n    };\n\n    const newTask = {\n      ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1,\n      dueDate: newTaskDetails.dueDate.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      }),\n    };\n\n    let modifiedState: any = { ...state };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1);\n\n    // reset the form after submission\n    reset();\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Tasks\", path: \"apps/tasks/kanban\" },\n          { label: \"Kanban Board\", path: \"apps/tasks/kanban\", active: true },\n        ]}\n        title={\"Kanban Board\"}\n      />\n      <Row>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {/* todo */}\n          <Droppable droppableId=\"upcomingTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">Upcoming</h5>\n                    <p className=\"sub-header\">\n                      Your awesome text goes here. Your awesome text goes here.\n                    </p>\n                    {state.upcomingTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"upcoming\"\n                    >\n                      {(state.upcomingTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Pending\", \"upcomingTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n\n          {/* in progress */}\n          <Droppable droppableId=\"inprogressTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">In Progress</h5>\n                    <p className=\"sub-header\">Your awesome text goes here.</p>\n\n                    {state.inprogressTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"inprogress\"\n                    >\n                      {(state.inprogressTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Inprogress\", \"inprogressTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n\n          {/* done */}\n          <Droppable droppableId=\"completedTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">Completed</h5>\n                    <p className=\"sub-header\">\n                      Your awesome text goes here. Your awesome text goes here.\n                    </p>\n                    {state.completedTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"done\"\n                    >\n                      {(state.completedTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Done\", \"completedTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n          {/* </div> */}\n        </DragDropContext>\n      </Row>\n\n      {/* add new task modal */}\n      {newTaskDetails && (\n        <Modal\n          show={newTaskModal}\n          onHide={toggleNewTaskModal}\n          size=\"lg\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <h4 className=\"modal-title\">Create New Task</h4>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={handleSubmit(handleNewTask)} className=\"px-2\">\n              <FormInput\n                name=\"title\"\n                label=\"Title\"\n                placeholder=\"Enter title\"\n                type=\"text\"\n                containerClass=\"mb-3\"\n                className=\"form-control form-control-light\"\n                register={register}\n                key=\"title\"\n                errors={errors}\n                control={control}\n              />\n\n              <FormInput\n                name=\"description\"\n                label=\"Description\"\n                type=\"textarea\"\n                containerClass=\"mb-3\"\n                className=\"form-control form-control-light\"\n                rows=\"3\"\n                register={register}\n                key=\"description\"\n                errors={errors}\n                control={control}\n              />\n\n              <Row>\n                <Col md={6}>\n                  <FormInput\n                    name=\"priority\"\n                    label=\"Priority\"\n                    type=\"select\"\n                    containerClass=\"mb-3\"\n                    className=\"form-select form-control-light\"\n                    register={register}\n                    key=\"priority\"\n                    errors={errors}\n                    control={control}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </FormInput>\n                </Col>\n                <Col md={6}>\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Due Date</label> <br />\n                    <HyperDatepicker\n                      hideAddon\n                      dateFormat=\"yyyy-MM-dd\"\n                      value={newTaskDetails.dueDate}\n                      inputClass=\"form-control-light\"\n                      onChange={(date) => {\n                        handleDateChange(date);\n                      }}\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              <div className=\"text-end\">\n                <Button\n                  variant=\"light\"\n                  className=\"me-1\"\n                  onClick={toggleNewTaskModal}\n                >\n                  Cancel\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                  Create\n                </Button>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Kanban;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","onDateValueChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","Breadcrumb","href","map","item","index","active","label","path","_ref","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","formState","errors","noValidate","Array","isArray","child","name","React","key","PasswordInput","placeholder","refCallback","showPassword","setShowPassword","useState","InputGroup","Form","id","as","r","isInvalid","_ref2","labelClassName","containerClass","rows","otherProps","comp","task","priority","Link","to","title","description","dueDate","userAvatar","avatar","src","alt","tasks","status","avatar1","avatar3","avatar2","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","Kanban","state","setState","upcomingTasks","filter","t","inprogressTasks","completedTasks","totalTasks","setTotalTasks","length","newTaskModal","setNewTaskModal","newTaskDetails","setNewTaskDetails","schemaResolver","yupResolver","yup","shape","required","reset","toggleNewTaskModal","prevstate","newTask","queue","Date","defaultAvatar","getList","modifiedState","PageTitle","breadCrumbItems","DragDropContext","onDragEnd","result","source","destination","droppableId","items","reorder","list","startIndex","endIndex","from","removed","splice","localState","move","droppableSource","droppableDestination","sourceClone","destClone","Droppable","provided","snapshot","lg","innerRef","Card","Dropdown","align","Draggable","draggableId","draggableProps","dragHandleProps","TaskItem","Modal","show","onHide","size","centered","closeButton","values","formData","toLocaleDateString","year","month","day","FormInput","md","HyperDatepicker","handleDateChange","Button","variant"],"sourceRoot":""}