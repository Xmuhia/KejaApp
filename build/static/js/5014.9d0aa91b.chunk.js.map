{"version":3,"file":"static/js/5014.9d0aa91b.chunk.js","mappings":"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","sources":["pages/apps/Email/Inbox.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Card,\n  Dropdown,\n  ButtonGroup,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport LeftBar from \"./LeftBar\";\n\n// dafault data\nimport { emails as mails } from \"./data\";\n\n// emails list\nconst EmailsList = (props: { emails: EmailItems[] }) => {\n  const emails = props.emails || [];\n\n  return (\n    <>\n      <ul className=\"message-list\">\n        {(emails || []).map((email, idx) => {\n          return (\n            <li className={classNames({ unread: !email.is_read })} key={idx}>\n              <div className=\"col-mail col-mail-1\">\n                <div className=\"checkbox-wrapper-mail\">\n                  <div className=\"form-check\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      id={\"mail\" + email.id}\n                    />\n                    <label\n                      className=\"toggle\"\n                      htmlFor={\"mail\" + email.id}\n                    ></label>\n                  </div>\n                </div>\n                <span\n                  className={classNames(\"star-toggle\", \"far\", \"fa-star\", {\n                    \"text-warning\": email.is_important,\n                  })}\n                ></span>\n                <Link to=\"/apps/email/details\" className=\"title\">\n                  {email.from_name}\n                  {email.number_of_reply > 1 && (\n                    <span> ({email.number_of_reply})</span>\n                  )}\n                </Link>\n              </div>\n              <div className=\"col-mail col-mail-2\">\n                <Link to=\"/apps/email/details\" className=\"subject\">\n                  {email.subject} &nbsp;&ndash;&nbsp;\n                  <span className=\"teaser\">{email.teaser}</span>\n                </Link>\n                <div className=\"date\">{email.time}</div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\ninterface EmailItems {\n  id: number;\n  from_name: string;\n  from_email: string;\n  subject: string;\n  teaser: string;\n  number_of_reply: number;\n  is_important: boolean;\n  is_read: boolean;\n  time: string;\n  date: string;\n}\n\n// Inbox\nconst Inbox = () => {\n  const [emails, setEmails] = useState<Array<EmailItems>>(mails.slice(0, 20));\n  const [totalEmails] = useState<number>(mails.length);\n  const [pageSize] = useState<number>(20);\n  const [page, setPage] = useState<number>(1);\n  const [startIndex, setStartIndex] = useState<number>(1);\n  const [endIndex, setEndIndex] = useState<number>(20);\n  const [totalPages] = useState<number>(mails.length / 20);\n  const [totalUnreadEmails] = useState<number>(\n    mails.filter((e: any) => e.is_read === false).length\n  );\n\n  /**\n   * Gets the next page\n   */\n  const getNextPage = () => {\n    var nextPage = page + 1;\n    if (nextPage > totalEmails / pageSize) {\n      nextPage = totalEmails / pageSize;\n    }\n    var startIdx = nextPage * pageSize - pageSize + 1;\n    var endIdx = nextPage * pageSize;\n    setPage(nextPage);\n    setStartIndex(startIdx);\n    setEndIndex(endIdx);\n    setEmails(mails.slice(startIdx, endIdx));\n  };\n\n  /**\n   * Gets the prev page\n   */\n  const getPrevPage = () => {\n    var prevPage = page - 1;\n    if (prevPage === 0) prevPage = 1;\n    var startIdx = prevPage * pageSize - pageSize + 1;\n    var endIdx = prevPage * pageSize;\n    setPage(prevPage);\n    setStartIndex(startIdx);\n    setEndIndex(endIndex);\n    setEmails(mails.slice(startIdx, endIdx));\n  };\n\n  /**\n   * Shows the starred emails only\n   */\n  const showAllEmails = () => {\n    setEmails(mails.slice(0, 20));\n  };\n\n  /**\n   * Shows the starred emails only\n   */\n  const showStarredEmails = () => {\n    setEmails(mails.filter((e: any) => e.is_important).slice(0, 20));\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Email\", path: \"/apps/email/inbox\" },\n          { label: \"Inbox\", path: \"/apps/email/inbox\", active: true },\n        ]}\n        title={\"Inbox\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <div className=\"inbox-leftbar\">\n                <Link\n                  to=\"/apps/email/compose\"\n                  className=\"btn btn-danger w-100 waves-effect waves-light\"\n                >\n                  Compose\n                </Link>\n\n                <LeftBar\n                  totalUnreadEmails={totalUnreadEmails}\n                  showAllEmails={showAllEmails}\n                  showStarredEmails={showStarredEmails}\n                />\n              </div>\n              <div className=\"inbox-rightbar\">\n                <ButtonGroup className=\"me-1\">\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={<Tooltip id=\"archived\">Archived</Tooltip>}\n                  >\n                    <Button variant=\"light\" className=\"btn-sm waves-effect\">\n                      <i className=\"mdi mdi-archive font-18\"></i>\n                    </Button>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={<Tooltip id=\"spam\">Spam</Tooltip>}\n                  >\n                    <Button variant=\"light\" className=\"btn-sm waves-effect\">\n                      <i className=\"mdi mdi-alert-octagon font-18\"></i>\n                    </Button>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    key=\"bottm\"\n                    placement=\"bottom\"\n                    overlay={<Tooltip id=\"delete\">Delete</Tooltip>}\n                  >\n                    <Button variant=\"light\" className=\"btn-sm waves-effect\">\n                      <i className=\"mdi mdi-delete-variant font-18\"></i>\n                    </Button>\n                  </OverlayTrigger>\n                </ButtonGroup>\n\n                <Dropdown className=\"btn-group me-1\">\n                  <Dropdown.Toggle className=\"btn btn-light btn-sm waves-effect\">\n                    <i className=\"mdi mdi-folder font-18\"></i>{\" \"}\n                    <i className=\"mdi mdi-chevron-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <span className=\"dropdown-header\">Move to:</span>\n                    <Dropdown.Item>Social</Dropdown.Item>\n                    <Dropdown.Item>Promotions</Dropdown.Item>\n                    <Dropdown.Item>Updates</Dropdown.Item>\n                    <Dropdown.Item>Forums</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n\n                <Dropdown className=\"btn-group me-1\">\n                  <Dropdown.Toggle className=\"btn btn-light btn-sm waves-effect\">\n                    <i className=\"mdi mdi-label font-18\"></i>{\" \"}\n                    <i className=\"mdi mdi-chevron-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <span className=\"dropdown-header\">Label as:</span>\n                    <Dropdown.Item>Social</Dropdown.Item>\n                    <Dropdown.Item>Promotions</Dropdown.Item>\n                    <Dropdown.Item>Updates</Dropdown.Item>\n                    <Dropdown.Item>Forums</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n\n                <Dropdown className=\"btn-group me-1\">\n                  <Dropdown.Toggle className=\"btn btn-light btn-sm waves-effect\">\n                    <i className=\"mdi mdi-dots-horizontal font-18\"></i> More{\" \"}\n                    <i className=\"mdi mdi-chevron-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <span className=\"dropdown-header\">More Options :</span>\n                    <Dropdown.Item>Mark as Unread</Dropdown.Item>\n                    <Dropdown.Item>Add to Tasks</Dropdown.Item>\n                    <Dropdown.Item>Add Star</Dropdown.Item>\n                    <Dropdown.Item>Mute</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n\n                <div className=\"mt-3\">\n                  <EmailsList emails={emails} />\n                </div>\n\n                <Row>\n                  <Col sm={7} className=\"mt-1\">\n                    Showing {startIndex} - {endIndex} of {totalEmails}\n                  </Col>\n                  <Col sm={5}>\n                    <ButtonGroup className=\"float-end\">\n                      {page === 1 ? (\n                        <Button variant=\"light\" className=\"btn-sm\" disabled>\n                          <i className=\"mdi mdi-chevron-left\"></i>\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"info\"\n                          className=\"btn-sm\"\n                          onClick={getPrevPage}\n                        >\n                          <i className=\"mdi mdi-chevron-left\"></i>\n                        </Button>\n                      )}\n\n                      {page < totalPages ? (\n                        <Button\n                          variant=\"info\"\n                          className=\"btn-sm\"\n                          onClick={getNextPage}\n                        >\n                          <i className=\"mdi mdi-chevron-right\"></i>\n                        </Button>\n                      ) : (\n                        <Button variant=\"light\" className=\"btn-sm\" disabled>\n                          <i className=\"mdi mdi-chevron-right\"></i>\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </div>\n\n              <div className=\"clearfix\"></div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Inbox;\n"],"names":["EmailsList","props","emails","_jsx","_Fragment","children","className","map","email","idx","_jsxs","classNames","unread","is_read","type","id","htmlFor","is_important","Link","to","from_name","number_of_reply","subject","teaser","time","Inbox","setEmails","useState","mails","totalEmails","pageSize","page","setPage","startIndex","setStartIndex","endIndex","setEndIndex","totalPages","totalUnreadEmails","e","length","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","LeftBar","showAllEmails","showStarredEmails","slice","ButtonGroup","OverlayTrigger","placement","overlay","Tooltip","Button","variant","Dropdown","sm","disabled","onClick","getPrevPage","prevPage","startIdx","endIdx","getNextPage","nextPage"],"sourceRoot":""}