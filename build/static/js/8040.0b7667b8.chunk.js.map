{"version":3,"file":"static/js/8040.0b7667b8.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/StatisticsWidget.tsx","pages/dashboard/Landlord/Statistics.tsx","pages/dashboard/Landlord/RentCollectionProgress.tsx","pages/dashboard/Landlord/OccupancyTrends.tsx","pages/dashboard/Landlord/TopTenants.tsx","pages/dashboard/Landlord/RecentTransactions.tsx","pages/dashboard/Landlord/MaintenanceOverview.tsx","pages/dashboard/Landlord/LeaseExpiryTimeline.tsx","pages/dashboard/Landlord/data.tsx","pages/dashboard/Landlord/index.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  variant: string;\n  description: string;\n  stats: string;\n  icon: string;\n  counterOptions?: any;\n}\n\nconst StatisticsWidget = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card className=\"widget-rounded-circle\">\n        <Card.Body>\n          <Row>\n            <Col className=\"col-6\">\n              <div\n                className={classNames(\n                  \"avatar-lg\",\n                  \"rounded-circle\",\n                  \"bg-soft-\" + props[\"variant\"],\n                  \"border-\" + props[\"variant\"],\n                  \"border\"\n                )}\n              >\n                <i\n                  className={classNames(\n                    props[\"icon\"],\n                    \"avatar-title\",\n                    \"font-22\",\n                    \"text-\" + props[\"variant\"]\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col className=\"col-6\">\n              <div className=\"text-end\">\n                <h3 className=\"text-dark mt-1\">\n                  <span>\n                    <CountUp\n                      duration={1}\n                      end={props[\"stats\"]}\n                      {...props[\"counterOptions\"]}\n                    />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">\n                  {props[\"description\"]}\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport StatisticsWidget from \"../../../components/StatisticsWidget\";\n\nconst Statistics = () => {\n  return (\n    <Row>\n      <Col md={6} xl={3}>\n        <StatisticsWidget\n          variant=\"primary\"\n          counterOptions={{\n            prefix: \"$\",\n          }}\n          description=\"Total Rent Collected\"\n          stats=\"58947\"\n          icon=\"fe-dollar-sign\"\n        />\n      </Col>\n      <Col md={6} xl={3}>\n        <StatisticsWidget\n          variant=\"success\"\n          description=\"Occupancy Rate\"\n          stats=\"94.5\"\n          counterOptions={{\n            suffix: \"%\",\n            decimals: 1,\n          }}\n          icon=\"fe-home\"\n        />\n      </Col>\n      <Col md={6} xl={3}>\n        <StatisticsWidget\n          variant=\"info\"\n          description=\"Maintenance Requests\"\n          stats=\"28\"\n          icon=\"fe-tool\"\n        />\n      </Col>\n      <Col md={6} xl={3}>\n        <StatisticsWidget\n          variant=\"warning\"\n          description=\"Property Value\"\n          stats=\"5.2\"\n          counterOptions={{\n            prefix: \"$\",\n            suffix: \"M\",\n            decimals: 1,\n          }}\n          icon=\"fe-trending-up\"\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Statistics;","import React from \"react\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport ChartStatistics from \"../../../components/ChartStatistics\";\n\nconst RentCollectionProgress = () => {\n  // Simulated data - replace with actual data from your backend\n  const totalRent = 50000;\n  const collectedRent = 42500;\n  const outstandingRent = totalRent - collectedRent;\n  const latePayments = 3500;\n\n  const collectionPercentage = (collectedRent / totalRent) * 100;\n\n  const apexOpts: ApexOptions = {\n    chart: {\n      height: 242,\n      type: \"radialBar\",\n    },\n    plotOptions: {\n      radialBar: {\n        hollow: {\n          size: \"65%\",\n        },\n        dataLabels: {\n          name: {\n            fontSize: \"22px\",\n          },\n          value: {\n            fontSize: \"16px\",\n          },\n          total: {\n            show: true,\n            label: \"Collected\",\n            formatter: function (w) {\n              return collectionPercentage.toFixed(1) + \"%\";\n            },\n          },\n        },\n      },\n    },\n    colors: [\"#1abc9c\"],\n    labels: [\"Rent Collection\"],\n  };\n\n  const apexData = [collectionPercentage];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Generate Report</Dropdown.Item>\n            <Dropdown.Item>Export Data</Dropdown.Item>\n            <Dropdown.Item>Set Reminders</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-0\">Rent Collection Progress</h4>\n        <div className=\"widget-chart text-center\" dir=\"ltr\">\n          <Chart\n            options={apexOpts}\n            series={apexData}\n            type=\"radialBar\"\n            height={242}\n            className=\"apex-charts mt-0\"\n          />\n          <h5 className=\"text-muted mt-0\">Total Rent Collected This Month</h5>\n          <h2>${collectedRent.toLocaleString()}</h2>\n          <p className=\"text-muted w-75 mx-auto sp-line-2\">\n            Keep track of your monthly rent collection progress and outstanding payments.\n          </p>\n          <Row className=\"mt-3\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Total Rent\"\n                stats={`$${totalRent.toLocaleString()}`}\n                icon=\"fe-arrow-up\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Outstanding\"\n                stats={`$${outstandingRent.toLocaleString()}`}\n                icon=\"fe-arrow-down\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Late Payments\"\n                stats={`$${latePayments.toLocaleString()}`}\n                icon=\"fe-alert-triangle\"\n                variant=\"warning\"\n              />\n            </Col>\n          </Row>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RentCollectionProgress;","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst OccupancyTrends = () => {\n  // Simulated data - replace with actual data from your backend\n  const months = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n  ];\n  const rentalIncome = [\n    45000, 47000, 48000, 50000, 52000, 53000,\n    55000, 54000, 52000, 50000, 51000, 53000\n  ];\n  const occupancyRates = [\n    92, 94, 95, 97, 98, 98, \n    99, 98, 96, 95, 96, 97\n  ];\n\n  const apexOpts: ApexOptions = {\n    chart: {\n      height: 378,\n      type: \"line\",\n      zoom: {\n        enabled: false\n      },\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: [0, 3]\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"50%\"\n      }\n    },\n    colors: [\"#1abc9c\", \"#4a81d4\"],\n    series: [\n      {\n        name: \"Rental Income\",\n        type: \"column\",\n        data: rentalIncome\n      },\n      {\n        name: \"Occupancy Rate\",\n        type: \"line\",\n        data: occupancyRates\n      }\n    ],\n    fill: {\n      opacity: [0.85, 1],\n    },\n    labels: months,\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      type: \"category\"\n    },\n    yaxis: [\n      {\n        title: {\n          text: \"Rental Income ($)\",\n        },\n      },\n      {\n        opposite: true,\n        title: {\n          text: \"Occupancy Rate (%)\"\n        },\n        min: 80,\n        max: 100\n      }\n    ],\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== \"undefined\") {\n            return y.toFixed(0) + (y === occupancyRates[0] ? \"%\" : \"$\");\n          }\n          return y;\n        }\n      }\n    },\n    grid: {\n      borderColor: \"#f1f3fa\"\n    },\n    legend: {\n      offsetY: 7,\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"float-end d-none d-md-inline-block\">\n          <div className=\"btn-group mb-2\">\n            <button type=\"button\" className=\"btn btn-xs btn-light\">Today</button>\n            <button type=\"button\" className=\"btn btn-xs btn-light\">Weekly</button>\n            <button type=\"button\" className=\"btn btn-xs btn-secondary\">Monthly</button>\n          </div>\n        </div>\n        <h4 className=\"header-title mb-3\">Occupancy Trends</h4>\n        <div dir=\"ltr\">\n          <Chart\n            options={apexOpts}\n            series={apexOpts.series}\n            type=\"line\"\n            height={380}\n            className=\"apex-charts\"\n          />\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OccupancyTrends;","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// Import the Tenant type from your data file\nimport { Tenant } from \"./data\";\n\ninterface TopTenantsProps {\n  tenants: Tenant[];\n}\n\nconst TopTenants = ({ tenants }: TopTenantsProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Generate Report</Dropdown.Item>\n            <Dropdown.Item>Export Data</Dropdown.Item>\n            <Dropdown.Item>Send Notifications</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Top Tenants</h4>\n        <div className=\"table-responsive\">\n          <table className=\"table table-borderless table-hover table-nowrap table-centered m-0\">\n            <thead className=\"table-light\">\n              <tr>\n                <th>Tenant</th>\n                <th>Unit</th>\n                <th>Rent Amount</th>\n                <th>Payment Status</th>\n                <th>Tenancy Length</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tenants.map((tenant, i) => {\n                const tenancyLength = Math.floor((new Date().getTime() - new Date(tenant.tenancyStartDate).getTime()) / (1000 * 3600 * 24 * 30));\n                return (\n                  <tr key={i}>\n                    <td>\n                      <img\n                        src={tenant.avatar}\n                        alt=\"contact-img\"\n                        title=\"contact-img\"\n                        className=\"rounded-circle avatar-sm me-2\"\n                      />\n                      <span className=\"fw-semibold\">{tenant.name}</span>\n                    </td>\n                    <td>{tenant.unitNumber}</td>\n                    <td>${tenant.rentAmount.toLocaleString()}</td>\n                    <td>\n                      <span\n                        className={classNames(\"badge\", {\n                          \"bg-success\": tenant.paymentStatus === \"Paid\",\n                          \"bg-warning\": tenant.paymentStatus === \"Pending\",\n                          \"bg-danger\": tenant.paymentStatus === \"Late\",\n                        })}\n                      >\n                        {tenant.paymentStatus}\n                      </span>\n                    </td>\n                    <td>{tenancyLength} months</td>\n                    <td>\n                      <Link to=\"#\" className=\"btn btn-xs btn-light\">\n                        <i className=\"mdi mdi-eye\"></i>\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TopTenants;","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// Import the Transaction type from your data file\nimport { Transaction } from \"./data\";\n\ninterface RecentTransactionsProps {\n  transactions: Transaction[];\n}\n\nconst RecentTransactions = ({ transactions }: RecentTransactionsProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Generate Report</Dropdown.Item>\n            <Dropdown.Item>Export Transactions</Dropdown.Item>\n            <Dropdown.Item>Set Alerts</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Recent Transactions</h4>\n        <div className=\"table-responsive\">\n          <table className=\"table table-borderless table-hover table-nowrap table-centered m-0\">\n            <thead className=\"table-light\">\n              <tr>\n                <th>Transaction Type</th>\n                <th>Property</th>\n                <th>Amount</th>\n                <th>Date</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactions.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    <td>{item.transactionType}</td>\n                    <td>{item.property}</td>\n                    <td>${item.amount.toLocaleString()}</td>\n                    <td>{new Date(item.date).toLocaleDateString()}</td>\n                    <td>\n                      <span\n                        className={classNames(\"badge\", {\n                          \"bg-success\": item.status === \"Completed\",\n                          \"bg-warning\": item.status === \"Pending\",\n                          \"bg-danger\": item.status === \"Failed\",\n                        })}\n                      >\n                        {item.status}\n                      </span>\n                    </td>\n                    <td>\n                      <Link to=\"#\" className=\"btn btn-xs btn-light\">\n                        <i className=\"mdi mdi-eye\"></i>\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RecentTransactions;","import React from 'react';\nimport { Card, Dropdown, ProgressBar } from 'react-bootstrap';\n\n// This would typically come from your API\nconst maintenanceData = {\n  pending: 15,\n  inProgress: 8,\n  completed: 27,\n  averageResolutionTime: 3.5 // in days\n};\n\nconst MaintenanceOverview: React.FC = () => {\n  const total = maintenanceData.pending + maintenanceData.inProgress + maintenanceData.completed;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Generate Report</Dropdown.Item>\n            <Dropdown.Item>Export Data</Dropdown.Item>\n            <Dropdown.Item>Set Priority Levels</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Maintenance Overview</h4>\n        \n        <div className=\"mb-4\">\n          <h5>Pending Requests</h5>\n          <ProgressBar now={(maintenanceData.pending / total) * 100} variant=\"danger\" label={`${maintenanceData.pending}`} />\n        </div>\n        \n        <div className=\"mb-4\">\n          <h5>In Progress</h5>\n          <ProgressBar now={(maintenanceData.inProgress / total) * 100} variant=\"warning\" label={`${maintenanceData.inProgress}`} />\n        </div>\n        \n        <div className=\"mb-4\">\n          <h5>Completed</h5>\n          <ProgressBar now={(maintenanceData.completed / total) * 100} variant=\"success\" label={`${maintenanceData.completed}`} />\n        </div>\n        \n        <div className=\"mt-4\">\n          <h5>Average Resolution Time</h5>\n          <p className=\"text-muted mb-0\">\n            {maintenanceData.averageResolutionTime} days\n          </p>\n        </div>\n        \n        <div className=\"mt-4 text-center\">\n          <p className=\"text-muted mb-0\">\n            Total maintenance requests: {total}\n          </p>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MaintenanceOverview;","import React from 'react';\nimport { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\n// This would typically come from your API\nconst leaseExpiryData = [\n  { x: 'Next 30 days', y: 5 },\n  { x: '31-60 days', y: 8 },\n  { x: '61-90 days', y: 12 },\n  { x: 'Beyond 90 days', y: 25 }\n];\n\nconst LeaseExpiryTimeline: React.FC = () => {\n  const chartOptions: ApexOptions = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: true,\n        dataLabels: {\n          position: 'top'\n        },\n      }\n    },\n    colors: ['#ff4560', '#feb019', '#00e396', '#008ffb'],\n    dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n        fontSize: '12px',\n        colors: ['#fff']\n      }\n    },\n    legend: {\n      show: false\n    },\n    xaxis: {\n      categories: leaseExpiryData.map(d => d.x)\n    },\n    yaxis: {\n      title: {\n        text: \"Number of Leases Expiring\"\n      }\n    }\n  };\n\n  const series = [{\n    data: leaseExpiryData.map(d => d.y)\n  }];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Generate Report</Dropdown.Item>\n            <Dropdown.Item>Export Data</Dropdown.Item>\n            <Dropdown.Item>Set Reminders</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Lease Expiry Timeline</h4>\n        <Chart\n          options={chartOptions}\n          series={series}\n          type=\"bar\"\n          height={350}\n        />\n        <div className=\"mt-3 text-center\">\n          <p className=\"text-muted mb-0\">\n            Total leases expiring in next 90 days: {leaseExpiryData.slice(0, 3).reduce((sum, d) => sum + d.y, 0)}\n          </p>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LeaseExpiryTimeline;","import avatar1 from \"../../../assets/images/users/user-2.jpg\";\nimport avatar2 from \"../../../assets/images/users/user-3.jpg\";\nimport avatar3 from \"../../../assets/images/users/user-4.jpg\";\nimport avatar4 from \"../../../assets/images/users/user-5.jpg\";\nimport avatar5 from \"../../../assets/images/users/user-6.jpg\";\n\n// Define types for our data structures\nexport type PaymentStatus = \"Paid\" | \"Pending\" | \"Late\";\nexport type TransactionType = \"Rent\" | \"Maintenance\" | \"Deposit\" | \"Refund\";\nexport type TransactionStatus = \"Completed\" | \"Pending\" | \"Failed\";\n\nexport interface Tenant {\n  id: number;\n  avatar: string;\n  name: string;\n  unitNumber: string;\n  rentAmount: number;\n  paymentStatus: PaymentStatus;\n  tenancyStartDate: string;\n}\n\nexport interface Transaction {\n  id: number;\n  transactionType: TransactionType;\n  property: string;\n  amount: number;\n  date: string;\n  status: TransactionStatus;\n}\n\n// Top tenants data\nexport const topTenants: Tenant[] = [\n  {\n    id: 1,\n    avatar: avatar1,\n    name: \"John Doe\",\n    unitNumber: \"A101\",\n    rentAmount: 1500,\n    paymentStatus: \"Paid\",\n    tenancyStartDate: \"2022-01-01\",\n  },\n  {\n    id: 2,\n    avatar: avatar2,\n    name: \"Jane Smith\",\n    unitNumber: \"B205\",\n    rentAmount: 1800,\n    paymentStatus: \"Pending\",\n    tenancyStartDate: \"2021-06-15\",\n  },\n  {\n    id: 3,\n    avatar: avatar3,\n    name: \"Robert Johnson\",\n    unitNumber: \"C310\",\n    rentAmount: 2000,\n    paymentStatus: \"Late\",\n    tenancyStartDate: \"2023-03-01\",\n  },\n  {\n    id: 4,\n    avatar: avatar4,\n    name: \"Emily Brown\",\n    unitNumber: \"A205\",\n    rentAmount: 1600,\n    paymentStatus: \"Paid\",\n    tenancyStartDate: \"2022-11-01\",\n  },\n  {\n    id: 5,\n    avatar: avatar5,\n    name: \"Michael Wilson\",\n    unitNumber: \"B410\",\n    rentAmount: 2200,\n    paymentStatus: \"Paid\",\n    tenancyStartDate: \"2023-01-15\",\n  },\n];\n\n// Recent transactions data\nexport const recentTransactions: Transaction[] = [\n  {\n    id: 1,\n    transactionType: \"Rent\",\n    property: \"Sunrise Apartments\",\n    amount: 1500,\n    date: \"2024-08-01\",\n    status: \"Completed\",\n  },\n  {\n    id: 2,\n    transactionType: \"Maintenance\",\n    property: \"Sunset Condos\",\n    amount: 250,\n    date: \"2024-07-28\",\n    status: \"Pending\",\n  },\n  {\n    id: 3,\n    transactionType: \"Deposit\",\n    property: \"Lakeside Villas\",\n    amount: 2000,\n    date: \"2024-07-25\",\n    status: \"Completed\",\n  },\n  {\n    id: 4,\n    transactionType: \"Rent\",\n    property: \"Downtown Lofts\",\n    amount: 1800,\n    date: \"2024-07-20\",\n    status: \"Failed\",\n  },\n  {\n    id: 5,\n    transactionType: \"Refund\",\n    property: \"Hillside Apartments\",\n    amount: 500,\n    date: \"2024-07-15\",\n    status: \"Completed\",\n  },\n  {\n    id: 6,\n    transactionType: \"Rent\",\n    property: \"Riverside Apartments\",\n    amount: 1700,\n    date: \"2024-07-10\",\n    status: \"Completed\",\n  },\n];","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport HyperDatepicker from \"../../../components/Datepicker\";\nimport Statistics from \"./Statistics\";\nimport RentCollectionProgress from \"./RentCollectionProgress\";\nimport OccupancyTrends from \"./OccupancyTrends\";\nimport TopTenants from \"./TopTenants\";\nimport RecentTransactions from \"./RecentTransactions\";\nimport MaintenanceOverview from \"./MaintenanceOverview\";\nimport LeaseExpiryTimeline from \"./LeaseExpiryTimeline\";\n\n// data\nimport { topTenants, recentTransactions } from \"./data\";\n\nconst LandlordDashboard = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <div className=\"page-title-right\">\n              <form className=\"d-flex align-items-center mb-3\">\n                <div className=\"input-group input-group-sm\">\n                  <HyperDatepicker\n                    value={selectedDate}\n                    inputClass=\"border\"\n                    onChange={(date) => {\n                      onDateChange(date);\n                    }}\n                  />\n                </div>\n                <button className=\"btn btn-blue btn-sm ms-2\">\n                  <i className=\"mdi mdi-autorenew\"></i>\n                </button>\n                <button className=\"btn btn-blue btn-sm ms-1\">\n                  <i className=\"mdi mdi-filter-variant\"></i>\n                </button>\n              </form>\n            </div>\n            <h4 className=\"page-title\">Landlord Dashboard</h4>\n          </div>\n        </Col>\n      </Row>\n\n      <Statistics />\n\n      <Row>\n        <Col lg={4}>\n          <RentCollectionProgress />\n        </Col>\n        <Col lg={8}>\n          <OccupancyTrends />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <TopTenants tenants={topTenants} />\n        </Col>\n        <Col xl={6}>\n          <RecentTransactions transactions={recentTransactions} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <MaintenanceOverview />\n        </Col>\n        <Col xl={6}>\n          <LeaseExpiryTimeline />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default LandlordDashboard;"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","onDateValueChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Card","Row","Col","CountUp","duration","end","Statistics","md","xl","StatisticsWidget","variant","counterOptions","prefix","description","stats","icon","suffix","decimals","RentCollectionProgress","totalRent","collectedRent","outstandingRent","collectionPercentage","apexOpts","chart","height","plotOptions","radialBar","hollow","size","dataLabels","name","fontSize","total","show","label","formatter","w","toFixed","colors","labels","apexData","Dropdown","align","as","dir","Chart","options","series","toLocaleString","ChartStatistics","title","OccupancyTrends","occupancyRates","zoom","enabled","stroke","curve","width","bar","columnWidth","data","fill","opacity","markers","xaxis","yaxis","text","opposite","min","max","tooltip","shared","intersect","y","grid","borderColor","legend","offsetY","_ref","tenants","map","tenant","i","tenancyLength","Math","floor","Date","getTime","tenancyStartDate","src","avatar","alt","unitNumber","rentAmount","paymentStatus","Link","to","transactions","item","transactionType","property","amount","toLocaleDateString","status","maintenanceData","MaintenanceOverview","ProgressBar","now","leaseExpiryData","x","LeaseExpiryTimeline","chartOptions","horizontal","distributed","position","offsetX","style","categories","d","slice","reduce","sum","topTenants","id","recentTransactions","LandlordDashboard","selectedDate","setSelectedDate","useState","HyperDatepicker","onDateChange","lg","TopTenants","RecentTransactions"],"sourceRoot":""}