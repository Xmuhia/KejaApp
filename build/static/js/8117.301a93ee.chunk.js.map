{"version":3,"file":"static/js/8117.301a93ee.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","components/Pagination.tsx","components/Table.tsx","components/VerticalForm.tsx","components/FormInput.tsx","pages/apps/CRM/Tenants/TenantsListView.tsx","pages/apps/CRM/Tenants/Profile.tsx","pages/apps/CRM/Tenants/AddTentant.tsx","pages/apps/CRM/Tenants/data.tsx","pages/apps/CRM/Tenants/index.tsx","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\ninterface PaginationProps {\n  tableProps: any;\n  sizePerPageList: {\n    text: string;\n    value: number;\n  }[];\n}\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps) => {\n  /**\n   * pagination count , index\n   */\n  const [pageCount, setPageCount] = useState<number>(tableProps.pageCount);\n  const [pageIndex, setPageIndex] = useState<number>(\n    tableProps.state.pageIndex\n  );\n\n  useEffect(() => {\n    setPageCount(tableProps.pageCount);\n    setPageIndex(tableProps.state.pageIndex);\n  }, [tableProps.pageCount, tableProps.state.pageIndex]);\n\n  /**\n   * get filter pages\n   */\n  const filterPages = useCallback(\n    (visiblePages: any, totalPages: number) => {\n      return visiblePages.filter((page: any) => page <= pageCount);\n    },\n    [pageCount]\n  );\n\n  /**\n   * handle visible pages\n   */\n  const getVisiblePages = useCallback(\n    (page: number | null, total: number) => {\n      if (total < 7) {\n        return filterPages([1, 2, 3, 4, 5, 6], total);\n      } else {\n        if (page! % 5 >= 0 && page! > 4 && page! + 2 < total) {\n          return [1, page! - 1, page!, page! + 1, total];\n        } else if (page! % 5 >= 0 && page! > 4 && page! + 2 >= total) {\n          return [1, total - 3, total - 2, total - 1, total];\n        } else {\n          return [1, 2, 3, 4, 5, total];\n        }\n      }\n    },\n    [filterPages]\n  );\n\n  /**\n   * handle page change\n   * @param page - current page\n   * @returns\n   */\n  const changePage = (page: number) => {\n    const activePage = pageIndex + 1;\n\n    if (page === activePage) {\n      return;\n    }\n\n    const visiblePages = getVisiblePages(page, pageCount);\n    setVisiblePages(filterPages(visiblePages, pageCount));\n\n    tableProps.gotoPage(page - 1);\n  };\n\n  useEffect(() => {\n    const visiblePages = getVisiblePages(null, pageCount);\n    setVisiblePages(visiblePages);\n  }, [pageCount, getVisiblePages]);\n\n  const [visiblePages, setVisiblePages] = useState<number[]>(\n    getVisiblePages(null, pageCount)\n  );\n  const activePage: number = pageIndex + 1;\n\n  return (\n    <>\n      <div className=\"d-lg-flex align-items-center text-center pb-1\">\n        {sizePerPageList.length > 0 && (\n          <div className=\"d-inline-block me-3\">\n            <label className=\"me-1\">Display :</label>\n            <select\n              value={tableProps.state.pageSize}\n              onChange={(e: any) => {\n                tableProps.setPageSize(Number(e.target.value));\n              }}\n              className=\"form-select d-inline-block w-auto\"\n            >\n              {(sizePerPageList || []).map((pageSize, index) => {\n                return (\n                  <option key={index} value={pageSize.value}>\n                    {pageSize.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n\n        <span className=\"me-3\">\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {tableProps.pageOptions.length}\n          </strong>{\" \"}\n        </span>\n\n        <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n          <label className=\"form-label\">Go to page : </label>\n          <input\n            type=\"number\"\n            value={pageIndex + 1}\n            min=\"1\"\n            onChange={(e: any) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              tableProps.gotoPage(page);\n              setPageIndex(tableProps.state.pageIndex);\n            }}\n            className=\"form-control w-25 ms-1 d-inline-block\"\n          />\n        </span>\n\n        <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0\">\n          <li\n            key=\"prevpage\"\n            className={classNames(\"page-item\", \"paginate_button\", \"previous\", {\n              disabled: activePage === 1,\n            })}\n            onClick={() => {\n              if (activePage === 1) return;\n              changePage(activePage - 1);\n            }}\n          >\n            <Link to=\"#\" className=\"page-link\">\n              <i className=\"mdi mdi-chevron-left\"></i>\n            </Link>\n          </li>\n          {(visiblePages || []).map((page, index, array) => {\n            return array[index - 1] + 1 < page ? (\n              <React.Fragment key={page}>\n                <li className=\"page-item disabled d-none d-xl-inline-block\">\n                  <Link to=\"#\" className=\"page-link\">\n                    ...\n                  </Link>\n                </li>\n                <li\n                  className={classNames(\n                    \"page-item\",\n                    \"d-none\",\n                    \"d-xl-inline-block\",\n                    {\n                      active: activePage === page,\n                    }\n                  )}\n                  onClick={(e: any) => changePage(page)}\n                >\n                  <Link to=\"#\" className=\"page-link\">\n                    {page}\n                  </Link>\n                </li>\n              </React.Fragment>\n            ) : (\n              <li\n                key={page}\n                className={classNames(\n                  \"page-item\",\n                  \"d-none\",\n                  \"d-xl-inline-block\",\n                  {\n                    active: activePage === page,\n                  }\n                )}\n                onClick={(e: any) => changePage(page)}\n              >\n                <Link to=\"#\" className=\"page-link\">\n                  {page}\n                </Link>\n              </li>\n            );\n          })}\n          <li\n            key=\"nextpage\"\n            className={classNames(\"page-item\", \"paginate_button\", \"next\", {\n              disabled: activePage === tableProps.pageCount,\n            })}\n            onClick={() => {\n              if (activePage === tableProps.pageCount) return;\n              changePage(activePage + 1);\n            }}\n          >\n            <Link to=\"#\" className=\"page-link\">\n              <i className=\"mdi mdi-chevron-right\"></i>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Pagination;\n","import React, { useRef, useEffect, forwardRef, useState } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useRowSelect,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useExpanded,\n} from \"react-table\";\nimport classNames from \"classnames\";\n\n// components\nimport Pagination from \"./Pagination\";\n\ninterface GlobalFilterProps {\n  preGlobalFilteredRows: any;\n  globalFilter: any;\n  setGlobalFilter: any;\n  searchBoxClass: any;\n}\n\n// Define a default UI for filtering\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n  searchBoxClass,\n}: GlobalFilterProps) => {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState<any>(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <div className={classNames(searchBoxClass)}>\n      <span className=\"d-flex align-items-center\">\n        Search :{\" \"}\n        <input\n          type=\"search\"\n          value={value || \"\"}\n          onChange={(e: any) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          className=\"form-control w-auto ms-1\"\n        />\n      </span>\n    </div>\n  );\n};\n\ninterface IndeterminateCheckboxProps {\n  indeterminate: any;\n  children?: React.ReactNode;\n}\n\nconst IndeterminateCheckbox = forwardRef<\n  HTMLInputElement,\n  IndeterminateCheckboxProps\n>(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = useRef();\n  const resolvedRef: any = ref || defaultRef;\n\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  return (\n    <>\n      <div className=\"form-check\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          ref={resolvedRef}\n          {...rest}\n        />\n        <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n      </div>\n    </>\n  );\n});\n\ninterface TableProps {\n  isSearchable?: boolean;\n  isSortable?: boolean;\n  pagination?: boolean;\n  isSelectable?: boolean;\n  isExpandable?: boolean;\n  sizePerPageList?: {\n    text: string;\n    value: number;\n  }[];\n  columns: {\n    Header: string;\n    accessor: string;\n    sort?: boolean;\n    Cell?: any;\n    className?: string;\n  }[];\n  data: any[];\n  pageSize?: any;\n  searchBoxClass?: string;\n  tableClass?: string;\n  theadClass?: string;\n}\n\nconst Table = (props: TableProps) => {\n  const isSearchable = props[\"isSearchable\"] || false;\n  const isSortable = props[\"isSortable\"] || false;\n  const pagination = props[\"pagination\"] || false;\n  const isSelectable = props[\"isSelectable\"] || false;\n  const isExpandable = props[\"isExpandable\"] || false;\n  const sizePerPageList = props[\"sizePerPageList\"] || [];\n\n  let otherProps: any = {};\n\n  if (isSearchable) {\n    otherProps[\"useGlobalFilter\"] = useGlobalFilter;\n  }\n  if (isSortable) {\n    otherProps[\"useSortBy\"] = useSortBy;\n  }\n  if (isExpandable) {\n    otherProps[\"useExpanded\"] = useExpanded;\n  }\n  if (pagination) {\n    otherProps[\"usePagination\"] = usePagination;\n  }\n  if (isSelectable) {\n    otherProps[\"useRowSelect\"] = useRowSelect;\n  }\n\n  const dataTable = useTable(\n    {\n      columns: props[\"columns\"],\n      data: props[\"data\"],\n      initialState: { pageSize: props[\"pageSize\"] || 10 },\n    },\n    otherProps.hasOwnProperty(\"useGlobalFilter\") &&\n      otherProps[\"useGlobalFilter\"],\n    otherProps.hasOwnProperty(\"useSortBy\") && otherProps[\"useSortBy\"],\n    otherProps.hasOwnProperty(\"useExpanded\") && otherProps[\"useExpanded\"],\n    otherProps.hasOwnProperty(\"usePagination\") && otherProps[\"usePagination\"],\n    otherProps.hasOwnProperty(\"useRowSelect\") && otherProps[\"useRowSelect\"],\n    (hooks) => {\n      isSelectable &&\n        hooks.visibleColumns.push((columns: any) => [\n          // Let's make a column for selection\n          {\n            id: \"selection\",\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n              <div>\n                <IndeterminateCheckbox\n                  {...getToggleAllPageRowsSelectedProps()}\n                />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }: any) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ]);\n\n      isExpandable &&\n        hooks.visibleColumns.push((columns: any) => [\n          // Let's make a column for selection\n          {\n            // Build our expander column\n            id: \"expander\", // Make sure it has an ID\n            Header: ({\n              getToggleAllRowsExpandedProps,\n              isAllRowsExpanded,\n            }: any) => (\n              <span {...getToggleAllRowsExpandedProps()}>\n                {isAllRowsExpanded ? \"-\" : \"+\"}\n              </span>\n            ),\n            Cell: ({ row }) =>\n              // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n              // to build the toggle for expanding a row\n              row.canExpand ? (\n                <span\n                  {...row.getToggleRowExpandedProps({\n                    style: {\n                      // We can even use the row.depth property\n                      // and paddingLeft to indicate the depth\n                      // of the row\n                      paddingLeft: `${row.depth * 2}rem`,\n                    },\n                  })}\n                >\n                  {row.isExpanded ? \"-\" : \"+\"}\n                </span>\n              ) : null,\n          },\n          ...columns,\n        ]);\n    }\n  );\n\n  let rows = pagination ? dataTable.page : dataTable.rows;\n\n  return (\n    <>\n      {isSearchable && (\n        <GlobalFilter\n          preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n          globalFilter={dataTable.state.globalFilter}\n          setGlobalFilter={dataTable.setGlobalFilter}\n          searchBoxClass={props[\"searchBoxClass\"]}\n        />\n      )}\n\n      <div className=\"table-responsive\">\n        <table\n          {...dataTable.getTableProps()}\n          className={classNames(\n            \"table table-centered react-table\",\n            props[\"tableClass\"]\n          )}\n        >\n          <thead className={props[\"theadClass\"]}>\n            {(dataTable.headerGroups || []).map((headerGroup: any) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {(headerGroup.headers || []).map((column: any) => (\n                  <th\n                    {...column.getHeaderProps(\n                      column.sort && column.getSortByToggleProps()\n                    )}\n                    className={classNames({\n                      sorting_desc: column.isSortedDesc === true,\n                      sorting_asc: column.isSortedDesc === false,\n                      sortable: column.sort === true,\n                    })}\n                  >\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...dataTable.getTableBodyProps()}>\n            {(rows || []).map((row: any, i: number) => {\n              dataTable.prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {(row.cells || []).map((cell: any) => {\n                    return (\n                      <td\n                        {...cell.getCellProps([\n                          {\n                            className: cell.column.className,\n                          },\n                        ])}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {pagination && (\n        <Pagination tableProps={dataTable} sizePerPageList={sizePerPageList} />\n      )}\n    </>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: Resolver<TFormValues>;\n  children?: any;\n  onSubmit: SubmitHandler<TFormValues>;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface PasswordInputProps {\n  name: string;\n  placeholder?: string;\n  refCallback?: any;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n  className?: string;\n}\n\n/* Password Input */\nconst PasswordInput = ({\n  name,\n  placeholder,\n  refCallback,\n  errors,\n  control,\n  register,\n  className,\n}: PasswordInputProps) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  return (\n    <>\n      <InputGroup className=\"mb-0\">\n        <Form.Control\n          type={showPassword ? \"text\" : \"password\"}\n          placeholder={placeholder}\n          name={name}\n          id={name}\n          as=\"input\"\n          ref={(r: HTMLInputElement) => {\n            if (refCallback) refCallback(r);\n          }}\n          className={className}\n          isInvalid={errors && errors[name] ? true : false}\n          {...(register ? register(name) : {})}\n          autoComplete={name}\n        />\n        <div\n          className={classNames(\"input-group-text\", \"input-group-password\", {\n            \"show-password\": showPassword,\n          })}\n          data-password={showPassword ? \"true\" : \"false\"}\n        >\n          <span\n            className=\"password-eye\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}\n          ></span>\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  type?: string;\n  name: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  refCallback?: any;\n  children?: any;\n  rows?: string;\n}\n\nconst FormInput = ({\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  refCallback,\n  children,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"password\" ? (\n            <>\n              <Form.Group className={containerClass}>\n                {label ? (\n                  <>\n                    {\" \"}\n                    <Form.Label className={labelClassName}>\n                      {label}\n                    </Form.Label>{\" \"}\n                    {children}{\" \"}\n                  </>\n                ) : null}\n                <PasswordInput\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors!}\n                  register={register}\n                  className={className}\n                />\n\n                {errors && errors[name] ? (\n                  <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name][\"message\"]}\n                  </Form.Control.Feedback>\n                ) : null}\n              </Form.Group>\n            </>\n          ) : (\n            <>\n              {type === \"checkbox\" || type === \"radio\" ? (\n                <>\n                  <Form.Group className={containerClass}>\n                    <Form.Check\n                      type={type}\n                      label={label}\n                      name={name}\n                      id={name}\n                      ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                      }}\n                      className={className}\n                      isInvalid={errors && errors[name] ? true : false}\n                      {...(register ? register(name) : {})}\n                      {...otherProps}\n                    />\n\n                    {errors && errors[name] ? (\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors[name][\"message\"]}\n                      </Form.Control.Feedback>\n                    ) : null}\n                  </Form.Group>\n                </>\n              ) : (\n                <Form.Group className={containerClass}>\n                  {label ? (\n                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                  ) : null}\n\n                  <Form.Control\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as={comp}\n                    ref={(r: HTMLInputElement) => {\n                      if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    rows={rows}\n                    {...otherProps}\n                    autoComplete={name}\n                  >\n                    {children ? children : null}\n                  </Form.Control>\n\n                  {errors && errors[name] ? (\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors[name][\"message\"]}\n                    </Form.Control.Feedback>\n                  ) : null}\n                </Form.Group>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React from \"react\";\nimport { Card, Button, Badge, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n// components\nimport Table from \"../../../../components/Table\";\n// types\nimport { TenantDetails } from \"./data\";\n\ninterface TenantsListViewProps {\n  tenantDetails: TenantDetails[];\n  onTenantSelect: (tenant: TenantDetails) => void;\n  onAddTenant: () => void;\n}\n\nconst TenantsListView: React.FC<TenantsListViewProps> = ({ \n  tenantDetails, \n  onTenantSelect,\n  onAddTenant\n}) => {\n  // Tenant info column render\n  const TenantInfoColumn = ({ row }: { row: any }) => (\n    <>\n      <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" width=\"32\" />\n      <Link to=\"#\" className=\"text-body fw-semibold\" onClick={() => onTenantSelect(row.original)}>\n        {row.original.name}\n      </Link>\n      <span className=\"ms-2 text-muted\">#{row.original.unitNumber}</span>\n    </>\n  );\n\n  // Lease status column render\n  const LeaseStatusColumn = ({ row }: { row: any }) => {\n    const leaseEndDate = new Date(row.original.leaseInfo.endDate);\n    const today = new Date();\n    const daysUntilLease = Math.ceil((leaseEndDate.getTime() - today.getTime()) / (1000 * 3600 * 24));\n    let statusBadge;\n\n    if (daysUntilLease > 30) {\n      statusBadge = <Badge bg=\"success\">Active</Badge>;\n    } else if (daysUntilLease > 0) {\n      statusBadge = <Badge bg=\"warning\">Expiring Soon</Badge>;\n    } else {\n      statusBadge = <Badge bg=\"danger\">Expired</Badge>;\n    }\n\n    return (\n      <>\n        {statusBadge}\n        <small className=\"ms-1 text-muted\">{daysUntilLease > 0 ? `${daysUntilLease} days left` : 'Expired'}</small>\n      </>\n    );\n  };\n\n  // Payment status column render\n  const PaymentStatusColumn = ({ row }: { row: any }) => {\n    const { outstandingBalance } = row.original.paymentHistory;\n    let statusBadge;\n\n    if (outstandingBalance === 0) {\n      statusBadge = <Badge bg=\"success\">Paid</Badge>;\n    } else if (outstandingBalance > 0) {\n      statusBadge = <Badge bg=\"danger\">Outstanding</Badge>;\n    }\n\n    return (\n      <>\n        {statusBadge}\n        <small className=\"ms-1 text-muted\">${outstandingBalance.toFixed(2)}</small>\n      </>\n    );\n  };\n\n  // Action column render\n  const ActionColumn = ({ row }: { row: any }) => (\n    <Dropdown align=\"end\">\n      <Dropdown.Toggle variant=\"link\" className=\"card-drop arrow-none cursor-pointer p-0 shadow-none\">\n        <i className=\"mdi mdi-dots-horizontal\"></i>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => onTenantSelect(row.original)}>View Profile</Dropdown.Item>\n        <Dropdown.Item>Edit Lease</Dropdown.Item>\n        <Dropdown.Item>Send Reminder</Dropdown.Item>\n        <Dropdown.Item className=\"text-danger\">Terminate Lease</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n\n  const columns = [\n    {\n      Header: \"Tenant\",\n      accessor: \"name\",\n      sort: true,\n      Cell: TenantInfoColumn,\n      className: \"table-user\",\n    },\n    {\n      Header: \"Contact\",\n      accessor: \"phone\",\n      sort: true,\n    },\n    {\n      Header: \"Lease Status\",\n      accessor: \"leaseInfo.endDate\",\n      sort: true,\n      Cell: LeaseStatusColumn,\n    },\n    {\n      Header: \"Rent\",\n      accessor: \"leaseInfo.rentAmount\",\n      sort: true,\n      Cell: ({ value }: { value: number }) => `$${value.toFixed(2)}`,\n    },\n    {\n      Header: \"Payment Status\",\n      accessor: \"paymentHistory\",\n      sort: true,\n      Cell: PaymentStatusColumn,\n    },\n    {\n      Header: \"Tenant Score\",\n      accessor: \"tenantScore\",\n      sort: true,\n      Cell: ({ value }: { value: number }) => (\n        <span className={classNames(\n          { 'text-success': value >= 80 },\n          { 'text-warning': value >= 60 && value < 80 },\n          { 'text-danger': value < 60 }\n        )}>\n          {value}\n        </span>\n      ),\n    },\n    {\n      Header: \"Action\",\n      accessor: \"action\",\n      sort: false,\n      Cell: ActionColumn,\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between align-items-center mb-2\">\n          <h4 className=\"header-title mb-0\">Tenants List</h4>\n          <Button \n            variant=\"primary\" \n            onClick={onAddTenant}\n          >\n            Add New Tenant\n          </Button>\n        </div>\n        <Table\n          columns={columns}\n          data={tenantDetails}\n          pageSize={10}\n          isSortable={true}\n          pagination={true}\n          isSearchable={true}\n          tableClass=\"table-nowrap table-hover\"\n          searchBoxClass=\"my-2\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TenantsListView;","import React from \"react\";\nimport { Card, Row, Col, Table, Badge, Button } from \"react-bootstrap\";\nimport { TenantDetails } from \"./data\";\n\ninterface ProfileProps {\n  tenantDetails: TenantDetails;\n}\n\nconst Profile: React.FC<ProfileProps> = ({ tenantDetails }) => {\n  const getPaymentStatusBadge = (outstandingBalance: number) => {\n    if (outstandingBalance === 0) {\n      return <Badge bg=\"success\">Paid</Badge>;\n    } else {\n      return <Badge bg=\"danger\">Outstanding</Badge>;\n    }\n  };\n\n  const getMaintenanceStatusBadge = (status: string) => {\n    switch (status) {\n      case 'Open':\n        return <Badge bg=\"danger\">Open</Badge>;\n      case 'In Progress':\n        return <Badge bg=\"warning\">In Progress</Badge>;\n      case 'Closed':\n        return <Badge bg=\"success\">Closed</Badge>;\n      default:\n        return <Badge bg=\"secondary\">Unknown</Badge>;\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex align-items-start mb-3\">\n          <img\n            className=\"d-flex me-3 rounded-circle avatar-lg\"\n            src={tenantDetails.avatar}\n            alt={tenantDetails.name}\n          />\n          <div className=\"w-100\">\n            <h4 className=\"mt-0 mb-1\">{tenantDetails.name}</h4>\n            <p className=\"text-muted\">Tenant ID: {tenantDetails.id}</p>\n            <p className=\"text-muted\">\n              <i className=\"mdi mdi-office-building\"></i> Unit: {tenantDetails.unitNumber}\n            </p>\n            <Button variant=\"primary\" size=\"sm\" className=\"me-1\">\n              Send Message\n            </Button>\n            <Button variant=\"info\" size=\"sm\">\n              Edit Profile\n            </Button>\n          </div>\n        </div>\n\n        <h5 className=\"mb-3 mt-4 text-uppercase bg-light p-2\">\n          <i className=\"mdi mdi-account-circle me-1\"></i> Personal Information\n        </h5>\n        <Row>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Phone:</strong> <span className=\"ms-2\">{tenantDetails.phone}</span></p>\n          </Col>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Email:</strong> <span className=\"ms-2\">{tenantDetails.email}</span></p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Occupants:</strong> <span className=\"ms-2\">{tenantDetails.occupants}</span></p>\n          </Col>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Pets:</strong> <span className=\"ms-2\">{tenantDetails.pets ? 'Yes' : 'No'}</span></p>\n          </Col>\n        </Row>\n        <p className=\"text-muted\"><strong>Parking Space:</strong> <span className=\"ms-2\">{tenantDetails.parkingSpace || 'N/A'}</span></p>\n\n        <h5 className=\"mb-3 mt-4 text-uppercase bg-light p-2\">\n          <i className=\"mdi mdi-office-building me-1\"></i> Lease Information\n        </h5>\n        <Row>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Start Date:</strong> <span className=\"ms-2\">{tenantDetails.leaseInfo.startDate}</span></p>\n          </Col>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>End Date:</strong> <span className=\"ms-2\">{tenantDetails.leaseInfo.endDate}</span></p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Rent Amount:</strong> <span className=\"ms-2\">${tenantDetails.leaseInfo.rentAmount}</span></p>\n          </Col>\n          <Col md={6}>\n            <p className=\"text-muted\"><strong>Security Deposit:</strong> <span className=\"ms-2\">${tenantDetails.leaseInfo.securityDeposit}</span></p>\n          </Col>\n        </Row>\n\n        <h5 className=\"mb-3 mt-4 text-uppercase bg-light p-2\">\n          <i className=\"mdi mdi-currency-usd me-1\"></i> Payment History\n        </h5>\n        <Row>\n          <Col>\n            <p className=\"text-muted\"><strong>Last Payment Date:</strong> <span className=\"ms-2\">{tenantDetails.paymentHistory.lastPaymentDate}</span></p>\n            <p className=\"text-muted\"><strong>Last Payment Amount:</strong> <span className=\"ms-2\">${tenantDetails.paymentHistory.lastPaymentAmount}</span></p>\n            <p className=\"text-muted\"><strong>Payment Method:</strong> <span className=\"ms-2\">{tenantDetails.paymentHistory.paymentMethod}</span></p>\n            <p className=\"text-muted\">\n              <strong>Outstanding Balance:</strong> \n              <span className=\"ms-2\">\n                ${tenantDetails.paymentHistory.outstandingBalance} \n                {getPaymentStatusBadge(tenantDetails.paymentHistory.outstandingBalance)}\n              </span>\n            </p>\n          </Col>\n        </Row>\n\n        <h5 className=\"mb-3 mt-4 text-uppercase bg-light p-2\">\n          <i className=\"mdi mdi-tools me-1\"></i> Maintenance Requests\n        </h5>\n        <Table responsive className=\"table-sm table-centered mb-0\">\n          <thead>\n            <tr>\n              <th>Issue</th>\n              <th>Status</th>\n              <th>Date Submitted</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tenantDetails.maintenanceRequests.map((request, index) => (\n              <tr key={index}>\n                <td>{request.issue}</td>\n                <td>{getMaintenanceStatusBadge(request.status)}</td>\n                <td>{request.dateSubmitted}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n\n        <h5 className=\"mb-3 mt-4 text-uppercase bg-light p-2\">\n          <i className=\"mdi mdi-star me-1\"></i> Tenant Score\n        </h5>\n        <p className=\"text-muted\">\n          <strong>Current Score:</strong> \n          <span className={`ms-2 ${\n            tenantDetails.tenantScore >= 80 ? 'text-success' : \n            tenantDetails.tenantScore >= 60 ? 'text-warning' : 'text-danger'\n          }`}>\n            {tenantDetails.tenantScore}\n          </span>\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { VerticalForm, FormInput } from \"../../../../components\";\n\ninterface AddTenantProps {\n  show: boolean;\n  onHide: () => void;\n  onSubmit: (value: any) => void;\n}\n\nconst AddTenant = ({ show, onHide, onSubmit }: AddTenantProps) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter name\"),\n      email: yup.string().required(\"Please enter email\").email(\"Please enter valid email\"),\n      phone: yup.string().required(\"Please enter phone\").matches(/^\\d{10}$/, \"Phone number is not valid\"),\n      unitNumber: yup.string().required(\"Please enter unit number\"),\n      leaseStartDate: yup.date().required(\"Please enter lease start date\"),\n      leaseEndDate: yup.date().required(\"Please enter lease end date\"),\n      rentAmount: yup.number().required(\"Please enter rent amount\").positive(\"Rent amount must be positive\"),\n      securityDeposit: yup.number().required(\"Please enter security deposit\").positive(\"Security deposit must be positive\"),\n      occupants: yup.number().required(\"Please enter number of occupants\").positive().integer(),\n      pets: yup.boolean().required(\"Please specify if pets are allowed\"),\n      parkingSpace: yup.string().nullable(),\n    })\n  );\n\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add New Tenant</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <VerticalForm onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n          <Row>\n            <Col md={6}>\n              <FormInput\n                label=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter tenant's full name\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={6}>\n              <FormInput\n                label=\"Email address\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormInput\n                label=\"Phone\"\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"Enter phone number\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={6}>\n              <FormInput\n                label=\"Unit Number\"\n                type=\"text\"\n                name=\"unitNumber\"\n                placeholder=\"Enter unit number\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormInput\n                label=\"Lease Start Date\"\n                type=\"date\"\n                name=\"leaseStartDate\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={6}>\n              <FormInput\n                label=\"Lease End Date\"\n                type=\"date\"\n                name=\"leaseEndDate\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormInput\n                label=\"Rent Amount\"\n                type=\"number\"\n                name=\"rentAmount\"\n                placeholder=\"Enter monthly rent amount\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={6}>\n              <FormInput\n                label=\"Security Deposit\"\n                type=\"number\"\n                name=\"securityDeposit\"\n                placeholder=\"Enter security deposit amount\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={4}>\n              <FormInput\n                label=\"Number of Occupants\"\n                type=\"number\"\n                name=\"occupants\"\n                placeholder=\"Enter number of occupants\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={4}>\n              <FormInput\n                label=\"Pets Allowed\"\n                type=\"checkbox\"\n                name=\"pets\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n            <Col md={4}>\n              <FormInput\n                label=\"Parking Space\"\n                type=\"text\"\n                name=\"parkingSpace\"\n                placeholder=\"Enter parking space number\"\n                containerClass={\"mb-3\"}\n              />\n            </Col>\n          </Row>\n          <div className=\"text-end\">\n            <Button variant=\"success\" type=\"submit\" className=\"waves-effect waves-light me-1\">\n              Save\n            </Button>\n            <Button variant=\"danger\" className=\"waves-effect waves-light\" onClick={onHide}>\n              Cancel\n            </Button>\n          </div>\n        </VerticalForm>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddTenant;","import avatar1 from \"../../../../assets/images/users/user-1.jpg\";\nimport avatar3 from \"../../../../assets/images/users/user-3.jpg\";\nimport avatar4 from \"../../../../assets/images/users/user-4.jpg\";\nimport avatar5 from \"../../../../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../../../../assets/images/users/user-6.jpg\";\nimport avatar7 from \"../../../../assets/images/users/user-7.jpg\";\nimport avatar8 from \"../../../../assets/images/users/user-8.jpg\";\nimport avatar9 from \"../../../../assets/images/users/user-9.jpg\";\nimport avatar10 from \"../../../../assets/images/users/user-10.jpg\";\n\ninterface LeaseInfo {\n  startDate: string;\n  endDate: string;\n  rentAmount: number;\n  securityDeposit: number;\n}\n\ninterface PaymentHistory {\n  lastPaymentDate: string;\n  lastPaymentAmount: number;\n  paymentMethod: string;\n  outstandingBalance: number;\n}\n\ninterface MaintenanceRequest {\n  id: number;\n  issue: string;\n  status: 'Open' | 'In Progress' | 'Closed';\n  dateSubmitted: string;\n}\n\nexport interface TenantDetails {\n  id: number;\n  avatar: string;\n  name: string;\n  phone: string;\n  email: string;\n  unitNumber: string;\n  leaseInfo: LeaseInfo;\n  paymentHistory: PaymentHistory;\n  maintenanceRequests: MaintenanceRequest[];\n  occupants: number;\n  pets: boolean;\n  parkingSpace: string | null;\n  tenantScore: number;\n}\n\nconst tenants: TenantDetails[] = [\n  {\n    id: 1,\n    avatar: avatar4,\n    name: \"Paul J. Friend\",\n    phone: \"937-330-1634\",\n    email: \"pauljfrnd@jourrapide.com\",\n    unitNumber: \"A101\",\n    leaseInfo: {\n      startDate: \"2023-01-01\",\n      endDate: \"2023-12-31\",\n      rentAmount: 1200,\n      securityDeposit: 1200\n    },\n    paymentHistory: {\n      lastPaymentDate: \"2023-07-01\",\n      lastPaymentAmount: 1200,\n      paymentMethod: \"Bank Transfer\",\n      outstandingBalance: 0\n    },\n    maintenanceRequests: [\n      {\n        id: 101,\n        issue: \"Leaky faucet in kitchen\",\n        status: \"Open\",\n        dateSubmitted: \"2023-07-15\"\n      }\n    ],\n    occupants: 2,\n    pets: false,\n    parkingSpace: \"P45\",\n    tenantScore: 95\n  },\n  {\n    id: 2,\n    avatar: avatar3,\n    name: \"Bryan J. Luellen\",\n    phone: \"215-302-3376\",\n    email: \"bryuellen@dayrep.com\",\n    unitNumber: \"B205\",\n    leaseInfo: {\n      startDate: \"2023-03-01\",\n      endDate: \"2024-02-29\",\n      rentAmount: 1500,\n      securityDeposit: 1500\n    },\n    paymentHistory: {\n      lastPaymentDate: \"2023-07-02\",\n      lastPaymentAmount: 1500,\n      paymentMethod: \"Credit Card\",\n      outstandingBalance: 0\n    },\n    maintenanceRequests: [],\n    occupants: 1,\n    pets: true,\n    parkingSpace: \"P22\",\n    tenantScore: 88\n  },\n  // ... Add more tenant data here\n];\n\nexport { tenants };","import React, { useState, useCallback } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\nimport TenantsListView from \"./TenantsListView\";\nimport Profile from \"./Profile\";\nimport AddTenant from \"./AddTentant\";\n\n// dummy data\nimport { tenants, TenantDetails } from \"./data\";\n\nconst Tenants: React.FC = () => {\n  const [tenantsData, setTenantsData] = useState<TenantDetails[]>(tenants);\n  const [selectedTenant, setSelectedTenant] = useState<TenantDetails | null>(null);\n  const [showAddTenant, setShowAddTenant] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleTenantSelect = useCallback((tenant: TenantDetails) => {\n    setSelectedTenant(tenant);\n  }, []);\n\n  const handleAddTenant = useCallback((newTenant: TenantDetails) => {\n    setIsLoading(true);\n    setError(null);\n\n    // Simulating an API call\n    setTimeout(() => {\n      try {\n        // In a real application, you would add the new tenant to your backend\n        // and then update the local state with the response\n        const updatedTenants = [...tenantsData, { ...newTenant, id: tenantsData.length + 1 }];\n        setTenantsData(updatedTenants);\n        setShowAddTenant(false);\n        setIsLoading(false);\n      } catch (err) {\n        setError(\"Failed to add new tenant. Please try again.\");\n        setIsLoading(false);\n      }\n    }, 1000);\n  }, [tenantsData]);\n\n  const toggleAddTenantModal = useCallback(() => {\n    setShowAddTenant(prev => !prev);\n  }, []);\n\n  if (error) {\n    return <div className=\"text-danger\">{error}</div>;\n  }\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"CRM\", path: \"/apps/crm/tenants\" },\n          { label: \"Tenants\", path: \"/apps/crm/tenants\", active: true },\n        ]}\n        title={\"Tenant Management\"}\n      />\n\n      <Row>\n        <Col lg={12} xl={9}>\n          <TenantsListView \n            tenantDetails={tenantsData} \n            onTenantSelect={handleTenantSelect}\n            onAddTenant={toggleAddTenantModal}\n          />\n        </Col>\n        <Col lg={12} xl={3}>\n          {selectedTenant ? (\n            <Profile tenantDetails={selectedTenant} />\n          ) : (\n            <div className=\"alert alert-info\">Select a tenant to view their profile</div>\n          )}\n        </Col>\n      </Row>\n\n      <AddTenant \n        show={showAddTenant}\n        onHide={toggleAddTenantModal}\n        onSubmit={handleAddTenant}\n      />\n\n      {isLoading && <div className=\"text-center\">Loading...</div>}\n    </>\n  );\n};\n\nexport default Tenants;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","_ref","tableProps","sizePerPageList","pageCount","setPageCount","useState","pageIndex","setPageIndex","state","useEffect","filterPages","useCallback","visiblePages","totalPages","filter","page","getVisiblePages","total","changePage","setVisiblePages","gotoPage","activePage","_Fragment","length","value","pageSize","onChange","e","setPageSize","Number","target","text","pageOptions","type","min","classNames","disabled","onClick","Link","to","array","React","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","setValue","useAsyncDebounce","undefined","placeholder","IndeterminateCheckbox","forwardRef","_ref2","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","htmlFor","isSearchable","isSortable","pagination","isSelectable","isExpandable","otherProps","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","dataTable","useTable","columns","data","initialState","hasOwnProperty","hooks","visibleColumns","push","id","Header","_ref3","getToggleAllPageRowsSelectedProps","Cell","_ref4","row","getToggleRowSelectedProps","_ref5","getToggleAllRowsExpandedProps","isAllRowsExpanded","_ref6","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","i","prepareRow","getRowProps","cells","cell","getCellProps","Pagination","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","formState","errors","noValidate","Array","isArray","child","name","key","PasswordInput","refCallback","showPassword","setShowPassword","InputGroup","Form","as","r","isInvalid","autoComplete","labelClassName","containerClass","comp","tenantDetails","onTenantSelect","onAddTenant","accessor","src","original","avatar","alt","width","unitNumber","leaseEndDate","Date","leaseInfo","endDate","today","daysUntilLease","Math","ceil","getTime","statusBadge","Badge","bg","toFixed","outstandingBalance","paymentHistory","_ref7","Dropdown","align","variant","Card","Button","Table","tableClass","getMaintenanceStatusBadge","status","size","md","phone","email","occupants","pets","parkingSpace","startDate","rentAmount","securityDeposit","lastPaymentDate","lastPaymentAmount","paymentMethod","responsive","maintenanceRequests","request","issue","dateSubmitted","tenantScore","show","onHide","schemaResolver","yupResolver","yup","shape","required","matches","leaseStartDate","positive","integer","nullable","Modal","centered","closeButton","VerticalForm","FormInput","tenants","avatar3","Tenants","tenantsData","setTenantsData","selectedTenant","setSelectedTenant","showAddTenant","setShowAddTenant","isLoading","setIsLoading","error","setError","handleTenantSelect","tenant","handleAddTenant","newTenant","setTimeout","updatedTenants","err","toggleAddTenantModal","prev","PageTitle","breadCrumbItems","title","lg","xl","TenantsListView","Profile","AddTenant","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef","bsPrefix","pill","Component","prefix","useBootstrapPrefix","displayName","defaultProps","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","position","top","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","contentClassName","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","AbstractModalHeader","closeLabel","DivStyledAsH4","divWithClassName","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","backdropProps","baseModalStyle","display","ModalContext","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","striped","bordered","borderless","hover","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}