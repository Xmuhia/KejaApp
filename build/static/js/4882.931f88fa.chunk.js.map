{"version":3,"file":"static/js/4882.931f88fa.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","pages/uikit/Placeholders.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return { ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, { ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, { ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","import React from \"react\";\nimport { Card, Col, Row, Button, Placeholder } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport img1 from \"../../assets/images/small/img-5.jpg\";\nimport img2 from \"../../assets/images/small/img-3.jpg\";\n\nconst BasicPlaceholders = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Placeholders</h4>\n          <p className=\"text-muted\">\n            In the example below, we take a typical card component and recreate\n            it with placeholders applied to create a “loading card”. Size and\n            proportions are the same between the two.\n          </p>\n\n          <Row>\n            <Col md={6}>\n              <Card className=\"border shadow-none\">\n                <Card.Img variant=\"top\" src={img1} />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={6}>\n              <Card className=\"border shadow-none mb-0\">\n                <Card.Img variant=\"top\" src={img2} />\n                <Card.Body>\n                  <Placeholder as={Card.Title} animation=\"glow\">\n                    <Placeholder xs={6} />\n                  </Placeholder>\n                  <Placeholder as={Card.Text} animation=\"glow\">\n                    <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\n                    <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\n                    <Placeholder xs={8} />\n                  </Placeholder>\n                  <Placeholder.Button variant=\"primary\" xs={6} />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWidth = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Width</h4>\n          <p className=\"text-muted\">\n            You can change the <code>width</code> through grid column classes,\n            width utilities, or inline styles.\n          </p>\n          <Placeholder xs={6} />\n          <Placeholder className=\"w-75\" /> <br />\n          <Placeholder style={{ width: \"25%\" }} />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersAnimation = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Animation</h4>\n          <p className=\"text-muted\">\n            Animate placeholders by setting the prop <code>animation</code> to{\" \"}\n            <code>glow</code> or <code>wave</code> to better convey the\n            perception of something being <em>actively</em> loaded.\n          </p>\n\n          <Placeholder as=\"p\" animation=\"glow\">\n            <Placeholder xs={12} />\n          </Placeholder>\n          <Placeholder as=\"p\" animation=\"wave\" className=\"mb-0\">\n            <Placeholder xs={12} />\n          </Placeholder>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithVariants = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Color</h4>\n          <p className=\"text-muted\">\n            By default, the <code>placeholder</code> uses{\" \"}\n            <code>currentColor</code>. This can be overriden with a custom color\n            or utility class.\n          </p>\n\n          <Placeholder xs={12} />\n\n          <Placeholder xs={12} bg=\"primary\" />\n          <Placeholder xs={12} bg=\"secondary\" />\n          <Placeholder xs={12} bg=\"success\" />\n          <Placeholder xs={12} bg=\"danger\" />\n          <Placeholder xs={12} bg=\"warning\" />\n          <Placeholder xs={12} bg=\"info\" />\n          <Placeholder xs={12} bg=\"light\" />\n          <Placeholder xs={12} bg=\"dark\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersConcept = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">How it works</h4>\n          <p className=\"text-muted\">\n            Create placeholders with the <code>Placeholder</code> component and\n            a grid column prop (e.g., <code>xs={6}</code>) to set the{\" \"}\n            <code>width</code>. They can replace the text inside an element or\n            be added to an existing component via the <code>as</code> prop.\n          </p>\n\n          <p aria-hidden=\"true\">\n            <Placeholder xs={6} />\n          </p>\n\n          <Placeholder.Button xs={4} aria-hidden=\"true\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithSizes = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Sizing</h4>\n          <p className=\"text-muted\">\n            The size of <code>placeholder</code>s are based on the typographic\n            style of the parent element. Customize them with sizing props:{\" \"}\n            <code>lg</code>, <code>sm</code>, or <code>xs</code>.\n          </p>\n\n          <Placeholder xs={12} size=\"lg\" />\n          <Placeholder xs={12} />\n          <Placeholder xs={12} size=\"sm\" />\n          <Placeholder xs={12} size=\"xs\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst Placeholders = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/placeholders\" },\n          { label: \"Placeholders\", path: \"/ui/placeholders\", active: true },\n        ]}\n        title={\"Placeholders\"}\n      />\n      <Row>\n        <Col xl={6}>\n          <BasicPlaceholders />\n          <PlaceholdersWidth />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersWithVariants />\n          <PlaceholdersConcept />\n          <PlaceholdersWithSizes />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersAnimation />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Placeholders;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","usePlaceholder","_ref","animation","bg","bsPrefix","size","useBootstrapPrefix","colProps","useCol","classNames","PlaceholderButton","React","ref","placeholderProps","Button","disabled","tabIndex","displayName","Placeholder","as","Component","Object","assign","BasicPlaceholders","_Fragment","Card","md","variant","src","img1","img2","xs","PlaceholdersWidth","style","width","PlaceholdersAnimation","PlaceholdersWithVariants","PlaceholdersConcept","PlaceholdersWithSizes","Placeholders","PageTitle","breadCrumbItems","title","xl","prefix","buttonProps","tagName","useButtonProps","defaultProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","arguments","length","undefined","BsComponent","Tag","resolvedPrefix","p"],"sourceRoot":""}