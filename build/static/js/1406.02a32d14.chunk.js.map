{"version":3,"file":"static/js/1406.02a32d14.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/apps/CRM/Other/Timeline.tsx","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Row, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport PageTitle from \"../../../../components/PageTitle\";\n\ninterface TimelineEvent {\n  id: number;\n  date: string;\n  time: string;\n  title: string;\n  description: string;\n  type: 'payment' | 'maintenance' | 'lease' | 'notification';\n}\n\nconst Timeline: React.FC = () => {\n  const events: TimelineEvent[] = [\n    {\n      id: 1,\n      date: \"2024-09-01\",\n      time: \"09:00 AM\",\n      title: \"Rent Payment Received\",\n      description: \"September rent payment of KES 50,000 received via Mpesa.\",\n      type: \"payment\"\n    },\n    {\n      id: 2,\n      date: \"2024-08-28\",\n      time: \"02:30 PM\",\n      title: \"Maintenance Request Completed\",\n      description: \"Leaky faucet in Unit 301 has been repaired.\",\n      type: \"maintenance\"\n    },\n    {\n      id: 3,\n      date: \"2024-08-25\",\n      time: \"11:15 AM\",\n      title: \"New Tenant Move-In\",\n      description: \"Sarah Johnson has moved into Unit 205.\",\n      type: \"lease\"\n    },\n    {\n      id: 4,\n      date: \"2024-08-20\",\n      time: \"10:00 AM\",\n      title: \"Lease Renewal Notice\",\n      description: \"Lease for Unit 102 is up for renewal in 30 days.\",\n      type: \"notification\"\n    },\n    {\n      id: 5,\n      date: \"2024-08-15\",\n      time: \"03:45 PM\",\n      title: \"Property Inspection Scheduled\",\n      description: \"Annual property inspection scheduled for September 10th.\",\n      type: \"notification\"\n    }\n  ];\n\n  const getEventIcon = (type: string) => {\n    switch (type) {\n      case 'payment':\n        return <i className=\"mdi mdi-cash-multiple text-success\"></i>;\n      case 'maintenance':\n        return <i className=\"mdi mdi-tools text-warning\"></i>;\n      case 'lease':\n        return <i className=\"mdi mdi-file-document text-info\"></i>;\n      case 'notification':\n        return <i className=\"mdi mdi-bell text-primary\"></i>;\n      default:\n        return <i className=\"mdi mdi-information\"></i>;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Dashboard\", path: \"/dashboard\" },\n          { label: \"Activity Timeline\", path: \"/dashboard/timeline\", active: true },\n        ]}\n        title={\"Property Activity Timeline\"}\n      />\n      <Row className=\"justify-content-center\">\n        <Col md={10}>\n          <div className=\"timeline\">\n            <article className=\"timeline-item\">\n              <h2 className=\"m-0 d-none\">&nbsp;</h2>\n              <div className=\"time-show mt-0\">\n                <Link to=\"#\" className=\"btn btn-primary width-lg\">\n                  Today\n                </Link>\n              </div>\n            </article>\n\n            {events.map((event, index) => (\n              <article key={event.id} className={`timeline-item ${index % 2 === 0 ? 'timeline-item-left' : ''}`}>\n                <div className=\"timeline-desk\">\n                  <div className=\"timeline-box\">\n                    <span className={index % 2 === 0 ? \"arrow-alt\" : \"arrow\"}></span>\n                    <span className=\"timeline-icon\">{getEventIcon(event.type)}</span>\n                    <h4 className=\"mt-0 font-16\">{event.title}</h4>\n                    <p className=\"text-muted\">\n                      <small>{event.time}</small>\n                    </p>\n                    <p className=\"mb-0\">{event.description}</p>\n                    <Badge \n                      bg={\n                        event.type === 'payment' ? 'success' :\n                        event.type === 'maintenance' ? 'warning' :\n                        event.type === 'lease' ? 'info' : 'primary'\n                      }\n                      className=\"mt-2\"\n                    >\n                      {event.type.charAt(0).toUpperCase() + event.type.slice(1)}\n                    </Badge>\n                  </div>\n                </div>\n              </article>\n            ))}\n\n            <article className=\"timeline-item\">\n              <h2 className=\"m-0 d-none\">&nbsp;</h2>\n              <div className=\"time-show\">\n                <Link to=\"#\" className=\"btn btn-primary width-lg\">\n                  Earlier\n                </Link>\n              </div>\n            </article>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Timeline;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","Timeline","getEventIcon","type","React","PageTitle","breadCrumbItems","title","md","Link","to","id","date","time","description","event","Badge","bg","charAt","toUpperCase","slice","_ref","ref","bsPrefix","pill","text","as","Component","prefix","useBootstrapPrefix","classNames","displayName","defaultProps"],"sourceRoot":""}