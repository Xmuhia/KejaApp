{"version":3,"file":"static/js/2517.95d1cc6c.chunk.js","mappings":"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","sources":["components/TopbarSearch.tsx","components/MaximizeScreen.tsx","components/AppsDropdown/index.tsx","components/LanguageDropdown/index.tsx","components/NotificationDropdown.tsx","components/ProfileDropdown.tsx","components/CreateNew.tsx","components/MegaMenu.tsx","layouts/Topbar.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport Avatar2 from \"../assets/images/users/user-2.jpg\";\nimport Avatar5 from \"../assets/images/users/user-5.jpg\";\n\ninterface SearchResultItem {\n  id: number;\n  title: string;\n  redirectTo: string;\n  icon: string;\n}\n\ninterface TopbarSearchProps {\n  items: Array<SearchResultItem>;\n}\n\nconst TopbarSearch = (props: TopbarSearchProps) => {\n  const showSearchOptions = () => {\n    document.getElementById(\"search-dropdown\")!.classList.add(\"d-block\");\n  };\n\n  const hideSearchOptions = () => {\n    document.getElementById(\"search-dropdown\")!.classList.remove(\"d-block\");\n  };\n\n  return (\n    <>\n      <form>\n        <input\n          type=\"search\"\n          className=\"form-control rounded-pill\"\n          placeholder=\"Search...\"\n          id=\"top-search\"\n          onFocus={showSearchOptions}\n          onBlur={hideSearchOptions}\n        />\n        <span className=\"mdi mdi-magnify search-icon font-22\"></span>\n      </form>\n\n      <div\n        className=\"dropdown-menu dropdown-menu-animated dropdown-lg\"\n        id=\"search-dropdown\"\n      >\n        <div className=\"dropdown-header noti-title\">\n          <h5 className=\"text-overflow mb-2\">Found 22 results</h5>\n        </div>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-home me-1\"></i>\n          <span>Analytics Report</span>\n        </Link>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-aperture me-1\"></i>\n          <span>How can I help you?</span>\n        </Link>\n\n        <Link to=\"#\" className=\"dropdown-item notify-item\">\n          <i className=\"fe-settings me-1\"></i>\n          <span>User profile settings</span>\n        </Link>\n\n        <div className=\"dropdown-header noti-title\">\n          <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n        </div>\n\n        <div className=\"notification-list\">\n          <Link to=\"#\" className=\"dropdown-item notify-item\">\n            <div className=\"d-flex align-items-start\">\n              <img\n                className=\"d-flex me-2 rounded-circle\"\n                src={Avatar2}\n                alt=\"Generic placeholder\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"m-0 font-14\">Erwin E. Brown</h5>\n                <span className=\"font-12 mb-0\">UI Designer</span>\n              </div>\n            </div>\n          </Link>\n\n          <Link to=\"#\" className=\"dropdown-item notify-item\">\n            <div className=\"d-flex align-items-start\">\n              <img\n                className=\"d-flex me-2 rounded-circle\"\n                src={Avatar5}\n                alt=\"Generic placeholder\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"m-0 font-14\">Jacob Deo</h5>\n                <span className=\"font-12 mb-0\">Developer</span>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n\n      {/* <Select\n        {...props}\n        components={{ IndicatorsContainer, MenuList }}\n        placeholder={'Search...'}\n        options={formateOptions(options)}\n        formatOptionLabel={handleFormatOptionLabel}\n        isOptionDisabled={(option) => option.type === 'title'}\n        maxMenuHeight={350}\n        handleClick={onClick}\n        isSearchable\n        isClearable\n        name=\"search-app\"\n        className=\"app-search dropdown\"\n        classNamePrefix=\"react-select\"\n      /> */}\n    </>\n  );\n};\n\nexport default TopbarSearch;\n","import React, { useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst MaximizeScreen = () => {\n  useEffect(() => {\n    let elem = document.querySelector(\".maximize-icon\");\n\n    if (elem) elem.setAttribute(\"data-toggle\", \"fullscreen\");\n\n    return () => {\n      if (elem) elem.removeAttribute(\"data-toggle\");\n    };\n  }, []);\n\n  /*\n   * toggle full screen mode\n   */\n  const toggleFullscreen = () => {\n    let document: any = window.document;\n    document.body.classList.add(\"fullscreen-enable\");\n\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen();\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n    }\n\n    // handle fullscreen exit\n    const exitHandler = () => {\n      if (\n        !document.webkitIsFullScreen &&\n        !document.mozFullScreen &&\n        !document.msFullscreenElement\n      )\n        document.body.classList.remove(\"fullscreen-enable\");\n    };\n    document.addEventListener(\"fullscreenchange\", exitHandler);\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\n  };\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle\n        id=\"dropdown-languages\"\n        as=\"a\"\n        onClick={toggleFullscreen}\n        className=\"nav-link waves-effect waves-light maximize-icon\"\n      >\n        <i className=\"fe-maximize noti-icon font-22\"></i>\n      </Dropdown.Toggle>\n    </Dropdown>\n  );\n};\n\nexport default MaximizeScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// utils\nimport { splitArray } from \"../../utils/\";\n\n// apps icon\nimport slackIcon from \"./icons/slack.png\";\nimport bitbucketIcon from \"./icons/bitbucket.png\";\nimport dribbbleIcon from \"./icons/dribbble.png\";\nimport dropboxIcon from \"./icons/dropbox.png\";\nimport githubIcon from \"./icons/github.png\";\nimport gSuiteIcon from \"./icons/g-suite.png\";\n\n// get the apps\nconst Apps = [\n  {\n    name: \"Slack\",\n    icon: slackIcon,\n    redirectTo: \"#\",\n  },\n  {\n    name: \"GitHub\",\n    icon: githubIcon,\n    redirectTo: \"#\",\n  },\n  {\n    name: \"Dribbble\",\n    icon: dribbbleIcon,\n    redirectTo: \"#\",\n  },\n  {\n    name: \"Bitbucket\",\n    icon: bitbucketIcon,\n    redirectTo: \"#\",\n  },\n  {\n    name: \"Dropbox\",\n    icon: dropboxIcon,\n    redirectTo: \"#\",\n  },\n  {\n    name: \"G Suite\",\n    icon: gSuiteIcon,\n    redirectTo: \"#\",\n  },\n];\n\nconst AppsDropdown = () => {\n  const apps = Apps || [];\n  const chunk_size = 3;\n  const appsChunks = splitArray(apps, chunk_size);\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle apps-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-apps\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light\", {\n          show: dropdownOpen,\n        })}\n      >\n        <i className=\"fe-grid noti-icon font-22\"></i>\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"dropdown-menu-end dropdown-menu-animated dropdown-lg p-0\">\n        <div className=\"p-2\">\n          {(appsChunks || []).map((chunk, idx) => (\n            <div className=\"row g-0\" key={idx}>\n              {(chunk || []).map((item, i) => (\n                <div className=\"col\" key={i}>\n                  <Link className=\"dropdown-icon-item\" to={item.redirectTo}>\n                    <img src={item.icon} alt=\"\" />\n                    <span>{item.name}</span>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AppsDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport enFlag from \"./flags/us.jpg\";\nimport germanyFlag from \"./flags/germany.jpg\";\nimport italyFlag from \"./flags/italy.jpg\";\nimport spainFlag from \"./flags/spain.jpg\";\nimport russiaFlag from \"./flags/russia.jpg\";\n\n// get the languages\nconst Languages = [\n  {\n    name: \"English\",\n    flag: enFlag,\n  },\n  {\n    name: \"German\",\n    flag: germanyFlag,\n  },\n  {\n    name: \"Italian\",\n    flag: italyFlag,\n  },\n  {\n    name: \"Spanish\",\n    flag: spainFlag,\n  },\n  {\n    name: \"Russian\",\n    flag: russiaFlag,\n  },\n];\n\nconst LanguageDropdown = () => {\n  const enLang = Languages[0] || {};\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle language-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-languages\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light\", {\n          show: dropdownOpen,\n        })}\n      >\n        <img src={enLang.flag} alt={enLang.name} height=\"16\" />\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end\">\n        <div onClick={toggleDropdown}>\n          {(Languages || []).map((lang, i) => {\n            return (\n              <Link\n                to=\"#\"\n                className=\"dropdown-item notify-item\"\n                key={i + \"-lang\"}\n              >\n                <img\n                  src={lang.flag}\n                  alt={lang.name}\n                  className=\"me-1\"\n                  height=\"12\"\n                />{\" \"}\n                <span className=\"align-middle\">{lang.name}</span>\n              </Link>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default LanguageDropdown;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport classNames from \"classnames\";\n\n//interface\nimport { NotificationItem } from \"../layouts/Topbar\";\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n  maxHeight: \"300px\",\n  display: \"none\",\n};\n\nconst notificationShowContainerStyle = {\n  maxHeight: \"300px\",\n};\n\ninterface NotificationDropdownProps {\n  notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n  maxHeight?: string;\n  display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n  const [notificationContentStyle, setNotificationContentStyles] = useState<NotificationContainerStyle>(notificationContainerStyle);\n  let notifications = props.notifications\n\n  /*\n   * toggle notification-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(\n      notificationContentStyle === notificationContainerStyle\n        ? notificationShowContainerStyle\n        : notificationContainerStyle\n    );\n  };\n\n  const handleClearNotification = (index: number) => {\n    notifications.splice(index, 1);\n  }\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-notification\"\n        role=\"button\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light arrow-none notification-list\", { show: dropdownOpen, })}\n      >\n        <i className=\"fe-bell noti-icon font-22\"></i>\n        <span className=\"badge bg-danger rounded-circle noti-icon-badge\">\n          9\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end dropdown-menu-animated dropdown-lg py-0\">\n        <div onClick={toggleDropdown}>\n          <div className=\"p-2 border-top-0 border-start-0 border-end-0 border-dashed border\">\n            <div className=\"row align-items-center\">\n              <div className=\"col\">\n                <h6 className=\"m-0 font-16 fw-semibold\">Notification</h6>\n              </div>\n              <div className=\"col-auto\">\n                <Link to=\"#\" className=\"text-dark text-decoration-underline\">\n                  <small>Clear All</small>\n                </Link>\n              </div>\n            </div>\n          </div>\n          <SimpleBar className=\"px-1\" style={notificationContentStyle}>\n            <h5 className=\"text-muted font-13 fw-normal mt-2\">Today</h5>\n            {(notifications || []).map((item, i) => {\n              return (\n                <Link to=\"#\" className=\"dropdown-item p-0 notify-item card unread-noti shadow-none mb-1\" key={i + \"-noti\"}                >\n                  {item.avatar ? (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\"></i>\n                      </span>\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"notify-icon\">\n                            <img\n                              src={item.avatar}\n                              alt=\"\"\n                              className=\"img-fluid rounded-circle\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1 text-truncate ms-2\">\n                          <h5 className=\"noti-item-title fw-semibold font-14\">\n                            {item.text}\n                            <small className=\"fw-normal text-muted ms-1\">\n                              {item.text}\n                            </small>\n                          </h5>\n                          <small className=\"noti-item-subtitle text-muted\">\n                            {item.subText}\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\" />\n                      </span>\n                      <div className={`notify-icon bg-${item.bgColor}`}>\n                        <i className={item.icon}></i>\n                      </div>\n                      <p className=\"notify-details\">\n                        {item.text}\n                        <small className=\"noti-item-subtitle text-muted\">\n                          {item.subText}\n                        </small>\n                      </p>\n                    </div>\n                  )}\n                </Link>\n              );\n            })}\n          </SimpleBar>\n\n          <Link\n            to=\"#\"\n            className=\"dropdown-item text-center text-primary notify-item notify-all\"\n          >\n            View All <i className=\"fe-arrow-right\"></i>\n          </Link>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NotificationDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface ProfileMenuItem {\n  label: string;\n  icon: string;\n  redirectTo: string;\n}\n\ninterface ProfileDropdownProps {\n  menuItems: Array<ProfileMenuItem>;\n  profilePic?: string;\n  username: string;\n  userTitle?: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n  const profilePic = props[\"profilePic\"] || null;\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle profile-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-profile\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link nav-user me-0 waves-effect waves-light\",\n          { show: dropdownOpen }\n        )}\n      >\n        <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />\n        <span className=\"pro-user-name ms-1\">\n          {props[\"username\"]} <i className=\"mdi mdi-chevron-down\"></i>\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end profile-dropdown\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-header noti-title\">\n            <h6 className=\"text-overflow m-0\">Welcome !</h6>\n          </div>\n          {(props.menuItems || []).map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i === props[\"menuItems\"].length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={i + \"-profile-menu\"}\n                >\n                  <i className={`${item.icon} me-1`}></i>\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default ProfileDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface CreateNewProps {\n  otherOptions: {\n    id: number;\n    label: string;\n    icon: string;\n  }[];\n}\n\nconst CreateNew = ({ otherOptions }: CreateNewProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <>\n      <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n        <Dropdown.Toggle\n          id=\"dropdown-notification\"\n          as=\"a\"\n          onClick={toggleDropdown}\n          className={classNames(\"nav-link waves-effect waves-light\", {\n            show: dropdownOpen,\n          })}\n        >\n          Create New <i className=\"mdi mdi-chevron-down\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"dropdown-menu\">\n          <div onClick={toggleDropdown}>\n            {(otherOptions || []).map((item, index) => {\n              return (\n                <React.Fragment key={index}>\n                  {index === otherOptions.length - 1 && (\n                    <div className=\"dropdown-divider\"></div>\n                  )}\n                  <Link key={index} to=\"#\" className=\"dropdown-item\">\n                    <i className={classNames(item.icon, \"me-1\")}></i>\n                    <span>{item.label}</span>\n                  </Link>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default CreateNew;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface MegaMenuProps {\n  subMenus: {\n    id: number;\n    title: string;\n    menuItems: Array<string>;\n  }[];\n}\n\nconst MegaMenu = ({ subMenus }: MegaMenuProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle megamenu-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown\n      show={dropdownOpen}\n      onToggle={toggleDropdown}\n      className=\"position-static\"\n    >\n      <Dropdown.Toggle\n        id=\"dropdown-megamenu\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light\", {\n          show: dropdownOpen,\n        })}\n      >\n        Mega Menu <i className=\"mdi mdi-chevron-down\"></i>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-megamenu\">\n        <div onClick={toggleDropdown}>\n          <Row>\n            <Col sm={8}>\n              <Row>\n                {(subMenus || []).map((submenu, index) => {\n                  return (\n                    <Col key={index} md={4}>\n                      <h5 className=\"text-dark mt-0\">{submenu.title}</h5>\n                      <ul className=\"list-unstyled megamenu-list\">\n                        {(submenu.menuItems || []).map((item, index) => {\n                          return (\n                            <li key={index}>\n                              <Link to=\"#\">{item}</Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </Col>\n            <Col sm={4}>\n              <div className=\"text-center mt-3\">\n                <h3 className=\"text-dark\">Special Discount Sale!</h3>\n                <h4>Save up to 70% off.</h4>\n                <button className=\"btn btn-primary rounded-pill mt-3\">\n                  Download Now\n                </button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default MegaMenu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import classNames from 'classnames';\n\n// actions\nimport { showRightSidebar, changeSidebarType } from \"../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../redux/store\";\n\n//constants\nimport { LayoutTypes, SideBarTypes } from \"../constants/layout\";\n\n// components\nimport TopbarSearch from \"../components/TopbarSearch\";\nimport MaximizeScreen from \"../components/MaximizeScreen\";\nimport AppsDropdown from \"../components/AppsDropdown/\";\n// import SearchDropdown from '../components/SearchDropdown';\nimport LanguageDropdown from \"../components/LanguageDropdown\";\nimport NotificationDropdown from \"../components/NotificationDropdown\";\nimport ProfileDropdown from \"../components/ProfileDropdown\";\nimport CreateNew from \"../components/CreateNew\";\nimport MegaMenu from \"../components/MegaMenu\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\nimport avatar4 from \"../assets/images/users/user-4.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoDark2 from \"../assets/images/logo-dark-2.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\nimport logoLight2 from \"../assets/images/logo-light-2.png\";\nimport { useViewport } from \"../hooks/useViewPort\";\n\nexport interface NotificationItem {\n  id: number;\n  text: string;\n  subText: string;\n  icon?: string;\n  avatar?: string;\n  bgColor?: string;\n}\n\n// get the notifications\nconst Notifications: NotificationItem[] = [\n  {\n    id: 1,\n    text: \"Cristina Pride\",\n    subText: \"Hi, How are you? What about our next meeting\",\n    avatar: profilePic,\n  },\n  {\n    id: 2,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"primary\",\n  },\n  {\n    id: 3,\n    text: \"Karen Robinson\",\n    subText: \"Wow ! this admin looks good and awesome design\",\n    avatar: avatar4,\n  },\n  {\n    id: 4,\n    text: \"New user registered.\",\n    subText: \"5 hours ago\",\n    icon: \"mdi mdi-account-plus\",\n    bgColor: \"warning\",\n  },\n  {\n    id: 5,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"info\",\n  },\n  {\n    id: 6,\n    text: \"Carlos Crouch liked Admin\",\n    subText: \"13 days ago\",\n    icon: \"mdi mdi-heart\",\n    bgColor: \"secondary\",\n  },\n];\n\n// get the profilemenu\nconst ProfileMenus = [\n  {\n    label: \"My Account\",\n    icon: \"fe-user\",\n    redirectTo: \"#\",\n  },\n  {\n    label: \"Settings\",\n    icon: \"fe-settings\",\n    redirectTo: \"#\",\n  },\n  {\n    label: \"Lock Screen\",\n    icon: \"fe-lock\",\n    redirectTo: \"/auth/lock-screen\",\n  },\n  {\n    label: \"Logout\",\n    icon: \"fe-log-out\",\n    redirectTo: \"/auth/logout\",\n  },\n];\n\n// dummy search results\nconst SearchResults = [\n  {\n    id: 1,\n    title: \"Analytics Report\",\n    icon: \"uil-notes\",\n    redirectTo: \"#\",\n  },\n  {\n    id: 2,\n    title: \"How can I help you?\",\n    icon: \"uil-life-ring\",\n    redirectTo: \"#\",\n  },\n  {\n    id: 3,\n    icon: \"uil-cog\",\n    title: \"User profile settings\",\n    redirectTo: \"#\",\n  },\n];\n\nconst otherOptions = [\n  {\n    id: 1,\n    label: \"New Projects\",\n    icon: \"fe-briefcase\",\n  },\n  {\n    id: 2,\n    label: \"Create Users\",\n    icon: \"fe-user\",\n  },\n  {\n    id: 3,\n    label: \"Revenue Report\",\n    icon: \"fe-bar-chart-line-\",\n  },\n  {\n    id: 4,\n    label: \"Settings\",\n    icon: \"fe-settings\",\n  },\n  {\n    id: 4,\n    label: \"Help & Support\",\n    icon: \"fe-headphones\",\n  },\n];\n\n// get mega-menu options\nconst MegaMenuOptions = [\n  {\n    id: 1,\n    title: \"UI Components\",\n    menuItems: [\n      \"Widgets\",\n      \"Nestable List\",\n      \"Range Sliders\",\n      \"Masonry Items\",\n      \"Sweet Alerts\",\n      \"Treeview Page\",\n      \"Tour Page\",\n    ],\n  },\n  {\n    id: 2,\n    title: \"Applications\",\n    menuItems: [\n      \"eCommerce Pages\",\n      \"CRM Pages\",\n      \"Email\",\n      \"Calendar\",\n      \"Team Contacts\",\n      \"Task Board\",\n      \"Email Templates\",\n    ],\n  },\n  {\n    id: 3,\n    title: \"Extra Pages\",\n    menuItems: [\n      \"Left Sidebar with User\",\n      \"Menu Collapsed\",\n      \"Small Left Sidebar\",\n      \"New Header Style\",\n      \"Search Result\",\n      \"Gallery Pages\",\n      \"Maintenance & Coming Soon\",\n    ],\n  },\n];\n\ninterface TopbarProps {\n  hideLogo?: boolean;\n  navCssClasses?: string;\n  openLeftMenuCallBack?: () => void;\n  topbarDark?: boolean;\n}\n\n\nconst Topbar = ({\n  hideLogo,\n  navCssClasses,\n  openLeftMenuCallBack,\n  topbarDark,\n}: TopbarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { width } = useViewport();\n\n  const navbarCssClasses: string = navCssClasses || \"\";\n  const containerCssClasses: string = !hideLogo ? \"container-fluid\" : \"\";\n\n  const { layoutType, leftSideBarType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  const {user} = useSelector((state: RootState)=> state.Auth)\n  /**\n   * Toggle the leftmenu when having mobile screen\n   */\n  const handleLeftMenuCallBack = () => {\n    if (width < 1140) {\n      if (leftSideBarType === 'full') {\n        showLeftSideBarBackdrop();\n        document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n      }\n      else {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      }\n    } else if (leftSideBarType === \"condensed\") {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    } else if (leftSideBarType === 'full') {\n      showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    } else if (leftSideBarType === 'fullscreen') {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n      // showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    }\n    else {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n    }\n  };\n\n  // create backdrop for leftsidebar\n  function showLeftSideBarBackdrop() {\n    const backdrop = document.createElement(\"div\");\n    backdrop.id = \"custom-backdrop\";\n    backdrop.className = \"offcanvas-backdrop fade show\";\n    // backdrop.style.zIndex = '999'\n    document.body.appendChild(backdrop);\n\n    if (\n      document.getElementsByTagName(\"html\")[0]?.getAttribute(\"dir\") !== \"rtl\"\n    ) {\n      document.body.style.overflow = \"hidden\";\n      if (width > 1140) {\n        document.body.style.paddingRight = \"15px\";\n      }\n    }\n\n    backdrop.addEventListener(\"click\", function (e) {\n      document.getElementsByTagName(\"html\")[0].classList.remove(\"sidebar-enable\");\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      hideLeftSideBarBackdrop();\n    });\n  }\n\n  function hideLeftSideBarBackdrop() {\n    var backdrop = document.getElementById(\"custom-backdrop\");\n    if (backdrop) {\n      document.body.removeChild(backdrop);\n      document.body.style.overflow = \"visible\";\n    }\n  }\n\n  /**\n   * Toggles the right sidebar\n   */\n  const handleRightSideBar = () => {\n    dispatch(showRightSidebar());\n  };\n\n  /**\n   * Toggles the left sidebar width\n   */\n  // const toggleLeftSidebarWidth = () => {\n  //   if (leftSideBarType === 'default' || leftSideBarType === 'compact')\n  //     dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n  //   if (leftSideBarType === 'condensed') dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n  // };\n\n  //data call\n\n\n  return (\n    <React.Fragment>\n      <div className={`navbar-custom ${navbarCssClasses}`}>\n        <div className={`topbar ${containerCssClasses}`}>\n          <div className=\"topbar-menu d-flex align-items-center gap-1\">\n            {!hideLogo && (\n              <div className=\"logo-box\">\n                <Link to=\"/\" className=\"logo logo-dark text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoDark2\n                          : logoDark\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n                <Link to=\"/\" className=\"logo logo-light text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoLight2\n                          : logoLight\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n              </div>\n            )}\n\n            <button\n              className=\"button-toggle-menu\"\n              onClick={handleLeftMenuCallBack}\n            >\n              <i className=\"mdi mdi-menu\" />\n            </button>\n\n            <div className=\"dropdown d-none d-xl-block\">\n              <CreateNew otherOptions={otherOptions} />\n            </div>\n\n            <div className=\"dropdown dropdown-mega d-none d-xl-block\">\n              <MegaMenu subMenus={MegaMenuOptions} />\n            </div>\n          </div>\n\n          <ul className=\"topbar-menu d-flex align-items-center\">\n            <li className=\"app-search dropdown d-none d-lg-block\">\n              <TopbarSearch items={SearchResults} />\n            </li>\n            {/* <li className=\"dropdown d-inline-block d-lg-none\">\n              <SearchDropdown />\n            </li> */}\n            <li className=\"dropdown d-none d-lg-inline-block\">\n              <MaximizeScreen />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <AppsDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <LanguageDropdown />\n            </li>\n            <li className=\"dropdown notification-list\">\n              <NotificationDropdown notifications={Notifications} />\n            </li>\n            <li className=\"dropdown\">\n              <ProfileDropdown\n                profilePic={profilePic}\n                menuItems={ProfileMenus}\n                username={user?.name}\n                userTitle={user?.role}\n              />\n            </li>\n            <li>\n              <button\n                className=\"nav-link dropdown-toggle right-bar-toggle waves-effect waves-light btn btn-link shadow-none\"\n                onClick={handleRightSideBar}\n              >\n                <i className=\"fe-settings noti-icon font-22\"></i>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Topbar;\n"],"names":["props","_jsxs","_Fragment","children","_jsx","type","className","placeholder","id","onFocus","showSearchOptions","document","getElementById","classList","add","onBlur","hideSearchOptions","remove","Link","to","src","Avatar2","alt","height","Avatar5","MaximizeScreen","useEffect","elem","querySelector","setAttribute","removeAttribute","Dropdown","as","onClick","toggleFullscreen","window","body","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitHandler","webkitIsFullScreen","mozFullScreen","msFullscreenElement","addEventListener","Apps","name","icon","redirectTo","AppsDropdown","apps","appsChunks","splitArray","dropdownOpen","setDropdownOpen","useState","toggleDropdown","show","onToggle","classNames","map","chunk","idx","item","i","Languages","flag","LanguageDropdown","enLang","lang","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","notificationContentStyle","setNotificationContentStyles","notifications","handleClearNotification","index","splice","role","SimpleBar","style","avatar","text","subText","bgColor","profilePic","menuItems","React","length","label","_ref","otherOptions","subMenus","Row","Col","sm","submenu","md","title","Notifications","avatar4","ProfileMenus","SearchResults","MegaMenuOptions","hideLogo","navCssClasses","openLeftMenuCallBack","topbarDark","dispatch","useDispatch","width","useViewport","navbarCssClasses","containerCssClasses","layoutType","leftSideBarType","useSelector","state","Layout","user","Auth","showLeftSideBarBackdrop","_document$getElements","backdrop","createElement","appendChild","getElementsByTagName","getAttribute","overflow","paddingRight","e","changeSidebarType","SideBarTypes","removeChild","hideLeftSideBarBackdrop","logoSm","LayoutTypes","logoDark2","logoDark","logoLight2","logoLight","handleLeftMenuCallBack","CreateNew","MegaMenu","TopbarSearch","items","NotificationDropdown","ProfileDropdown","username","userTitle","handleRightSideBar","showRightSidebar"],"sourceRoot":""}