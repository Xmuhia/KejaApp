{"version":3,"file":"static/js/6952.595cff24.chunk.js","mappings":"yMAaA,MAAMA,GAAkBC,EAAAA,EAAAA,aACtB,CAACC,EAAOC,KAKJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,UAAWC,IAAW,eAAgBL,EAAMM,YAC5CC,QAASP,EAAMO,QACfC,MAAOR,EAAMQ,MACbC,SATsBC,KACxBC,QAAQC,IAAI,qBAAqB,EAS/BX,IAAKA,MAOPY,GAA2Bd,EAAAA,EAAAA,aAG/B,CAACC,EAAOC,KACRa,EAAAA,EAAAA,MAAA,OAAKV,UAAU,6BAA6BH,IAAKA,EAAIc,SAAA,EACnDb,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,UAAWC,IAAW,eAAgBL,EAAMM,YAC5CC,QAASP,EAAMO,QACfC,MAAOR,EAAMQ,MACbQ,UAAQ,KAEVd,EAAAA,EAAAA,KAAA,QAAME,UAAU,kDAAiDW,UAC/Db,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kCA8DnB,EAxCyBJ,IAAiC,IAADiB,EAAAC,EAGvD,MAAMC,GAC2B,KAA9BnB,EAAMoB,YAAa,IAClBlB,EAAAA,EAAAA,KAACJ,EAAe,CACdQ,WAAYN,EAAMM,WAClBE,MAAkB,QAAbS,EAAEjB,EAAMQ,aAAK,IAAAS,OAAA,EAAXA,EAAaI,kBAGtBnB,EAAAA,EAAAA,KAACW,EAAwB,CACvBP,WAAYN,EAAMM,WAClBE,MAAkB,QAAbU,EAAElB,EAAMQ,aAAK,IAAAU,OAAA,EAAXA,EAAaG,iBAI1B,OACEnB,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAP,UAEEb,EAAAA,EAAAA,KAACqB,IAAU,CACTC,YAAaL,EACbM,cAAezB,EAAM0B,GACrBC,SAAU3B,EAAMQ,MAChBA,MAAOR,EAAMQ,MAAMa,eACnBZ,SAAWmB,GAAS5B,EAAMS,SAASmB,GACnCC,eAAgB7B,EAAM6B,eACtBC,WAAY9B,EAAM8B,YAAc,UAChCC,YAAa/B,EAAM+B,YACnBC,WAAYhC,EAAMgC,YAAc,aAChCC,QAASjC,EAAMiC,QACfC,QAASlC,EAAMkC,QACfC,YAAanC,EAAMmC,YACnBC,mBAAoBpC,EAAMoC,mBAC1BC,OAAQrC,EAAMqC,OACdC,aAAa,SAEd,C,uGCtFP,MA6BA,EA7BmBtC,IAEfE,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAAxB,UACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAAzB,UACFD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,iBAAgBW,SAAA,EAC7Bb,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mBAAkBW,UAC/BD,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAACrC,UAAU,MAAKW,SAAA,EACzBb,EAAAA,EAAAA,KAACuC,EAAAA,EAAAA,KAAe,CAACC,KAAK,IAAG3B,SAAC,eAExBf,EAAuB,iBAAK,IAAI2C,KAAI,CAACC,EAAMC,IACpCD,EAAKE,QACV5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAAA,KAAe,CAACK,QAAM,EAAA/B,SACpB6B,EAAKG,OADqBF,IAI7B3C,EAAAA,EAAAA,KAACuC,EAAAA,EAAAA,KAAe,CAAaC,KAAME,EAAKI,KAAKjC,SAC1C6B,EAAKG,OADcF,WAO9B3C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYW,SAAEf,EAAa,c,gMC3BnD,MAAMiD,EAAcA,KAEhB/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAI,CAAAnC,UACHD,EAAAA,EAAAA,MAACoC,EAAAA,EAAAA,KAAS,CAAAnC,SAAA,EACRb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcW,UAC1Bb,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CACHC,IAAI,aACJC,GAAG,4CACHC,OAAO,SAAQvC,SAChB,oBAIHb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,+BAA8BW,SAAC,sBAC5Cb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAAoBW,SAAC,uCAClCb,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACLnD,UAAU,sCACVoD,gBAAgB,eAChBC,QAAS,CACP,CAAEjD,MAAO,YAAauC,MAAO,aAC7B,CAAEvC,MAAO,aAAcuC,MAAO,cAC9B,CAAEvC,MAAO,UAAWuC,MAAO,eAI/B7C,EAAAA,EAAAA,KAAA,KAAGE,UAAU,+BAA8BW,SAAC,wBAC5Cb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAAoBW,SAAC,kDAGlCb,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACLG,SAAS,EACTD,QAAS,CACP,CAAEjD,MAAO,YAAauC,MAAO,aAC7B,CAAEvC,MAAO,aAAcuC,MAAO,cAC9B,CAAEvC,MAAO,UAAWuC,MAAO,YAE7B3C,UAAU,sCACVoD,gBAAgB,sBAYpBG,EAAaA,KACjB,MAAOC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAwB,KACjEC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAwB,IAEhEL,EAA8B,CAClC,CAAEQ,GAAI,EAAGzD,MAAO,YAAauC,MAAO,aACpC,CAAEkB,GAAI,EAAGzD,MAAO,aAAcuC,MAAO,cACrC,CAAEkB,GAAI,EAAGzD,MAAO,UAAWuC,MAAO,YAWpC,OACE7C,EAAAA,EAAAA,KAACgD,EAAAA,EAAI,CAAAnC,UACHD,EAAAA,EAAAA,MAACoC,EAAAA,EAAAA,KAAS,CAAAnC,SAAA,EACRb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcW,UAC1Bb,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CACHC,IAAI,aACJC,GAAG,sDACHC,OAAO,SAAQvC,SAChB,iBAIHb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,+BAA8BW,SAAC,sBAC5Cb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAAoBW,SAAC,oCAClCb,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CACRD,GAAG,UACHE,SAAU,QACVC,UAAU,EACV3D,SA1ByBkB,IAC/BkC,EAAoBlC,EAAS,EA0BvB8B,QAASA,EACTY,YAAY,oBACZ1C,SAAUiC,KAGZ1D,EAAAA,EAAAA,KAAA,KAAGE,UAAU,+BAA8BW,SAAC,wBAC5Cb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,qBAAoBW,SAAC,+CAGlCb,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CACRD,GAAG,UACHE,SAAS,QACTC,UAAQ,EACR3D,SApC2BkB,IACjCqC,EAAmBrC,EAAS,EAoCtB8B,QAASA,EACTY,YAAY,oBACZ1C,SAAUoC,QAGT,EAILO,EAAcA,KAClB,MAAOC,EAAcC,IAAmBV,EAAAA,EAAAA,UAAe,IAAIW,MAKrDC,EAAgB9C,IAChBA,GACF4C,EAAgB5C,EAClB,EAEF,OACE1B,EAAAA,EAAAA,KAACgD,EAAAA,EAAI,CAAAnC,UACHD,EAAAA,EAAAA,MAACoC,EAAAA,EAAAA,KAAS,CAAAnC,SAAA,EACRb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcW,SAAC,wBAC7BD,EAAAA,EAAAA,MAAA,KAAGV,UAAU,qBAAoBW,SAAA,CAAC,6BACL,KAC3Bb,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACE,GAAG,+BAA8BtC,SAAC,2BAG1CD,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,gBAAmB,KAACb,EAAAA,EAAAA,KAAA,UAClDA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXZ,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,UAK1B1B,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,qCAErB,KACTb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXe,YAAa,EACb3B,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,aAO5Bd,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,uBAA0B,KAACb,EAAAA,EAAAA,KAAA,UACzDA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXY,WAAW,aACXxB,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,UAK1B1B,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,wBAA2B,KAACb,EAAAA,EAAAA,KAAA,UAC1DA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXa,QAAS,IAAIwC,KACbvC,QAAS,IAAIuC,MAAK,IAAIA,MAAOI,SAAQ,IAAIJ,MAAOK,UAAY,IAC5DtE,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,aAO5Bd,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,gBAAmB,KAACb,EAAAA,EAAAA,KAAA,UAClDA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXS,gBAAc,EACdC,WAAW,QACXJ,GAAI,GACJM,WAAW,uBACXD,YAAY,OACZvB,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,UAK1B1B,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,cAAiB,KAACb,EAAAA,EAAAA,KAAA,UAChDA,EAAAA,EAAAA,KAAC0E,EAAAA,EAAe,CACdxD,WAAW,EACXS,gBAAc,EACdO,oBAAkB,EAClBV,GAAI,GACJM,WAAW,UACXD,YAAY,OACZvB,MAAO+D,EACP9D,SAAWmB,IACT8C,EAAa9C,EAAK,gBAOzB,EAILmD,EAAaA,KAEf7E,EAAAA,EAAAA,KAACgD,EAAAA,EAAI,CAAAnC,UACHD,EAAAA,EAAAA,MAACoC,EAAAA,EAAAA,KAAS,CAAAnC,SAAA,EACRb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcW,SAAC,iBAC7BD,EAAAA,EAAAA,MAAA,KAAGV,UAAU,qBAAoBW,SAAA,CAAC,iBACjB,KACfb,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACE,GAAG,kEAAiEtC,SAAC,wBAK7ED,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,gCAAoC,KAClEb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8E,IAAW,CACVC,KAAM,CACJ,IACA,QACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,MAEFZ,YAAY,iBACZjE,UAAU,uBAIhBF,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,oBAAuB,KAACb,EAAAA,EAAAA,KAAA,UACtDA,EAAAA,EAAAA,KAAC8E,IAAW,CACVC,KAAM,CACJ,IACA,QACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,MAEFZ,YAAY,iBACZjE,UAAU,0BAMlBU,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,SAAY,KAACb,EAAAA,EAAAA,KAAA,UAC3CA,EAAAA,EAAAA,KAAC8E,IAAW,CACVC,KAAM,CACJ,KACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,KACA,MAEFZ,YAAY,aACZjE,UAAU,uBAIhBF,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTD,EAAAA,EAAAA,MAAA,OAAKV,UAAU,OAAMW,SAAA,EACnBb,EAAAA,EAAAA,KAAA,SAAOE,UAAU,aAAYW,SAAC,SAAY,KAACb,EAAAA,EAAAA,KAAA,UAC3CA,EAAAA,EAAAA,KAAC8E,IAAW,CACVC,KAAM,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,MAC/CZ,YAAY,WACZjE,UAAU,8BA6C1B,EAnCqB8E,KAEjBpE,EAAAA,EAAAA,MAACqE,EAAAA,SAAc,CAAApE,SAAA,EACbb,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEtC,MAAO,QAASC,KAAM,mBACxB,CAAED,MAAO,gBAAiBC,KAAM,kBAAmBF,QAAQ,IAE7DwC,MAAO,mBAGTxE,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAAxB,SAAA,EACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTb,EAAAA,EAAAA,KAAC+C,EAAW,OAEd/C,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACmC,GAAI,EAAE5D,UACTb,EAAAA,EAAAA,KAACyD,EAAU,UAIfzD,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAAxB,UACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAAzB,UACFb,EAAAA,EAAAA,KAACoE,EAAW,SAIhBpE,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAAxB,UACFb,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAAzB,UACFb,EAAAA,EAAAA,KAAC6E,EAAU,U,+BC9WrB,IAAIQ,EAAuBC,EAAQ,OAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAK9F,EAAO+F,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOT,CACT,CAHAA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAeqB,UAAYrB,EAEpBA,CACT,C,kBC/CEb,EAAOC,QAAUL,EAAQ,MAARA,E,yBCNnBI,EAAOC,QAFoB,8C,gDCR3B,MAAMkC,E,SAAuB5C,cAAoB,MACjD4C,EAAQC,YAAc,oBACtB,S","sources":["components/Datepicker.tsx","components/PageTitle.tsx","pages/forms/Advanced.tsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport MaskedInput from \"react-text-mask\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport HyperDatepicker from \"../../components/Datepicker\";\n\nconst ReactSelect = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"https://github.com/JedWatson/react-select\"\n            target=\"_blank\"\n          >\n            React select\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">React-Select based Select element</p>\n        <Select\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n        ></Select>\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          React-Select based Select (Multiple) element\n        </p>\n        <Select\n          isMulti={true}\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n        ></Select>\n      </Card.Body>\n    </Card>\n  );\n};\n\ninterface OptionTypes {\n  id: number | string;\n  value: string;\n  label: string;\n}\nconst Typeaheads = () => {\n  const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n  const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n  const options: Array<OptionTypes> = [\n    { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n    { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n    { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  const onChangeSingleSelection = (selected: OptionTypes[]) => {\n    setSingleSelections(selected);\n  };\n\n  const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n    setMultiSelections(selected);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"http://ericgio.github.io/react-bootstrap-typeahead/\"\n            target=\"_blank\"\n          >\n            Typeahead\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">Typeahead based Select element</p>\n        <Typeahead\n          id=\"select2\"\n          labelKey={\"label\"}\n          multiple={false}\n          onChange={onChangeSingleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={singleSelections}\n        />\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          Typeahead based Select (Multiple) element\n        </p>\n        <Typeahead\n          id=\"select3\"\n          labelKey=\"label\"\n          multiple\n          onChange={onChangeMultipleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={multiSelections}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DatePickers = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n        <p className=\"text-muted font-14\">\n          A simple date picker using{\" \"}\n          <Link to=\"https://reactdatepicker.com/\">ReactJS Datepicker</Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Single Date</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">\n                Single Date with multiple months\n              </label>{\" \"}\n              <br />\n              <HyperDatepicker\n                hideAddon={true}\n                monthsShown={2}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Custom date format</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                dateFormat=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Specific date range</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                minDate={new Date()}\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Time</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                tI={60}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time only</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                showTimeSelectOnly\n                tI={60}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst InputMasks = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Input Masks</h4>\n        <p className=\"text-muted font-14\">\n          Input masks by{\" \"}\n          <Link to=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">\n            react-text-mask\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone Number with Area Code</label>{\" \"}\n              <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(__) ____-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">US Phone Number</label> <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(___) ___-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date</label> <br />\n              <MaskedInput\n                mask={[\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"__/__/____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time</label> <br />\n              <MaskedInput\n                mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n                placeholder=\"__:__:__\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst FormAdvanced = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/advanced\" },\n          { label: \"Form Advanced\", path: \"/forms/advanced\", active: true },\n        ]}\n        title={\"Form Advanced\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <ReactSelect />\n        </Col>\n        <Col lg={6}>\n          <Typeaheads />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <DatePickers />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <InputMasks />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormAdvanced;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","onDateValueChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","Breadcrumb","href","map","item","index","active","label","path","ReactSelect","Card","Link","rel","to","target","Select","classNamePrefix","options","isMulti","Typeaheads","singleSelections","setSingleSelections","useState","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","placeholder","DatePickers","selectedDate","setSelectedDate","Date","onDateChange","lg","HyperDatepicker","setDate","getDate","InputMasks","MaskedInput","mask","FormAdvanced","React","PageTitle","breadCrumbItems","title","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","context","displayName"],"sourceRoot":""}