{"version":3,"file":"static/js/2542.efa1d112.chunk.js","mappings":"mLAiBA,MA6BA,EA7BmBA,IAEfC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAACE,EAAAA,EAAU,CAACD,UAAU,MAAKH,SAAA,EACzBF,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAACC,KAAK,IAAGL,SAAC,eAExBH,EAAuB,iBAAK,IAAIS,KAAI,CAACC,EAAMC,IACpCD,EAAKE,QACVX,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAACK,QAAM,EAAAT,SACpBO,EAAKG,OADqBF,IAI7BV,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAe,CAAaC,KAAME,EAAKI,KAAKX,SAC1CO,EAAKG,OADcF,WAO9BV,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,SAAEH,EAAa,c,kNCtBnD,MAAMe,EAA6B,CACjC,CACEC,GAAI,EACJC,KAAM,oBACNC,QAAS,uBACTC,OAAQ,WACRC,YAAa,sEACbC,MAAO,GACPC,WAAY,IACZC,SAAU,CACR,CAAEC,MAAOC,EAAkBR,KAAM,YACjC,CAAEO,MAAOC,EAAkBR,KAAM,eAEnCS,cAAe,IAEjB,CACEV,GAAI,EACJC,KAAM,qBACNC,QAAS,wBACTC,OAAQ,qBACRC,YAAa,uDACbC,MAAO,GACPC,WAAY,KACZC,SAAU,CACR,CAAEC,MAAOC,EAAkBR,KAAM,kBAEnCS,cAAe,IAEjB,CACEV,GAAI,EACJC,KAAM,6BACNC,QAAS,6BACTC,OAAQ,SACRC,YAAa,4DACbC,MAAO,IACPC,WAAY,IACZC,SAAU,CACR,CAAEC,MAAOC,EAAkBR,KAAM,cACjC,CAAEO,MAAOC,EAAkBR,KAAM,gBAEnCS,cAAe,I,eC7CnB,MAAMC,EAAkB3B,IACtB,MAAM4B,EAAW5B,EAAM4B,UAAY,CAAC,EAEpC,OACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAACvB,UAAU,eAAcH,UAC5BE,EAAAA,EAAAA,MAACwB,EAAAA,EAAAA,KAAS,CAAA1B,SAAA,EACRE,EAAAA,EAAAA,MAACyB,EAAAA,EAAQ,CAACxB,UAAU,eAAeyB,MAAM,MAAK5B,SAAA,EAC5CF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAAA,OAAe,CAACE,GAAG,IAAI1B,UAAU,2CAA0CH,UAC1EF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,iDAGfD,EAAAA,EAAAA,MAACyB,EAAAA,EAAAA,KAAa,CAAA3B,SAAA,EACZE,EAAAA,EAAAA,MAACyB,EAAAA,EAAAA,KAAa,CAAA3B,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAA0B,WACtDD,EAAAA,EAAAA,MAACyB,EAAAA,EAAAA,KAAa,CAAA3B,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAA0B,aACtDD,EAAAA,EAAAA,MAACyB,EAAAA,EAAAA,KAAa,CAAA3B,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,+BAAiC,yBAGjEL,EAAAA,EAAAA,KAAA,MAAIK,UAAU,OAAMH,UAClBF,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACC,GAAK,oBAAmBN,EAASZ,KAAMV,UAAU,YAAWH,SAC/DyB,EAASX,UAGdZ,EAAAA,EAAAA,MAAA,KAAGC,UAAU,4BAA2BH,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,uBAAyB,KAACL,EAAAA,EAAAA,KAAA,SAAAE,SAAQyB,EAASV,cAEjGjB,EAAAA,EAAAA,KAAA,OAAKK,UAAW6B,IAAW,QAAS,CAClC,+BAAoD,aAApBP,EAAST,OACzC,+BAAoD,uBAApBS,EAAST,OACzC,6BAAkD,WAApBS,EAAST,QACtC,QAAQhB,SACRyB,EAAST,UAGZlB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oCAAmCH,SAAEyB,EAASR,eAC3Df,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMH,SAAA,EACjBE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uCAAsCH,SAAA,EACpDF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,0CACbL,EAAAA,EAAAA,KAAA,KAAAE,SAAIyB,EAASP,QAAU,aAEzBhB,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kCAAiCH,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,kCACbD,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,IAAEyB,EAASN,cAAe,iBAGjCrB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oBAAmBH,UAC9ByB,EAASL,UAAY,IAAId,KAAI,CAAC2B,EAASzB,KAErCV,EAAAA,EAAAA,KAACoC,EAAAA,EAAc,CAEbC,UAAU,SACVC,SAAStC,EAAAA,EAAAA,KAACuC,EAAAA,EAAO,CAACxB,GAAIoB,EAAQnB,KAAKd,SAAEiC,EAAQnB,OAAgBd,UAE7DF,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACC,GAAG,IAAI5B,UAAU,oBAAmBH,UACxCF,EAAAA,EAAAA,KAAA,OAAKwC,IAAKL,EAAQZ,MAAOlB,UAAU,2BAA2BoC,IAAI,QAL/D/B,QAWbN,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBH,SAAA,CAAC,mBAE9BE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWH,SAAA,CAAEyB,EAASF,cAAc,WAEtDzB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAW,CAACC,IAAKhB,EAASF,cAAepB,UAAU,OAAOuC,MAAO,CAAEC,OAAQ,aAEzE,EA6CX,EAzCmBC,KAEf1C,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAA7C,SAAA,EACEF,EAAAA,EAAAA,KAACgD,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAErC,MAAO,aAAcC,KAAM,oBAC7B,CAAED,MAAO,kBAAmBC,KAAM,mBAAoBF,QAAQ,IAEhEuC,MAAO,qBAGT9C,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAACI,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACgD,GAAI,EAAEjD,UACTE,EAAAA,EAAAA,MAAC4B,EAAAA,GAAI,CAACC,GAAG,uBAAuB5B,UAAU,4DAA2DH,SAAA,EACnGF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,iBAAmB,sBAGpCL,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACgD,GAAI,EAAEjD,UACTF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaH,UAC1BE,EAAAA,EAAAA,MAACgD,EAAAA,EAAW,CAAC/C,UAAU,OAAMH,SAAA,EAC3BF,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,UAASpD,SAAC,SAC1BF,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,QAAOpD,SAAC,cACxBF,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,QAAOpD,SAAC,sBAMhCF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACAY,GAAc,IAAIN,KAAI,CAACmB,EAAU4B,KAE/BvD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqD,GAAI,EAAEtD,UACTF,EAAAA,EAAAA,KAAC0B,EAAc,CAACC,SAAUA,KADV,QAAOA,EAASZ,Y,4FC3G9C,MAIMqC,EAA2BK,EAAAA,YAAiB,CAAAC,EAQ/CC,KAAQ,IARwC,SACjDC,EAAQ,KACRC,EAAI,SACJC,EAAQ,UACRzD,EAEA0B,GAAIgC,EAAY,SACbC,GACJN,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,aAC5C,IAAIO,EAAYF,EAEhB,OADIH,IAAUK,EAAa,GAAEF,eACTjE,EAAAA,EAAAA,KAAK+D,EAAW,IAAKC,EACvCL,IAAKA,EACLtD,UAAW6B,IAAW7B,EAAW8D,EAAWN,GAAS,GAAEI,KAAUJ,MACjE,IAEJT,EAAYgB,YAAc,cAC1BhB,EAAYiB,aAtBS,CACnBP,UAAU,EACVQ,KAAM,SAqBR,S,iHCvBA,MAAMC,EAAuBd,EAAAA,YAC7B,CAAAC,EAMGC,KAAQ,IANV,SACCC,EAAQ,UACRvD,EAAS,QACTiD,EACAvB,GAAIgC,EAAY,SACbhE,GACJ2D,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,YAC5C,OAAoB5D,EAAAA,EAAAA,KAAK+D,EAAW,CAClCJ,IAAKA,EACLtD,UAAW6B,IAAWoB,EAAW,GAAEW,KAAUX,IAAYW,EAAQ5D,MAC9DN,GACH,IAEJwE,EAAQH,YAAc,UACtB,U,eCdA,MAAMI,EAA0Bf,EAAAA,YAAiB,CAAAC,EAM9CC,KAAQ,IANuC,SAChDC,EAAQ,UACRvD,EAEA0B,GAAIgC,EAAY,SACbhE,GACJ2D,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,eACtCa,GAAeC,EAAAA,EAAAA,UAAQ,KAAM,CACjCC,mBAAoBV,KAClB,CAACA,IACL,OAAoBjE,EAAAA,EAAAA,KAAK4E,EAAAA,EAAAA,SAA4B,CACnDC,MAAOJ,EACPvE,UAAuBF,EAAAA,EAAAA,KAAK+D,EAAW,CACrCJ,IAAKA,KACF5D,EACHM,UAAW6B,IAAW7B,EAAW4D,MAEnC,IAEJO,EAAWJ,YAAc,aACzB,UCnBMU,GAAgBC,EAAAA,EAAAA,GAAiB,MACjCC,GAAgBD,EAAAA,EAAAA,GAAiB,MACjCE,GAAWC,EAAAA,EAAAA,GAAmB,aAC9BC,GAAYD,EAAAA,EAAAA,GAAmB,aAAc,CACjDnB,UAAWe,IAEPM,GAAeF,EAAAA,EAAAA,GAAmB,gBAAiB,CACvDnB,UAAWiB,IAEPK,GAAWH,EAAAA,EAAAA,GAAmB,YAAa,CAC/CnB,UAAW,MAEPuB,GAAWJ,EAAAA,EAAAA,GAAmB,YAAa,CAC/CnB,UAAW,MAEPwB,GAAaL,EAAAA,EAAAA,GAAmB,eAChCM,GAAiBN,EAAAA,EAAAA,GAAmB,oBAIpCtD,EAAoB6B,EAAAA,YAAiB,CAAAC,EAWxCC,KAAQ,IAXiC,SAC1CC,EAAQ,UACRvD,EAAS,GACToF,EAAE,KACFC,EAAI,OACJC,EAAM,KACNC,EAAI,SACJ1F,EAEA6B,GAAIgC,EAAY,SACbhE,GACJ2D,EACC,MAAMO,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,QAC5C,OAAoB5D,EAAAA,EAAAA,KAAK+D,EAAW,CAClCJ,IAAKA,KACF5D,EACHM,UAAW6B,IAAW7B,EAAW4D,EAAQwB,GAAO,MAAKA,IAAMC,GAAS,QAAOA,IAAQC,GAAW,UAASA,KACvGzF,SAAU0F,GAAoB5F,EAAAA,EAAAA,KAAKiF,EAAU,CAC3C/E,SAAUA,IACPA,GACL,IAEJ0B,EAAKwC,YAAc,OACnBxC,EAAKyC,aA1BgB,CACnBuB,MAAM,GA0BR,QAAeC,OAAOC,OAAOlE,EAAM,CACjCmE,IAAKxB,EACLyB,MAAOb,EACPc,SAAUb,EACVc,KAAMjB,EACNjD,KAAMqD,EACNc,KAAMb,EACNc,OAAQ5B,EACR6B,OAAQd,EACRe,WAAYd,G,mCC5Dd,MAAMe,E,SAAuB9C,cAAoB,MACjD8C,EAAQnC,YAAc,oBACtB,S,0DCOA,SAAS5D,EAAIN,EAAUsG,GACrB,IAAI9F,EAAQ,EACZ,OAAO+C,EAAAA,SAAAA,IAAmBvD,GAAUuG,GAAsBhD,EAAAA,eAAqBgD,GAASD,EAAKC,EAAO/F,KAAW+F,GACjH,CASA,SAASC,EAAQxG,EAAUsG,GACzB,IAAI9F,EAAQ,EACZ+C,EAAAA,SAAAA,QAAuBvD,GAAUuG,IACbhD,EAAAA,eAAqBgD,IAAQD,EAAKC,EAAO/F,IAAQ,GAEvE,C,mCC1BA,MAAM6F,E,SAAuB9C,cAAoB,MACjD8C,EAAQnC,YAAc,oBACtB,S,sGCGA,MAAMuC,EAAkB,IA6CxB,SAASC,EAAcjE,EAAKkE,EAAKC,GAC/B,MAAMC,GAAcpE,EAAMkE,IAAQC,EAAMD,GAAO,IAC/C,OAAOG,KAAKC,MAAMF,EAAaJ,GAAmBA,CACpD,CAEA,SAASO,EAAiBxD,EAavBC,GAAK,IAbmB,IACzBkD,EAAG,IACHlE,EAAG,IACHmE,EAAG,MACHlG,EAAK,eACLuG,EAAc,QACdC,EAAO,SACPC,EAAQ,UACRhH,EAAS,MACTuC,EAAK,QACLU,EAAO,SACPM,KACG7D,GACJ2D,EACC,OAAoB1D,EAAAA,EAAAA,KAAK,MAAO,CAC9B2D,IAAKA,KACF5D,EACHuE,KAAM,cACNjE,UAAW6B,IAAW7B,EAAY,GAAEuD,QAAgB,CAClD,CAAE,MAAKN,KAAYA,EACnB,CAAE,GAAEM,kBAA0ByD,EAC9B,CAAE,GAAEzD,iBAAyByD,GAAYD,IAE3CxE,MAAO,CACL0E,MAAQ,GAAEV,EAAcjE,EAAKkE,EAAKC,SAC/BlE,GAEL,gBAAiBD,EACjB,gBAAiBkE,EACjB,gBAAiBC,EACjB5G,SAAUiH,GAA8BnH,EAAAA,EAAAA,KAAK,OAAQ,CACnDK,UAAW,kBACXH,SAAUU,IACPA,GAET,CAEA,MAAM8B,EAA2Be,EAAAA,YAAiB,CAAA8D,EAG/C5D,KAAQ,IAHwC,QACjD6D,KACGzH,GACJwH,EAGC,GAFAxH,EAAM6D,UAAWM,EAAAA,EAAAA,IAAmBnE,EAAM6D,SAAU,YAEhD4D,EACF,OAAON,EAAkBnH,EAAO4D,GAGlC,MAAM,IACJkD,EAAG,IACHlE,EAAG,IACHmE,EAAG,MACHlG,EAAK,eACLuG,EAAc,QACdC,EAAO,SACPC,EAAQ,SACRzD,EAAQ,QACRN,EAAO,UACPjD,EAAS,SACTH,KACGuH,GACD1H,EACJ,OAAoBC,EAAAA,EAAAA,KAAK,MAAO,CAC9B2D,IAAKA,KACF8D,EACHpH,UAAW6B,IAAW7B,EAAWuD,GACjC1D,SAAUA,GAAWM,EAAAA,EAAAA,GAAIN,GAAUuG,IAAsBiB,EAAAA,EAAAA,cAAajB,EAAO,CAC3Ee,SAAS,MACLN,EAAkB,CACtBL,MACAlE,MACAmE,MACAlG,QACAuG,iBACAC,UACAC,WACAzD,WACAN,WACCK,IACH,IAEJjB,EAAY0B,YAAc,cAC1B1B,EAAY2B,aA/FS,CACnBwC,IAAK,EACLC,IAAK,IACLO,UAAU,EACVG,SAAS,EACTL,gBAAgB,EAChBC,SAAS,GA0FX,S,iFCvIA,QAAgB/G,GAA0BoD,EAAAA,YAAiB,CAACkE,EAAGhE,KAAqB3D,EAAAA,EAAAA,KAAK,MAAO,IAAK2H,EACnGhE,IAAKA,EACLtD,UAAW6B,IAAWyF,EAAEtH,UAAWA,M","sources":["components/PageTitle.tsx","pages/apps/CRM/Properties/data.tsx","pages/apps/CRM/Properties/index.tsx","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import placeholderImage from \"../../../../assets/images/user-1.png\";\n\nexport interface PropertyType {\n  id: number;\n  name: string;\n  address: string;\n  status: 'Occupied' | 'Partially Occupied' | 'Vacant';\n  description: string;\n  units: number;\n  rentAmount: number;\n  managers: {\n    image: string;\n    name: string;\n  }[];\n  occupancyRate: number;\n}\n\nconst properties: PropertyType[] = [\n  {\n    id: 1,\n    name: \"Sunset Apartments\",\n    address: \"123 Main St, Nairobi\",\n    status: \"Occupied\",\n    description: \"A modern apartment complex with stunning views of the city skyline.\",\n    units: 50,\n    rentAmount: 1000,\n    managers: [\n      { image: placeholderImage, name: \"John Doe\" },\n      { image: placeholderImage, name: \"Jane Smith\" },\n    ],\n    occupancyRate: 95,\n  },\n  {\n    id: 2,\n    name: \"Green Valley Homes\",\n    address: \"456 Park Ave, Mombasa\",\n    status: \"Partially Occupied\",\n    description: \"Eco-friendly homes in a quiet suburban neighborhood.\",\n    units: 30,\n    rentAmount: 1200,\n    managers: [\n      { image: placeholderImage, name: \"Alice Johnson\" },\n    ],\n    occupancyRate: 70,\n  },\n  {\n    id: 3,\n    name: \"City Center Office Complex\",\n    address: \"789 Business Blvd, Nairobi\",\n    status: \"Vacant\",\n    description: \"Prime office space in the heart of the business district.\",\n    units: 100,\n    rentAmount: 2000,\n    managers: [\n      { image: placeholderImage, name: \"Bob Wilson\" },\n      { image: placeholderImage, name: \"Carol Brown\" },\n    ],\n    occupancyRate: 0,\n  },\n  // Add more properties as needed\n];\n\nexport { properties };","import React from \"react\";\nimport { Row, Col, Card, Button, ButtonGroup, Dropdown, ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\n\n// dummy data\nimport { properties, PropertyType } from \"./data\";\n\n// single property\nconst SingleProperty = (props: { property: PropertyType }) => {\n  const property = props.property || {};\n\n  return (\n    <Card className=\"property-box\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop p-0 shadow-none\">\n            <i className=\"mdi mdi-dots-horizontal m-0 text-muted h3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item><i className=\"mdi mdi-pencil me-1\"></i>Edit</Dropdown.Item>\n            <Dropdown.Item><i className=\"mdi mdi-delete me-1\"></i>Delete</Dropdown.Item>\n            <Dropdown.Item><i className=\"mdi mdi-email-outline me-1\"></i>Send Message</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"mt-0\">\n          <Link to={`/apps/properties/${property.id}`} className=\"text-dark\">\n            {property.name}\n          </Link>\n        </h4>\n        <p className=\"text-muted text-uppercase\"><i className=\"mdi mdi-map-marker\"></i> <small>{property.address}</small></p>\n\n        <div className={classNames(\"badge\", {\n          \"bg-soft-success text-success\": property.status === \"Occupied\",\n          \"bg-soft-warning text-warning\": property.status === \"Partially Occupied\",\n          \"bg-soft-danger text-danger\": property.status === \"Vacant\",\n        }, \"mb-3\")}>\n          {property.status}\n        </div>\n\n        <p className=\"text-muted font-13 mb-3 sp-line-2\">{property.description}</p>\n        <p className=\"mb-1\">\n          <span className=\"pe-2 text-nowrap mb-2 d-inline-block\">\n            <i className=\"mdi mdi-home-variant text-muted me-1\"></i>\n            <b>{property.units}</b> Units\n          </span>\n          <span className=\"text-nowrap mb-2 d-inline-block\">\n            <i className=\"mdi mdi-cash text-muted me-1\"></i>\n            <b>${property.rentAmount}</b> /month\n          </span>\n        </p>\n        <div className=\"avatar-group mb-3\">\n          {(property.managers || []).map((manager, index) => {\n            return (\n              <OverlayTrigger\n                key={index}\n                placement=\"bottom\"\n                overlay={<Tooltip id={manager.name}>{manager.name}</Tooltip>}\n              >\n                <Link to=\"#\" className=\"avatar-group-item\">\n                  <img src={manager.image} className=\"rounded-circle avatar-sm\" alt=\"\" />\n                </Link>\n              </OverlayTrigger>\n            );\n          })}\n        </div>\n        <p className=\"mb-2 fw-semibold\">\n          Occupancy Rate:\n          <span className=\"float-end\">{property.occupancyRate}%</span>\n        </p>\n        <ProgressBar now={property.occupancyRate} className=\"mb-1\" style={{ height: \"7px\" }} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Properties = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Properties\", path: \"/apps/properties\" },\n          { label: \"Properties List\", path: \"/apps/properties\", active: true },\n        ]}\n        title={\"Properties List\"}\n      />\n\n      <Row className=\"mb-2\">\n        <Col sm={4}>\n          <Link to=\"/apps/properties/add\" className=\"btn btn-danger rounded-pill waves-effect waves-light mb-3\">\n            <i className=\"mdi mdi-plus\"></i> Add Property\n          </Link>\n        </Col>\n        <Col sm={8}>\n          <div className=\"text-sm-end\">\n            <ButtonGroup className=\"mb-3\">\n              <Button variant=\"primary\">All</Button>\n              <Button variant=\"light\">Occupied</Button>\n              <Button variant=\"light\">Vacant</Button>\n            </ButtonGroup>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        {(properties || []).map((property, i) => {\n          return (\n            <Col lg={4} key={`prop-${property.id}`}>\n              <SingleProperty property={property} />\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n};\n\nexport default Properties;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","properties","id","name","address","status","description","units","rentAmount","managers","image","placeholderImage","occupancyRate","SingleProperty","property","Card","Dropdown","align","as","Link","to","classNames","manager","OverlayTrigger","placement","overlay","Tooltip","src","alt","ProgressBar","now","style","height","Properties","_Fragment","PageTitle","breadCrumbItems","title","sm","ButtonGroup","Button","variant","i","lg","React","_ref","ref","bsPrefix","size","vertical","Component","rest","prefix","useBootstrapPrefix","baseClass","displayName","defaultProps","role","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","context","func","child","forEach","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","visuallyHidden","striped","animated","width","_ref2","isChild","wrapperProps","cloneElement","p"],"sourceRoot":""}