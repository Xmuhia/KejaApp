{"version":3,"file":"static/js/7953.2db00bbd.chunk.js","mappings":"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","sources":["components/PageTitle.tsx","pages/dashboard/Tenant/StatisticsWidget3.tsx","pages/dashboard/Tenant/RentPaymentOverview.tsx","pages/dashboard/Tenant/RentPaymentGraph.tsx","pages/dashboard/Tenant/UtilityUsageChart.tsx","pages/dashboard/Tenant/LeaseInformation.tsx","pages/dashboard/Tenant/CommunicationCenter.tsx","pages/dashboard/Tenant/data.ts","pages/dashboard/Tenant/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <div className=\"page-title-right\">\n            <Breadcrumb className=\"m-0\">\n              <Breadcrumb.Item href=\"/\">Keja Plus</Breadcrumb.Item>\n\n              {(props[\"breadCrumbItems\"] || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n          <h4 className=\"page-title\">{props[\"title\"]}</h4>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport CountUp from 'react-countup';\n\ninterface TrendInfo {\n  label: string;\n  value: string;\n  icon: string;\n  variant: 'success' | 'warning' | 'danger' | 'info';\n}\n\ninterface CountUpOptions {\n  suffix?: string;\n  prefix?: string;\n  separator?: string;\n  decimals?: number;\n  duration?: number;\n}\n\ninterface StatisticsWidget3Props {\n  title: string;\n  stats: string;\n  trend: TrendInfo;\n  counterOptions?: CountUpOptions;\n}\n\nconst StatisticsWidget3: React.FC<StatisticsWidget3Props> = ({\n  title,\n  stats,\n  trend,\n  counterOptions = {}\n}) => {\n  const {\n    suffix = '',\n    prefix = '',\n    separator = ',',\n    decimals = 0,\n    duration = 3\n  } = counterOptions;\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mt-0 mb-4\">{title}</h4>\n        <div className=\"widget-chart-1\">\n          <div className=\"widget-chart-box-1 float-start\" dir=\"ltr\">\n            <i className={`${trend.icon} widget-icon bg-${trend.variant} rounded-circle`}></i>\n          </div>\n          <div className=\"widget-detail-1 text-end\">\n            <h2 className=\"fw-normal pt-2 mb-1\">\n              <CountUp\n                end={parseFloat(stats)}\n                suffix={suffix}\n                prefix={prefix}\n                separator={separator}\n                decimals={decimals}\n                duration={duration}\n              />\n            </h2>\n            <p className=\"text-muted mb-1\">{trend.label}</p>\n          </div>\n        </div>\n        <div className={`text-${trend.variant}`}>\n          {trend.value}{' '}\n          <i className={`${trend.icon === 'mdi mdi-arrow-up-bold' ? 'mdi mdi-arrow-up-bold' : 'mdi mdi-arrow-down-bold'}`}></i>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsWidget3;","import React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport { TenantData } from './data';\nimport StatisticsWidget3 from './StatisticsWidget3';\n\ninterface RentPaymentOverviewProps {\n  data: TenantData;\n}\n\nconst RentPaymentOverview: React.FC<RentPaymentOverviewProps> = ({ data }) => {\n  const { currentBalance, nextPaymentDue, lastPayment } = data;\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n  };\n\n  const getDaysUntilDue = () => {\n    const today = new Date();\n    const dueDate = new Date(nextPaymentDue.date);\n    const diffTime = dueDate.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Rent Payment Overview</h4>\n        <Row>\n          <Col md={6} xl={3}>\n            <StatisticsWidget3\n              title=\"Current Balance\"\n              stats={currentBalance.toString()}\n              trend={{\n                label: 'Since last month',\n                value: currentBalance > 0 ? 'Outstanding' : 'Paid',\n                icon: currentBalance > 0 ? 'mdi mdi-arrow-up-bold' : 'mdi mdi-arrow-down-bold',\n                variant: currentBalance > 0 ? 'danger' : 'success',\n              }}\n              counterOptions={{\n                prefix: '$',\n                separator: ',',\n              }}\n            />\n          </Col>\n          <Col md={6} xl={3}>\n            <StatisticsWidget3\n              title=\"Next Payment Due\"\n              stats={nextPaymentDue.amount.toString()}\n              trend={{\n                label: 'Due Date',\n                value: formatDate(nextPaymentDue.date),\n                icon: 'mdi mdi-calendar',\n                variant: getDaysUntilDue() <= 7 ? 'warning' : 'info',\n              }}\n              counterOptions={{\n                prefix: '$',\n                separator: ',',\n              }}\n            />\n          </Col>\n          <Col md={6} xl={3}>\n            <StatisticsWidget3\n              title=\"Last Payment\"\n              stats={lastPayment.amount.toString()}\n              trend={{\n                label: 'Paid on',\n                value: formatDate(lastPayment.date),\n                icon: 'mdi mdi-check-circle',\n                variant: 'success',\n              }}\n              counterOptions={{\n                prefix: '$',\n                separator: ',',\n              }}\n            />\n          </Col>\n          <Col md={6} xl={3}>\n            <Card className=\"h-100\">\n              <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\n                <h5 className=\"mb-3\">Quick Actions</h5>\n                <Button variant=\"primary\" className=\"mb-2 w-100\">Pay Rent Now</Button>\n                <Button variant=\"outline-secondary\" className=\"w-100\">View Payment History</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RentPaymentOverview;","import React, { useState } from 'react';\nimport { Card, Dropdown, Form } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\ninterface RentPayment {\n  month: string;\n  onTimeAmount: number;\n  lateAmount: number;\n}\n\ninterface RentPaymentGraphProps {\n  rentData: RentPayment[];\n}\n\nconst RentPaymentGraph: React.FC<RentPaymentGraphProps> = ({ rentData }) => {\n  const [timeFrame, setTimeFrame] = useState<'6months' | '1year'>('6months');\n\n  const filteredData = rentData.slice(timeFrame === '6months' ? -6 : -12);\n\n  const chartOptions: ApexOptions = {\n    chart: {\n      type: 'bar',\n      height: 350,\n      stacked: true,\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '55%',\n        borderRadius: 5,\n      },\n    },\n    xaxis: {\n      categories: filteredData.map(item => item.month),\n    },\n    yaxis: {\n      title: {\n        text: 'Rent Amount ($)'\n      },\n    },\n    colors: ['#008FFB', '#FF4560'],\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      position: 'top',\n    },\n    fill: {\n      opacity: 1\n    },\n  };\n\n  const series = [\n    {\n      name: 'On-time Payments',\n      data: filteredData.map(item => item.onTimeAmount)\n    },\n    {\n      name: 'Late Payments',\n      data: filteredData.map(item => item.lateAmount)\n    }\n  ];\n\n  const totalRent = filteredData.reduce((sum, item) => sum + item.onTimeAmount + item.lateAmount, 0);\n  const totalLate = filteredData.reduce((sum, item) => sum + item.lateAmount, 0);\n  const latePercentage = (totalLate / totalRent) * 100;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Download Report</Dropdown.Item>\n            <Dropdown.Item>Set Payment Reminders</Dropdown.Item>\n            <Dropdown.Item>View Detailed Breakdown</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Rent Payment Trends</h4>\n        <Form.Group className=\"mb-3\">\n          <Form.Select\n            value={timeFrame}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setTimeFrame(e.target.value as '6months' | '1year')}\n          >\n            <option value=\"6months\">Last 6 Months</option>\n            <option value=\"1year\">Last 1 Year</option>\n          </Form.Select>\n        </Form.Group>\n        <Chart\n          options={chartOptions}\n          series={series}\n          type=\"bar\"\n          height={350}\n        />\n        <div className=\"mt-3 text-center\">\n          <p>Total Rent Collected: ${totalRent.toLocaleString()}</p>\n          <p>Late Payment Percentage: {latePercentage.toFixed(2)}%</p>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RentPaymentGraph;","import React, { useState, useMemo } from 'react';\nimport { Card, Dropdown, Row, Col, Table, Tab, Tabs } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\nimport { UtilityUsage } from './data';\n\ninterface UtilityUsageChartProps {\n  data: UtilityUsage[];\n}\n\nconst UtilityUsageChart: React.FC<UtilityUsageChartProps> = ({ data }) => {\n  const [activeTab, setActiveTab] = useState<string>('chart');\n  const [selectedMonth, setSelectedMonth] = useState<string>(data[data.length - 1].month);\n\n  const calculateWaterUsage = (start: number, end: number) => end - start;\n\n  const waterUsageData = useMemo(() => \n    data.map(item => ({\n      month: item.month,\n      usage: calculateWaterUsage(item.waterStartReading, item.waterEndReading)\n    })),\n    [data]\n  );\n\n  const getTotalWaterUsage = useMemo(() => \n    waterUsageData.reduce((sum, item) => sum + item.usage, 0),\n    [waterUsageData]\n  );\n\n  const getAverageWaterUsage = useMemo(() => \n    getTotalWaterUsage / data.length,\n    [getTotalWaterUsage, data.length]\n  );\n\n  const chartOptions: ApexOptions = {\n    chart: {\n      type: 'line',\n      height: 350\n    },\n    xaxis: {\n      categories: data.map(item => item.month)\n    },\n    yaxis: [\n      {\n        title: { text: 'Water Usage (units)' },\n        min: 0\n      },\n      {\n        title: { text: 'Garbage Cost (KES)' },\n        opposite: true,\n        min: 0\n      }\n    ],\n    colors: ['#1abc9c', '#f1556c'],\n    stroke: { width: 3, curve: 'smooth' }\n  };\n\n  const series = [\n    {\n      name: 'Water Usage',\n      type: 'line',\n      data: waterUsageData.map(item => item.usage)\n    },\n    {\n      name: 'Garbage Cost',\n      type: 'bar',\n      data: data.map(item => item.garbageCost)\n    }\n  ];\n\n  const selectedMonthData = data.find(item => item.month === selectedMonth);\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Download Report</Dropdown.Item>\n            <Dropdown.Item>View Detailed Breakdown</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"header-title mb-3\">Utility Usage</h4>\n\n        <Tabs\n          activeKey={activeTab}\n          onSelect={(k) => setActiveTab(k || 'chart')}\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"chart\" title=\"Usage Chart\">\n            <Chart\n              options={chartOptions}\n              series={series}\n              type=\"line\"\n              height={350}\n            />\n            <Row className=\"mt-3\">\n              <Col sm={6}>\n                <h5>Total Water Usage</h5>\n                <p>{getTotalWaterUsage} units</p>\n              </Col>\n              <Col sm={6}>\n                <h5>Average Monthly Water Usage</h5>\n                <p>{getAverageWaterUsage.toFixed(2)} units</p>\n              </Col>\n            </Row>\n          </Tab>\n          <Tab eventKey=\"readings\" title=\"Meter Readings\">\n            <Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Month</th>\n                  <th>Start Reading</th>\n                  <th>End Reading</th>\n                  <th>Usage (units)</th>\n                  <th>Garbage Cost (KES)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(item => (\n                  <tr key={item.month}>\n                    <td>{item.month}</td>\n                    <td>{item.waterStartReading}</td>\n                    <td>{item.waterEndReading}</td>\n                    <td>{calculateWaterUsage(item.waterStartReading, item.waterEndReading)}</td>\n                    <td>{item.garbageCost}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Tab>\n          <Tab eventKey=\"photos\" title=\"Meter Photos\">\n            <Row className=\"mb-3\">\n              <Col>\n                <select \n                  className=\"form-select\" \n                  value={selectedMonth} \n                  onChange={(e) => setSelectedMonth(e.target.value)}\n                >\n                  {data.map(item => (\n                    <option key={item.month} value={item.month}>{item.month}</option>\n                  ))}\n                </select>\n              </Col>\n            </Row>\n            {selectedMonthData && (\n              <Row>\n                <Col md={6}>\n                  <Card>\n                    <Card.Body>\n                      <h5>Start of Month Reading</h5>\n                      <img src=\"/api/placeholder/400/300\" alt=\"Start of month meter reading\" className=\"img-fluid mb-2\" />\n                      <p>Reading: {selectedMonthData.waterStartReading}</p>\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col md={6}>\n                  <Card>\n                    <Card.Body>\n                      <h5>End of Month Reading</h5>\n                      <img src=\"/api/placeholder/400/300\" alt=\"End of month meter reading\" className=\"img-fluid mb-2\" />\n                      <p>Reading: {selectedMonthData.waterEndReading}</p>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            )}\n          </Tab>\n        </Tabs>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default UtilityUsageChart;","import React, { useState } from 'react';\nimport { Card, Row, Col, Button, Modal, Form } from 'react-bootstrap';\nimport { LeaseInfo } from './data';\n\ninterface LeaseInformationProps {\n  data: LeaseInfo;\n}\n\nconst LeaseInformation: React.FC<LeaseInformationProps> = ({ data }) => {\n  const [showRenewalModal, setShowRenewalModal] = useState(false);\n  const [showDocumentsModal, setShowDocumentsModal] = useState(false);\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n  };\n\n  const getDaysRemaining = () => {\n    const today = new Date();\n    const endDate = new Date(data.endDate);\n    const diffTime = endDate.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  const handleRenewalRequest = () => {\n    // Here you would typically send the renewal request to your backend\n    console.log('Renewal requested');\n    setShowRenewalModal(false);\n    // You might want to update the lease information or show a confirmation message\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Lease Information</h4>\n        <Row>\n          <Col md={6}>\n            <p><strong>Start Date:</strong> {formatDate(data.startDate)}</p>\n            <p><strong>End Date:</strong> {formatDate(data.endDate)}</p>\n            <p><strong>Days Remaining:</strong> {getDaysRemaining()}</p>\n          </Col>\n          <Col md={6}>\n            <p><strong>Monthly Rent:</strong> ${data.monthlyRent.toLocaleString()}</p>\n            <p><strong>Security Deposit:</strong> ${data.securityDeposit.toLocaleString()}</p>\n            <p><strong>Renewal Option:</strong> {data.renewalOption ? 'Available' : 'Not Available'}</p>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <Button variant=\"primary\" className=\"me-2\" onClick={() => setShowRenewalModal(true)}>\n              Request Renewal\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setShowDocumentsModal(true)}>\n              View Lease Documents\n            </Button>\n          </Col>\n        </Row>\n\n        {/* Renewal Request Modal */}\n        <Modal show={showRenewalModal} onHide={() => setShowRenewalModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Request Lease Renewal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Current lease end date: {formatDate(data.endDate)}</p>\n            <Form>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Requested Renewal Period</Form.Label>\n                <Form.Select>\n                  <option>6 months</option>\n                  <option>1 year</option>\n                  <option>2 years</option>\n                </Form.Select>\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Additional Comments</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowRenewalModal(false)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleRenewalRequest}>\n              Submit Request\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Lease Documents Modal */}\n        <Modal show={showDocumentsModal} onHide={() => setShowDocumentsModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Lease Documents</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ul>\n              <li><a href=\"#\">Lease Agreement</a></li>\n              <li><a href=\"#\">Addendum 1 - Pet Policy</a></li>\n              <li><a href=\"#\">Addendum 2 - Parking Agreement</a></li>\n              <li><a href=\"#\">Move-In Inspection Report</a></li>\n            </ul>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowDocumentsModal(false)}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LeaseInformation;","import React, { useState } from 'react';\nimport { Card, Tab, Nav, Form, Button, Badge, ListGroup } from 'react-bootstrap';\nimport { Message } from './data';\n\ninterface CommunicationCenterProps {\n  messages: Message[];\n}\n\nconst CommunicationCenter: React.FC<CommunicationCenterProps> = ({ messages }) => {\n  const [activeTab, setActiveTab] = useState('messages');\n  const [newMessage, setNewMessage] = useState('');\n\n  const announcements = messages.filter(msg => msg.isAnnouncement);\n  const directMessages = messages.filter(msg => !msg.isAnnouncement);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      // Here you would typically send the message to your backend\n      console.log('Sending message:', newMessage);\n      setNewMessage('');\n      // You might want to update the messages list here or refetch data\n    }\n  };\n\n  const renderMessages = (messageList: Message[]) => (\n    <ListGroup variant=\"flush\">\n      {messageList.map((message, index) => (\n        <ListGroup.Item key={index} className=\"border-bottom\">\n          <div className=\"d-flex\">\n            <img src={message.userPic.src} alt={message.userName} className=\"rounded-circle me-2\" width=\"32\" height=\"32\" />\n            <div className=\"flex-grow-1\">\n              <h6 className=\"mt-0 mb-1\">{message.userName}</h6>\n              <p className=\"text-muted mb-0\">{message.text}</p>\n              <small className=\"text-muted\">{message.postedOn}</small>\n            </div>\n          </div>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Communication Center</h4>\n        <Tab.Container activeKey={activeTab} onSelect={(k) => setActiveTab(k || 'messages')}>\n          <Nav variant=\"tabs\" className=\"nav-bordered\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"messages\">\n                Messages\n                <Badge bg=\"danger\" className=\"ms-1\">{directMessages.length}</Badge>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"announcements\">\n                Announcements\n                <Badge bg=\"warning\" className=\"ms-1\">{announcements.length}</Badge>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"documents\">Documents</Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"messages\" className=\"pt-3\">\n              {renderMessages(directMessages)}\n              <Form className=\"mt-3\">\n                <Form.Group className=\"mb-3\">\n                  <Form.Control \n                    as=\"textarea\" \n                    rows={3} \n                    placeholder=\"Type your message here...\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                  />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={handleSendMessage}>Send Message</Button>\n              </Form>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"announcements\" className=\"pt-3\">\n              {renderMessages(announcements)}\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"documents\" className=\"pt-3\">\n              <ListGroup>\n                <ListGroup.Item action href=\"#\" className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <i className=\"mdi mdi-file-document-outline me-2\"></i>\n                    Community Guidelines\n                  </div>\n                  <Badge bg=\"primary\" pill>New</Badge>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"#\" className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <i className=\"mdi mdi-file-document-outline me-2\"></i>\n                    Maintenance Request Form\n                  </div>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"#\" className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <i className=\"mdi mdi-file-document-outline me-2\"></i>\n                    Parking Policy\n                  </div>\n                </ListGroup.Item>\n              </ListGroup>\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CommunicationCenter;","import profilePicPath from \"../../../assets/images/user-1.png\";\n\nexport type StaticImageData = {\n  src: string;\n  height: number;\n  width: number;\n  blurDataURL?: string;\n};\n\nconst profilePic: StaticImageData = {\n  src: profilePicPath,\n  height: 100,\n  width: 100,\n};\n\nexport interface TenantData {\n  currentBalance: number;\n  nextPaymentDue: {\n    amount: number;\n    date: string;\n  };\n  lastPayment: {\n    amount: number;\n    date: string;\n  };\n}\n\nexport interface UtilityUsage {\n  month: string;\n  waterStartReading: number;\n  waterEndReading: number;\n  garbageCost: number;\n}\n\nexport interface LeaseInfo {\n  startDate: string;\n  endDate: string;\n  monthlyRent: number;\n  securityDeposit: number;\n  renewalOption: boolean;\n}\n\nexport interface Message {\n  id: number;\n  userPic: StaticImageData;\n  userName: string;\n  text: string;\n  postedOn: string;\n  isAnnouncement?: boolean;\n}\n\nexport interface RentPayment {\n  month: string;\n  onTimeAmount: number;\n  lateAmount: number;\n}\n\n// Mock data\nexport const tenantData: TenantData = {\n  currentBalance: 1200,\n  nextPaymentDue: {\n    amount: 1000,\n    date: \"2024-10-01\"\n  },\n  lastPayment: {\n    amount: 1000,\n    date: \"2024-09-01\"\n  }\n};\n\nexport const utilityData: UtilityUsage[] = [\n  { month: \"Jan\", waterStartReading: 1000, waterEndReading: 1150, garbageCost: 500 },\n  { month: \"Feb\", waterStartReading: 1150, waterEndReading: 1290, garbageCost: 500 },\n  { month: \"Mar\", waterStartReading: 1290, waterEndReading: 1450, garbageCost: 500 },\n  { month: \"Apr\", waterStartReading: 1450, waterEndReading: 1605, garbageCost: 500 },\n  { month: \"May\", waterStartReading: 1605, waterEndReading: 1770, garbageCost: 500 },\n  { month: \"Jun\", waterStartReading: 1770, waterEndReading: 1950, garbageCost: 500 },\n];\n\nexport const leaseData: LeaseInfo = {\n  startDate: \"2024-01-01\",\n  endDate: \"2024-12-31\",\n  monthlyRent: 1000,\n  securityDeposit: 1500,\n  renewalOption: true\n};\n\nexport const messages: Message[] = [\n  {\n    id: 1,\n    userPic: profilePic,\n    userName: \"Property Manager\",\n    text: \"Your maintenance request has been received and scheduled for tomorrow.\",\n    postedOn: \"10:00\",\n    isAnnouncement: false\n  },\n  {\n    id: 2,\n    userPic: profilePic,\n    userName: \"Admin\",\n    text: \"Building-wide pest control scheduled for next week. Please secure your pets.\",\n    postedOn: \"14:30\",\n    isAnnouncement: true\n  },\n  {\n    id: 3,\n    userPic: profilePic,\n    userName: \"Property Manager\",\n    text: \"Reminder: Rent is due in 5 days. Please ensure timely payment.\",\n    postedOn: \"09:15\",\n    isAnnouncement: false\n  }\n];\n\nexport const rentPaymentData: RentPayment[] = [\n  { month: \"Jan\", onTimeAmount: 8000, lateAmount: 2000 },\n  { month: \"Feb\", onTimeAmount: 8500, lateAmount: 1500 },\n  { month: \"Mar\", onTimeAmount: 9000, lateAmount: 1000 },\n  { month: \"Apr\", onTimeAmount: 8800, lateAmount: 1200 },\n  { month: \"May\", onTimeAmount: 9200, lateAmount: 800 },\n  { month: \"Jun\", onTimeAmount: 9500, lateAmount: 500 },\n];","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport PageTitle from \"../../../components/PageTitle\";\nimport RentPaymentOverview from \"./RentPaymentOverview\";\nimport RentPaymentGraph from \"./RentPaymentGraph\";\nimport UtilityUsageChart from \"./UtilityUsageChart\";\nimport LeaseInformation from \"./LeaseInformation\";\nimport CommunicationCenter from \"./CommunicationCenter\";\nimport { tenantData, rentPaymentData, utilityData, leaseData, messages } from \"./data\";\n\nconst TenantDashboard: React.FC = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Dashboards\", path: \"/tenant-dashboard\" },\n          { label: \"Tenant Dashboard\", path: \"/tenant-dashboard\", active: true },\n        ]}\n        title={\"Tenant Dashboard\"}\n      />\n      <Row>\n        <Col xl={12}>\n          <RentPaymentOverview data={tenantData} />\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={6}>\n          <RentPaymentGraph rentData={rentPaymentData} />\n        </Col>\n        <Col xl={6}>\n          <UtilityUsageChart data={utilityData} />\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={6}>\n          <LeaseInformation data={leaseData} />\n        </Col>\n        <Col xl={6}>\n          <CommunicationCenter messages={messages} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default TenantDashboard;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","href","map","item","index","active","label","path","_ref","title","stats","trend","counterOptions","suffix","prefix","separator","decimals","duration","Card","dir","icon","variant","CountUp","end","parseFloat","value","data","currentBalance","nextPaymentDue","lastPayment","formatDate","dateString","Date","toLocaleDateString","year","month","day","md","xl","StatisticsWidget3","toString","amount","date","getDaysUntilDue","today","diffTime","getTime","Math","ceil","Button","rentData","timeFrame","setTimeFrame","useState","filteredData","slice","chartOptions","chart","type","height","stacked","plotOptions","bar","horizontal","columnWidth","borderRadius","xaxis","categories","yaxis","text","colors","dataLabels","enabled","legend","position","fill","opacity","series","name","onTimeAmount","lateAmount","totalRent","reduce","sum","latePercentage","Dropdown","align","as","Form","onChange","e","target","Chart","options","toLocaleString","toFixed","activeTab","setActiveTab","selectedMonth","setSelectedMonth","length","calculateWaterUsage","start","waterUsageData","useMemo","usage","waterStartReading","waterEndReading","getTotalWaterUsage","getAverageWaterUsage","min","opposite","stroke","width","curve","garbageCost","selectedMonthData","find","Tabs","activeKey","onSelect","k","Tab","eventKey","sm","Table","striped","bordered","hover","size","src","alt","showRenewalModal","setShowRenewalModal","showDocumentsModal","setShowDocumentsModal","startDate","endDate","getDaysRemaining","monthlyRent","securityDeposit","renewalOption","onClick","Modal","show","onHide","closeButton","rows","handleRenewalRequest","console","log","messages","newMessage","setNewMessage","announcements","filter","msg","isAnnouncement","directMessages","renderMessages","messageList","ListGroup","message","userPic","userName","postedOn","Nav","Badge","bg","placeholder","handleSendMessage","trim","action","pill","profilePic","tenantData","utilityData","leaseData","id","rentPaymentData","TenantDashboard","_Fragment","PageTitle","breadCrumbItems","RentPaymentOverview","RentPaymentGraph","UtilityUsageChart","LeaseInformation","CommunicationCenter","React","ref","bsPrefix","Component","useBootstrapPrefix","classNames","displayName","defaultProps","context","ListGroupItem","disabled","navItemProps","meta","useNavItem","key","makeEventKey","handleClick","useEventCallback","event","preventDefault","stopPropagation","undefined","tabIndex","isActive","initialBsPrefix","controlledProps","useUncontrolled","horizontalVariant","BaseNav","Object","assign","Item"],"sourceRoot":""}